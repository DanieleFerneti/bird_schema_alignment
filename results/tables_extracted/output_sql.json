[
    {
        "question_id": 1471,
        "db_id": "debit_card_specializing",
        "query": "SELECT  CAST(SUM(CASE WHEN `Currency` = 'EUR' THEN 1 ELSE 0 END) AS DOUBLE) / SUM(CASE WHEN `Currency` = 'CZK' THEN 1 ELSE 0 END) FROM `customers`",
        "tables_extracted": [
            "customers"
        ]
    },
    {
        "question_id": 1472,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  `T1`.`CustomerID`\nFROM `customers` AS `T1`\nINNER JOIN `yearmonth` AS `T2`\n  ON `T1`.`CustomerID` = `T2`.`CustomerID`\nWHERE\n  `T1`.`Segment` = 'LAM' AND SUBSTR(`T2`.`Date`, 1, 4) = '2012'\nGROUP BY\n  `T1`.`CustomerID`\nORDER BY\n  SUM(`T2`.`Consumption`) ASC\nLIMIT 1",
        "tables_extracted": [
            "customers",
            "yearmonth"
        ]
    },
    {
        "question_id": 1473,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  AVG(`T2`.`Consumption`) / 12\nFROM `customers` AS `T1`\nINNER JOIN `yearmonth` AS `T2`\n  ON `T1`.`CustomerID` = `T2`.`CustomerID`\nWHERE\n  SUBSTR(`T2`.`Date`, 1, 4) = '2013' AND `T1`.`Segment` = 'SME'",
        "tables_extracted": [
            "customers",
            "yearmonth"
        ]
    },
    {
        "question_id": 1476,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  SUM(CASE WHEN `T1`.`Currency` = 'CZK' THEN `T2`.`Consumption` ELSE 0 END) - SUM(CASE WHEN `T1`.`Currency` = 'EUR' THEN `T2`.`Consumption` ELSE 0 END)\nFROM `customers` AS `T1`\nINNER JOIN `yearmonth` AS `T2`\n  ON `T1`.`CustomerID` = `T2`.`CustomerID`\nWHERE\n  SUBSTR(`T2`.`Date`, 1, 4) = '2012'",
        "tables_extracted": [
            "customers",
            "yearmonth"
        ]
    },
    {
        "question_id": 1479,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  SUBSTR(`T2`.`Date`, 1, 4)\nFROM `customers` AS `T1`\nINNER JOIN `yearmonth` AS `T2`\n  ON `T1`.`CustomerID` = `T2`.`CustomerID`\nWHERE\n  `T1`.`Currency` = 'CZK'\nGROUP BY\n  SUBSTR(`T2`.`Date`, 1, 4)\nORDER BY\n  SUM(`T2`.`Consumption`) DESC\nLIMIT 1",
        "tables_extracted": [
            "customers",
            "yearmonth"
        ]
    },
    {
        "question_id": 1480,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  SUBSTR(`T2`.`Date`, 5, 2)\nFROM `customers` AS `T1`\nINNER JOIN `yearmonth` AS `T2`\n  ON `T1`.`CustomerID` = `T2`.`CustomerID`\nWHERE\n  SUBSTR(`T2`.`Date`, 1, 4) = '2013' AND `T1`.`Segment` = 'SME'\nGROUP BY\n  SUBSTR(`T2`.`Date`, 5, 2)\nORDER BY\n  SUM(`T2`.`Consumption`) DESC\nLIMIT 1",
        "tables_extracted": [
            "customers",
            "yearmonth"
        ]
    },
    {
        "question_id": 1481,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `T1`.`Segment` = 'SME' THEN `T2`.`Consumption` ELSE 0 END) AS DOUBLE) / COUNT(`T1`.`CustomerID`) - CAST(SUM(CASE WHEN `T1`.`Segment` = 'LAM' THEN `T2`.`Consumption` ELSE 0 END) AS DOUBLE) / COUNT(`T1`.`CustomerID`),\n  CAST(SUM(CASE WHEN `T1`.`Segment` = 'LAM' THEN `T2`.`Consumption` ELSE 0 END) AS DOUBLE) / COUNT(`T1`.`CustomerID`) - CAST(SUM(CASE WHEN `T1`.`Segment` = 'KAM' THEN `T2`.`Consumption` ELSE 0 END) AS DOUBLE) / COUNT(`T1`.`CustomerID`),\n  CAST(SUM(CASE WHEN `T1`.`Segment` = 'KAM' THEN `T2`.`Consumption` ELSE 0 END) AS DOUBLE) / COUNT(`T1`.`CustomerID`) - CAST(SUM(CASE WHEN `T1`.`Segment` = 'SME' THEN `T2`.`Consumption` ELSE 0 END) AS DOUBLE) / COUNT(`T1`.`CustomerID`)\nFROM `customers` AS `T1`\nINNER JOIN `yearmonth` AS `T2`\n  ON `T1`.`CustomerID` = `T2`.`CustomerID`\nWHERE\n  `T1`.`Currency` = 'CZK'\n  AND `T2`.`Consumption` = (\n    SELECT\n      MIN(`Consumption`)\n    FROM `yearmonth`\n  )\n  AND `T2`.`Date` BETWEEN 201301 AND 201312",
        "tables_extracted": [
            "customers",
            "yearmonth"
        ]
    },
    {
        "question_id": 1482,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  CAST((\n    SUM(\n      CASE\n        WHEN `T1`.`Segment` = 'SME' AND `T2`.`Date` LIKE '2013%'\n        THEN `T2`.`Consumption`\n        ELSE 0\n      END\n    ) - SUM(\n      CASE\n        WHEN `T1`.`Segment` = 'SME' AND `T2`.`Date` LIKE '2012%'\n        THEN `T2`.`Consumption`\n        ELSE 0\n      END\n    )\n  ) AS DOUBLE) * 100 / SUM(\n    CASE\n      WHEN `T1`.`Segment` = 'SME' AND `T2`.`Date` LIKE '2012%'\n      THEN `T2`.`Consumption`\n      ELSE 0\n    END\n  ),\n  CAST(SUM(\n    CASE\n      WHEN `T1`.`Segment` = 'LAM' AND `T2`.`Date` LIKE '2013%'\n      THEN `T2`.`Consumption`\n      ELSE 0\n    END\n  ) - SUM(\n    CASE\n      WHEN `T1`.`Segment` = 'LAM' AND `T2`.`Date` LIKE '2012%'\n      THEN `T2`.`Consumption`\n      ELSE 0\n    END\n  ) AS DOUBLE) * 100 / SUM(\n    CASE\n      WHEN `T1`.`Segment` = 'LAM' AND `T2`.`Date` LIKE '2012%'\n      THEN `T2`.`Consumption`\n      ELSE 0\n    END\n  ),\n  CAST(SUM(\n    CASE\n      WHEN `T1`.`Segment` = 'KAM' AND `T2`.`Date` LIKE '2013%'\n      THEN `T2`.`Consumption`\n      ELSE 0\n    END\n  ) - SUM(\n    CASE\n      WHEN `T1`.`Segment` = 'KAM' AND `T2`.`Date` LIKE '2012%'\n      THEN `T2`.`Consumption`\n      ELSE 0\n    END\n  ) AS DOUBLE) * 100 / SUM(\n    CASE\n      WHEN `T1`.`Segment` = 'KAM' AND `T2`.`Date` LIKE '2012%'\n      THEN `T2`.`Consumption`\n      ELSE 0\n    END\n  )\nFROM `customers` AS `T1`\nINNER JOIN `yearmonth` AS `T2`\n  ON `T1`.`CustomerID` = `T2`.`CustomerID`",
        "tables_extracted": [
            "customers",
            "yearmonth"
        ]
    },
    {
        "question_id": 1483,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  SUM(`Consumption`)\nFROM `yearmonth`\nWHERE\n  `CustomerID` = 6 AND `Date` BETWEEN '201308' AND '201311'",
        "tables_extracted": [
            "yearmonth"
        ]
    },
    {
        "question_id": 1484,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  SUM(CASE WHEN `Country` = 'CZE' THEN 1 ELSE 0 END) - SUM(CASE WHEN `Country` = 'SVK' THEN 1 ELSE 0 END)\nFROM `gasstations`\nWHERE\n  `Segment` = 'Discount'",
        "tables_extracted": [
            "gasstations"
        ]
    },
    {
        "question_id": 1486,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  SUM(`Currency` = 'CZK') - SUM(`Currency` = 'EUR')\nFROM `customers`\nWHERE\n  `Segment` = 'SME'",
        "tables_extracted": [
            "customers"
        ]
    },
    {
        "question_id": 1490,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `T2`.`Consumption` > 46.73 THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`T1`.`CustomerID`)\nFROM `customers` AS `T1`\nINNER JOIN `yearmonth` AS `T2`\n  ON `T1`.`CustomerID` = `T2`.`CustomerID`\nWHERE\n  `T1`.`Segment` = 'LAM'",
        "tables_extracted": [
            "customers",
            "yearmonth"
        ]
    },
    {
        "question_id": 1493,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `Consumption` > 528.3 THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`CustomerID`)\nFROM `yearmonth`\nWHERE\n  `Date` = '201202'",
        "tables_extracted": [
            "yearmonth"
        ]
    },
    {
        "question_id": 1498,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  SUM(`Consumption`)\nFROM `yearmonth`\nWHERE\n  SUBSTR(`Date`, 1, 4) = '2012'\nGROUP BY\n  SUBSTR(`Date`, 5, 2)\nORDER BY\n  SUM(`Consumption`) DESC\nLIMIT 1",
        "tables_extracted": [
            "yearmonth"
        ]
    },
    {
        "question_id": 1500,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  `T3`.`Description`\nFROM `transactions_1k` AS `T1`\nINNER JOIN `yearmonth` AS `T2`\n  ON `T1`.`CustomerID` = `T2`.`CustomerID`\nINNER JOIN `products` AS `T3`\n  ON `T1`.`ProductID` = `T3`.`ProductID`\nWHERE\n  `T2`.`Date` = '201309'",
        "tables_extracted": [
            "yearmonth",
            "transactions_1k",
            "products"
        ]
    },
    {
        "question_id": 1501,
        "db_id": "debit_card_specializing",
        "query": "SELECT DISTINCT\n  `T2`.`Country`\nFROM `transactions_1k` AS `T1`\nINNER JOIN `gasstations` AS `T2`\n  ON `T1`.`GasStationID` = `T2`.`GasStationID`\nINNER JOIN `yearmonth` AS `T3`\n  ON `T1`.`CustomerID` = `T3`.`CustomerID`\nWHERE\n  `T3`.`Date` = '201306'",
        "tables_extracted": [
            "gasstations",
            "yearmonth",
            "transactions_1k"
        ]
    },
    {
        "question_id": 1505,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  COUNT(*)\nFROM `yearmonth` AS `T1`\nINNER JOIN `customers` AS `T2`\n  ON `T1`.`CustomerID` = `T2`.`CustomerID`\nWHERE\n  `T2`.`Currency` = 'EUR' AND `T1`.`Consumption` > 1000.00",
        "tables_extracted": [
            "customers",
            "yearmonth"
        ]
    },
    {
        "question_id": 1506,
        "db_id": "debit_card_specializing",
        "query": "SELECT DISTINCT\n  `T3`.`Description`\nFROM `transactions_1k` AS `T1`\nINNER JOIN `gasstations` AS `T2`\n  ON `T1`.`GasStationID` = `T2`.`GasStationID`\nINNER JOIN `products` AS `T3`\n  ON `T1`.`ProductID` = `T3`.`ProductID`\nWHERE\n  `T2`.`Country` = 'CZE'",
        "tables_extracted": [
            "gasstations",
            "transactions_1k",
            "products"
        ]
    },
    {
        "question_id": 1507,
        "db_id": "debit_card_specializing",
        "query": "SELECT DISTINCT\n  `T1`.`Time`\nFROM `transactions_1k` AS `T1`\nINNER JOIN `gasstations` AS `T2`\n  ON `T1`.`GasStationID` = `T2`.`GasStationID`\nWHERE\n  `T2`.`ChainID` = 11",
        "tables_extracted": [
            "gasstations",
            "transactions_1k"
        ]
    },
    {
        "question_id": 1509,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  COUNT(`T1`.`TransactionID`)\nFROM `transactions_1k` AS `T1`\nINNER JOIN `gasstations` AS `T2`\n  ON `T1`.`GasStationID` = `T2`.`GasStationID`\nWHERE\n  `T2`.`Country` = 'CZE'\n  AND DATE_FORMAT(CAST(`T1`.`Date` AS DATETIME), '%Y') >= '2012'",
        "tables_extracted": [
            "gasstations",
            "transactions_1k"
        ]
    },
    {
        "question_id": 1514,
        "db_id": "debit_card_specializing",
        "query": "SELECT DISTINCT\n  `T3`.`Currency`\nFROM `transactions_1k` AS `T1`\nINNER JOIN `gasstations` AS `T2`\n  ON `T1`.`GasStationID` = `T2`.`GasStationID`\nINNER JOIN `customers` AS `T3`\n  ON `T1`.`CustomerID` = `T3`.`CustomerID`\nWHERE\n  `T1`.`Date` = '2012-08-24' AND `T1`.`Time` = '16:25:00'",
        "tables_extracted": [
            "gasstations",
            "customers",
            "transactions_1k"
        ]
    },
    {
        "question_id": 1515,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  `T2`.`Segment`\nFROM `transactions_1k` AS `T1`\nINNER JOIN `customers` AS `T2`\n  ON `T1`.`CustomerID` = `T2`.`CustomerID`\nWHERE\n  `T1`.`date` = '2012-08-23' AND `T1`.`time` = '21:20:00'",
        "tables_extracted": [
            "customers",
            "transactions_1k"
        ]
    },
    {
        "question_id": 1521,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  COUNT(`T1`.`TransactionID`)\nFROM `transactions_1k` AS `T1`\nINNER JOIN `gasstations` AS `T2`\n  ON `T1`.`GasStationID` = `T2`.`GasStationID`\nWHERE\n  `T1`.`Date` = '2012-08-26'\n  AND `T1`.`Time` BETWEEN '08:00:00' AND '09:00:00'\n  AND `T2`.`Country` = 'CZE'",
        "tables_extracted": [
            "gasstations",
            "transactions_1k"
        ]
    },
    {
        "question_id": 1524,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  `T2`.`Country`\nFROM `transactions_1k` AS `T1`\nINNER JOIN `gasstations` AS `T2`\n  ON `T1`.`GasStationID` = `T2`.`GasStationID`\nWHERE\n  `T1`.`Date` = '2012-08-24' AND  `T1`.`Price` = 548.4",
        "tables_extracted": [
            "gasstations",
            "transactions_1k"
        ]
    },
    {
        "question_id": 1525,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `T2`.`Currency` = 'EUR' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`T1`.`CustomerID`)\nFROM `transactions_1k` AS `T1`\nINNER JOIN `customers` AS `T2`\n  ON `T1`.`CustomerID` = `T2`.`CustomerID`\nWHERE\n  `T1`.`Date` = '2012-08-25'",
        "tables_extracted": [
            "customers",
            "transactions_1k"
        ]
    },
    {
        "question_id": 1526,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  CAST(SUM(CASE WHEN SUBSTR(`Date`, 1, 4) = '2012' THEN `Consumption` ELSE 0 END) - SUM(CASE WHEN SUBSTR(`Date`, 1, 4) = '2013' THEN `Consumption` ELSE 0 END) AS DOUBLE) / SUM(CASE WHEN SUBSTR(`Date`, 1, 4) = '2012' THEN `Consumption` ELSE 0 END)\nFROM `yearmonth`\nWHERE\n  `CustomerID` = (\n    SELECT\n      `T1`.`CustomerID`\n    FROM `transactions_1k` AS `T1`\n    INNER JOIN `gasstations` AS `T2`\n      ON `T1`.`GasStationID` = `T2`.`GasStationID`\n    WHERE\n      `T1`.`Date` = '2012-08-25' AND `T1`.`Price`  = 1513.12   )",
        "tables_extracted": [
            "gasstations",
            "yearmonth",
            "transactions_1k"
        ]
    },
    {
        "question_id": 1528,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `Country` = 'SVK' AND `Segment` = 'Premium' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / SUM(CASE WHEN `Country` = 'SVK' THEN 1 ELSE 0 END)\nFROM `gasstations`",
        "tables_extracted": [
            "gasstations"
        ]
    },
    {
        "question_id": 1529,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  SUM(`T1`.`Price` ),\n  SUM(CASE WHEN `T3`.`Date` = '201201' THEN `T1`.`Price` ELSE 0 END)\nFROM `transactions_1k` AS `T1`\nINNER JOIN `gasstations` AS `T2`\n  ON `T1`.`GasStationID` = `T2`.`GasStationID`\nINNER JOIN `yearmonth` AS `T3`\n  ON `T1`.`CustomerID` = `T3`.`CustomerID`\nWHERE\n  `T1`.`CustomerID` = '38508'",
        "tables_extracted": [
            "gasstations",
            "yearmonth",
            "transactions_1k"
        ]
    },
    {
        "question_id": 1531,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  `T2`.`CustomerID`,\n  SUM(`T2`.`Price` / `T2`.`Amount`),\n  `T1`.`Currency`\nFROM `customers` AS `T1`\nINNER JOIN `transactions_1k` AS `T2`\n  ON `T1`.`CustomerID` = `T2`.`CustomerID`\nWHERE\n  `T2`.`CustomerID` = (\n    SELECT\n      `CustomerID`\n    FROM `yearmonth`\n    ORDER BY\n      `Consumption` DESC\n    LIMIT 1\n  )\nGROUP BY\n  `T2`.`CustomerID`,\n  `T1`.`Currency`",
        "tables_extracted": [
            "customers",
            "yearmonth",
            "transactions_1k"
        ]
    },
    {
        "question_id": 1533,
        "db_id": "debit_card_specializing",
        "query": "SELECT\n  `T2`.`Consumption`\nFROM `transactions_1k` AS `T1`\nINNER JOIN `yearmonth` AS `T2`\n  ON `T1`.`CustomerID` = `T2`.`CustomerID`\nWHERE\n  `T1`.`Price` / `T1`.`Amount` > 29.00\n  AND `T1`.`ProductID` = 5\n  AND `T2`.`Date` = '201208'",
        "tables_extracted": [
            "yearmonth",
            "transactions_1k"
        ]
    },
    {
        "question_id": 1312,
        "db_id": "student_club",
        "query": "SELECT\n  `T2`.`major_name`\nFROM `member` AS `T1`\nINNER JOIN `major` AS `T2`\n  ON `T1`.`link_to_major` = `T2`.`major_id`\nWHERE\n  `T1`.`first_name` = 'Angela' AND `T1`.`last_name` = 'Sanders'",
        "tables_extracted": [
            "member",
            "major"
        ]
    },
    {
        "question_id": 1317,
        "db_id": "student_club",
        "query": "SELECT\n  COUNT(`T1`.`event_id`)\nFROM `event` AS `T1`\nINNER JOIN `attendance` AS `T2`\n  ON `T1`.`event_id` = `T2`.`link_to_event`\nINNER JOIN `member` AS `T3`\n  ON `T2`.`link_to_member` = `T3`.`member_id`\nWHERE\n  `T1`.`event_name` = 'Women''s Soccer' AND `T3`.`t_shirt_size` = 'Medium'",
        "tables_extracted": [
            "event",
            "member",
            "attendance"
        ]
    },
    {
        "question_id": 1322,
        "db_id": "student_club",
        "query": "SELECT\n  `T1`.`event_name`\nFROM `event` AS `T1`\nINNER JOIN `attendance` AS `T2`\n  ON `T1`.`event_id` = `T2`.`link_to_event`\nGROUP BY\n  `T1`.`event_id`\nHAVING\n  COUNT(`T2`.`link_to_event`) > 10\nEXCEPT\nSELECT\n  `T1`.`event_name`\nFROM `event` AS `T1`\nWHERE\n  `T1`.`type` = 'Meeting'",
        "tables_extracted": [
            "event",
            "attendance"
        ]
    },
    {
        "question_id": 1323,
        "db_id": "student_club",
        "query": "SELECT `T1`.`event_name` FROM `event` AS `T1` INNER JOIN `attendance` AS `T2` ON `T1`.`event_id` = `T2`.`link_to_event` GROUP BY `T1`.`event_id` HAVING COUNT(`T2`.`link_to_event`) > 20 AND NOT EXISTS (SELECT 1 FROM `event` AS `E` WHERE `E`.`event_id` = `T1`.`event_id` AND `E`.`type` = 'Fundraiser')",
        "tables_extracted": [
            "event",
            "attendance"
        ]
    },
    {
        "question_id": 1331,
        "db_id": "student_club",
        "query": "SELECT\n  `T2`.`amount`\nFROM `member` AS `T1`\nINNER JOIN `income` AS `T2`\n  ON `T1`.`member_id` = `T2`.`link_to_member`\nWHERE\n  `T1`.`position` = 'Vice President'",
        "tables_extracted": [
            "member",
            "income"
        ]
    },
    {
        "question_id": 1334,
        "db_id": "student_club",
        "query": "SELECT\n  `T1`.`first_name`,\n  `T1`.`last_name`\nFROM `member` AS `T1`\nINNER JOIN `zip_code` AS `T2`\n  ON `T1`.`zip` = `T2`.`zip_code`\nWHERE\n  `T2`.`state` = 'Illinois'",
        "tables_extracted": [
            "member",
            "zip_code"
        ]
    },
    {
        "question_id": 1338,
        "db_id": "student_club",
        "query": "SELECT\n  `T3`.`approved`\nFROM `event` AS `T1`\nINNER JOIN `budget` AS `T2`\n  ON `T1`.`event_id` = `T2`.`link_to_event`\nINNER JOIN `expense` AS `T3`\n  ON `T2`.`budget_id` = `T3`.`link_to_budget`\nWHERE\n  `T1`.`event_name` = 'October Meeting' AND `T1`.`event_date` LIKE '2019-10-08%'",
        "tables_extracted": [
            "event",
            "budget",
            "expense"
        ]
    },
    {
        "question_id": 1339,
        "db_id": "student_club",
        "query": "SELECT\n  AVG(`T2`.`cost`)\nFROM `member` AS `T1`\nINNER JOIN `expense` AS `T2`\n  ON `T1`.`member_id` = `T2`.`link_to_member`\nWHERE\n  `T1`.`last_name` = 'Allen'\n  AND `T1`.`first_name` = 'Elijah'\n  AND (\n    SUBSTR(`T2`.`expense_date`, 6, 2) = '09'\n    OR SUBSTR(`T2`.`expense_date`, 6, 2) = '10'\n  )",
        "tables_extracted": [
            "expense",
            "member"
        ]
    },
    {
        "question_id": 1340,
        "db_id": "student_club",
        "query": "SELECT\n  SUM(CASE WHEN SUBSTR(`T1`.`event_date`, 1, 4) = '2019' THEN `T2`.`spent` ELSE 0 END) - SUM(CASE WHEN SUBSTR(`T1`.`event_date`, 1, 4) = '2020' THEN `T2`.`spent` ELSE 0 END) AS `num`\nFROM `event` AS `T1`\nINNER JOIN `budget` AS `T2`\n  ON `T1`.`event_id` = `T2`.`link_to_event`",
        "tables_extracted": [
            "event",
            "budget"
        ]
    },
    {
        "question_id": 1344,
        "db_id": "student_club",
        "query": "SELECT\n  `notes`\nFROM `income`\nWHERE\n  `source` = 'Fundraising' AND `date_received` = '2019-09-14'",
        "tables_extracted": [
            "income"
        ]
    },
    {
        "question_id": 1346,
        "db_id": "student_club",
        "query": "SELECT\n  `phone`\nFROM `member`\nWHERE\n  `first_name` = 'Carlo' AND `last_name` = 'Jacobs'",
        "tables_extracted": [
            "member"
        ]
    },
    {
        "question_id": 1350,
        "db_id": "student_club",
        "query": "SELECT\n  `T1`.`event_status`\nFROM `budget` AS `T1`\nINNER JOIN `expense` AS `T2`\n  ON `T1`.`budget_id` = `T2`.`link_to_budget`\nWHERE\n  `T2`.`expense_description` = 'Post Cards, Posters'\n  AND `T2`.`expense_date` = '2019-08-20'",
        "tables_extracted": [
            "budget",
            "expense"
        ]
    },
    {
        "question_id": 1351,
        "db_id": "student_club",
        "query": "SELECT\n  `T2`.`major_name`\nFROM `member` AS `T1`\nINNER JOIN `major` AS `T2`\n  ON `T1`.`link_to_major` = `T2`.`major_id`\nWHERE\n  `T1`.`first_name` = 'Brent' AND `T1`.`last_name` = 'Thomason'",
        "tables_extracted": [
            "member",
            "major"
        ]
    },
    {
        "question_id": 1352,
        "db_id": "student_club",
        "query": "SELECT\n  COUNT(`T1`.`member_id`)\nFROM `member` AS `T1`\nINNER JOIN `major` AS `T2`\n  ON `T1`.`link_to_major` = `T2`.`major_id`\nWHERE\n  `T2`.`major_name` = 'Business' AND `T1`.`t_shirt_size` = 'Medium'",
        "tables_extracted": [
            "member",
            "major"
        ]
    },
    {
        "question_id": 1356,
        "db_id": "student_club",
        "query": "SELECT\n  `T2`.`department`\nFROM `member` AS `T1`\nINNER JOIN `major` AS `T2`\n  ON `T1`.`link_to_major` = `T2`.`major_id`\nWHERE\n  `T1`.`position` = 'President'",
        "tables_extracted": [
            "member",
            "major"
        ]
    },
    {
        "question_id": 1357,
        "db_id": "student_club",
        "query": "SELECT\n  `T2`.`date_received`\nFROM `member` AS `T1`\nINNER JOIN `income` AS `T2`\n  ON `T1`.`member_id` = `T2`.`link_to_member`\nWHERE\n  `T1`.`first_name` = 'Connor'\n  AND `T1`.`last_name` = 'Hilton'\n  AND `T2`.`source` = 'Dues'",
        "tables_extracted": [
            "member",
            "income"
        ]
    },
    {
        "question_id": 1359,
        "db_id": "student_club",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `T2`.`event_name` = 'Yearly Kickoff' THEN `T1`.`amount` ELSE 0 END) AS DOUBLE) / SUM(CASE WHEN `T2`.`event_name` = 'October Meeting' THEN `T1`.`amount` ELSE 0 END)\nFROM `budget` AS `T1`\nINNER JOIN `event` AS `T2`\n  ON `T1`.`link_to_event` = `T2`.`event_id`\nWHERE\n  `T1`.`category` = 'Advertisement' AND `T2`.`type` = 'Meeting'",
        "tables_extracted": [
            "budget",
            "event"
        ]
    },
    {
        "question_id": 1361,
        "db_id": "student_club",
        "query": "SELECT\n  SUM(`cost`)\nFROM `expense`\nWHERE\n  `expense_description` = 'Pizza'",
        "tables_extracted": [
            "expense"
        ]
    },
    {
        "question_id": 1362,
        "db_id": "student_club",
        "query": "SELECT\n  COUNT(`city`)\nFROM `zip_code`\nWHERE\n  `county` = 'Orange County' AND `state` = 'Virginia'",
        "tables_extracted": [
            "zip_code"
        ]
    },
    {
        "question_id": 1368,
        "db_id": "student_club",
        "query": "SELECT\n  `T2`.`major_name`\nFROM `member` AS `T1`\nINNER JOIN `major` AS `T2`\n  ON `T1`.`link_to_major` = `T2`.`major_id`\nWHERE\n  `T1`.`phone` = '809-555-3360'",
        "tables_extracted": [
            "member",
            "major"
        ]
    },
    {
        "question_id": 1371,
        "db_id": "student_club",
        "query": "SELECT\n  COUNT(`T2`.`link_to_member`)\nFROM `event` AS `T1`\nINNER JOIN `attendance` AS `T2`\n  ON `T1`.`event_id` = `T2`.`link_to_event`\nWHERE\n  `T1`.`event_name` = 'Women''s Soccer'",
        "tables_extracted": [
            "event",
            "attendance"
        ]
    },
    {
        "question_id": 1375,
        "db_id": "student_club",
        "query": "SELECT\n  `T1`.`first_name`,\n  `T1`.`last_name`\nFROM `member` AS `T1`\nINNER JOIN `major` AS `T2`\n  ON `T1`.`link_to_major` = `T2`.`major_id`\nWHERE\n  `T2`.`department` = 'School of Applied Sciences, Technology and Education'",
        "tables_extracted": [
            "member",
            "major"
        ]
    },
    {
        "question_id": 1376,
        "db_id": "student_club",
        "query": "SELECT\n  `T2`.`event_name`\nFROM `budget` AS `T1`\nINNER JOIN `event` AS `T2`\n  ON `T1`.`link_to_event` = `T2`.`event_id`\nWHERE\n  `T2`.`status` = 'Closed'\nORDER BY\n  `T1`.`spent` / `T1`.`amount` DESC\nLIMIT 1",
        "tables_extracted": [
            "budget",
            "event"
        ]
    },
    {
        "question_id": 1378,
        "db_id": "student_club",
        "query": "SELECT\n  MAX(`spent`)\nFROM `budget`",
        "tables_extracted": [
            "budget"
        ]
    },
    {
        "question_id": 1380,
        "db_id": "student_club",
        "query": "SELECT SUM(spent) FROM budget WHERE category = 'Food'",
        "tables_extracted": [
            "budget"
        ]
    },
    {
        "question_id": 1381,
        "db_id": "student_club",
        "query": "SELECT\n  `T1`.`first_name`,\n  `T1`.`last_name`\nFROM `member` AS `T1`\nINNER JOIN `attendance` AS `T2`\n  ON `T1`.`member_id` = `T2`.`link_to_member`\nGROUP BY\n  `T2`.`link_to_member`\nHAVING\n  COUNT(`T2`.`link_to_event`) > 7",
        "tables_extracted": [
            "member",
            "attendance"
        ]
    },
    {
        "question_id": 1387,
        "db_id": "student_club",
        "query": "SELECT\n  `T4`.`first_name`,\n  `T4`.`last_name`\nFROM `event` AS `T1`\nINNER JOIN `budget` AS `T2`\n  ON `T1`.`event_id` = `T2`.`link_to_event`\nINNER JOIN `expense` AS `T3`\n  ON `T2`.`budget_id` = `T3`.`link_to_budget`\nINNER JOIN `member` AS `T4`\n  ON `T3`.`link_to_member` = `T4`.`member_id`\nWHERE\n  `T1`.`event_name` = 'Yearly Kickoff'",
        "tables_extracted": [
            "event",
            "budget",
            "member",
            "expense"
        ]
    },
    {
        "question_id": 1389,
        "db_id": "student_club",
        "query": "SELECT\n  `T1`.`event_name`\nFROM `event` AS `T1`\nINNER JOIN `budget` AS `T2`\n  ON `T1`.`event_id` = `T2`.`link_to_event`\nINNER JOIN `expense` AS `T3`\n  ON `T2`.`budget_id` = `T3`.`link_to_budget`\nORDER BY\n  `T3`.`cost`\nLIMIT 1",
        "tables_extracted": [
            "event",
            "budget",
            "expense"
        ]
    },
    {
        "question_id": 1390,
        "db_id": "student_club",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `T1`.`event_name` = 'Yearly Kickoff' THEN `T3`.`cost` ELSE 0 END) AS DOUBLE) * 100 / SUM(`T3`.`cost`)\nFROM `event` AS `T1`\nINNER JOIN `budget` AS `T2`\n  ON `T1`.`event_id` = `T2`.`link_to_event`\nINNER JOIN `expense` AS `T3`\n  ON `T2`.`budget_id` = `T3`.`link_to_budget`",
        "tables_extracted": [
            "event",
            "budget",
            "expense"
        ]
    },
    {
        "question_id": 1392,
        "db_id": "student_club",
        "query": "SELECT\n  `source`\nFROM `income`\nWHERE\n  `date_received` BETWEEN '2019-09-01' AND '2019-09-30'\nORDER BY\n  `source` DESC\nLIMIT 1",
        "tables_extracted": [
            "income"
        ]
    },
    {
        "question_id": 1394,
        "db_id": "student_club",
        "query": "SELECT\n  COUNT(`T2`.`member_id`)\nFROM `major` AS `T1`\nINNER JOIN `member` AS `T2`\n  ON `T1`.`major_id` = `T2`.`link_to_major`\nWHERE\n  `T1`.`major_name` = 'Physics Teaching'",
        "tables_extracted": [
            "member",
            "major"
        ]
    },
    {
        "question_id": 1398,
        "db_id": "student_club",
        "query": "SELECT\n  `T2`.`event_name`\nFROM `budget` AS `T1`\nINNER JOIN `event` AS `T2`\n  ON `T1`.`link_to_event` = `T2`.`event_id`\nWHERE\n  `T1`.`category` = 'Advertisement'\nORDER BY\n  `T1`.`spent` DESC\nLIMIT 1",
        "tables_extracted": [
            "budget",
            "event"
        ]
    },
    {
        "question_id": 1399,
        "db_id": "student_club",
        "query": "SELECT\n  CASE WHEN `T3`.`event_name` = 'Women''s Soccer' THEN 'YES' END AS `result`\nFROM `member` AS `T1`\nINNER JOIN `attendance` AS `T2`\n  ON `T1`.`member_id` = `T2`.`link_to_member`\nINNER JOIN `event` AS `T3`\n  ON `T2`.`link_to_event` = `T3`.`event_id`\nWHERE\n  `T1`.`first_name` = 'Maya' AND `T1`.`last_name` = 'Mclean'",
        "tables_extracted": [
            "event",
            "member",
            "attendance"
        ]
    },
    {
        "question_id": 1401,
        "db_id": "student_club",
        "query": "SELECT\n  `T3`.`cost`\nFROM `event` AS `T1`\nINNER JOIN `budget` AS `T2`\n  ON `T1`.`event_id` = `T2`.`link_to_event`\nINNER JOIN `expense` AS `T3`\n  ON `T2`.`budget_id` = `T3`.`link_to_budget`\nWHERE\n  `T1`.`event_name` = 'September Speaker'\n  AND `T3`.`expense_description` = 'Posters'",
        "tables_extracted": [
            "event",
            "budget",
            "expense"
        ]
    },
    {
        "question_id": 1403,
        "db_id": "student_club",
        "query": "SELECT\n  `T2`.`event_name`\nFROM `budget` AS `T1`\nINNER JOIN `event` AS `T2`\n  ON `T2`.`event_id` = `T1`.`link_to_event`\nWHERE\n  `T1`.`event_status` = 'Closed' AND `T1`.`remaining` < 0\nORDER BY\n  `T1`.`remaining`\nLIMIT 1",
        "tables_extracted": [
            "budget",
            "event"
        ]
    },
    {
        "question_id": 1404,
        "db_id": "student_club",
        "query": "SELECT `T1`.`type`, SUM(`T3`.`cost`) AS `total_cost` FROM `event` AS `T1` INNER JOIN `budget` AS `T2` ON `T1`.`event_id` = `T2`.`link_to_event` INNER JOIN `expense` AS `T3` ON `T2`.`budget_id` = `T3`.`link_to_budget` WHERE `T1`.`event_name` = 'October Meeting' GROUP BY `T1`.`type`",
        "tables_extracted": [
            "event",
            "budget",
            "expense"
        ]
    },
    {
        "question_id": 1405,
        "db_id": "student_club",
        "query": "SELECT T2.category, SUM(T2.amount) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' GROUP BY T2.category ORDER BY SUM(T2.amount) ASC",
        "tables_extracted": [
            "event",
            "budget"
        ]
    },
    {
        "question_id": 1409,
        "db_id": "student_club",
        "query": "SELECT\n  SUM(`cost`)\nFROM `expense`\nWHERE\n  `expense_date` = '2019-08-20'",
        "tables_extracted": [
            "expense"
        ]
    },
    {
        "question_id": 1410,
        "db_id": "student_club",
        "query": "SELECT\n  `T1`.`first_name`,\n  `T1`.`last_name`,\n  SUM(`T2`.`cost`)\nFROM `member` AS `T1`\nINNER JOIN `expense` AS `T2`\n  ON `T1`.`member_id` = `T2`.`link_to_member`\nWHERE\n  `T1`.`member_id` = 'rec4BLdZHS2Blfp4v'",
        "tables_extracted": [
            "expense",
            "member"
        ]
    },
    {
        "question_id": 1411,
        "db_id": "student_club",
        "query": "SELECT\n  `T2`.`expense_description`\nFROM `member` AS `T1`\nINNER JOIN `expense` AS `T2`\n  ON `T1`.`member_id` = `T2`.`link_to_member`\nWHERE\n  `T1`.`first_name` = 'Sacha' AND `T1`.`last_name` = 'Harrison'",
        "tables_extracted": [
            "expense",
            "member"
        ]
    },
    {
        "question_id": 1422,
        "db_id": "student_club",
        "query": "SELECT DISTINCT\n  `T2`.`category`\nFROM `event` AS `T1`\nINNER JOIN `budget` AS `T2`\n  ON `T1`.`event_id` = `T2`.`link_to_event`\nWHERE\n  `T1`.`location` = 'MU 215'",
        "tables_extracted": [
            "event",
            "budget"
        ]
    },
    {
        "question_id": 1426,
        "db_id": "student_club",
        "query": "SELECT\n  `T2`.`last_name`,\n  `T1`.`department`,\n  `T1`.`college`\nFROM `major` AS `T1`\nINNER JOIN `member` AS `T2`\n  ON `T1`.`major_id` = `T2`.`link_to_major`\nWHERE\n  `T2`.`position` = 'Member' AND `T1`.`major_name` = 'Environmental Engineering'",
        "tables_extracted": [
            "member",
            "major"
        ]
    },
    {
        "question_id": 1427,
        "db_id": "student_club",
        "query": "SELECT DISTINCT\n  `T2`.`category`,\n  `T1`.`type`\nFROM `event` AS `T1`\nINNER JOIN `budget` AS `T2`\n  ON `T1`.`event_id` = `T2`.`link_to_event`\nWHERE\n  `T1`.`location` = 'MU 215' AND `T2`.`spent` = 0 AND `T1`.`type` = 'Guest Speaker'",
        "tables_extracted": [
            "event",
            "budget"
        ]
    },
    {
        "question_id": 1432,
        "db_id": "student_club",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `T2`.`amount` = 50 THEN 1.0 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`T2`.`income_id`)\nFROM `member` AS `T1`\nINNER JOIN `income` AS `T2`\n  ON `T1`.`member_id` = `T2`.`link_to_member`\nWHERE\n  `T1`.`position` = 'Member' AND `T1`.`t_shirt_size` = 'Medium'",
        "tables_extracted": [
            "member",
            "income"
        ]
    },
    {
        "question_id": 1435,
        "db_id": "student_club",
        "query": "SELECT DISTINCT\n  `event_name`\nFROM `event`\nWHERE\n  `type` = 'Game'\n  AND DATE(SUBSTR(`event_date`, 1, 10)) BETWEEN '2019-03-15' AND '2020-03-20'\n  AND `status` = 'Closed'",
        "tables_extracted": [
            "event"
        ]
    },
    {
        "question_id": 1457,
        "db_id": "student_club",
        "query": "SELECT DISTINCT\n  `T3`.`first_name`,\n  `T3`.`last_name`,\n  `T3`.`phone`\nFROM `expense` AS `T1`\nINNER JOIN `budget` AS `T2`\n  ON `T1`.`link_to_budget` = `T2`.`budget_id`\nINNER JOIN `member` AS `T3`\n  ON `T3`.`member_id` = `T1`.`link_to_member`\nWHERE\n  `T1`.`cost` > (\n    SELECT\n      AVG(`T1`.`cost`)\n    FROM `expense` AS `T1`\n    INNER JOIN `budget` AS `T2`\n      ON `T1`.`link_to_budget` = `T2`.`budget_id`\n    INNER JOIN `member` AS `T3`\n      ON `T3`.`member_id` = `T1`.`link_to_member`\n  )",
        "tables_extracted": [
            "expense",
            "budget",
            "member"
        ]
    },
    {
        "question_id": 1460,
        "db_id": "student_club",
        "query": "SELECT\n  `T2`.`first_name`,\n  `T2`.`last_name`,\n  `T1`.`cost`\nFROM `expense` AS `T1`\nINNER JOIN `member` AS `T2`\n  ON `T1`.`link_to_member` = `T2`.`member_id`\nWHERE\n  `T1`.`expense_description` = 'Water, Veggie tray, supplies'",
        "tables_extracted": [
            "expense",
            "member"
        ]
    },
    {
        "question_id": 1464,
        "db_id": "student_club",
        "query": "SELECT DISTINCT\n  `T3`.`first_name`,\n  `T3`.`last_name`,\n  `T4`.`amount`\nFROM `event` AS `T1`\nINNER JOIN `attendance` AS `T2`\n  ON `T1`.`event_id` = `T2`.`link_to_event`\nINNER JOIN `member` AS `T3`\n  ON `T3`.`member_id` = `T2`.`link_to_member`\nINNER JOIN `income` AS `T4`\n  ON `T4`.`link_to_member` = `T3`.`member_id`\nWHERE\n  `T4`.`date_received` = '2019-09-09'",
        "tables_extracted": [
            "event",
            "member",
            "attendance",
            "income"
        ]
    },
    {
        "question_id": 1149,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `Admission` = '+' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / SUM(CASE WHEN `Admission` = '-' THEN 1 ELSE 0 END)\nFROM `Patient`\nWHERE\n  `SEX` = 'M'",
        "tables_extracted": [
            "Patient"
        ]
    },
    {
        "question_id": 1150,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  CAST(SUM(\n    CASE WHEN DATE_FORMAT(CAST(`Birthday` AS DATETIME), '%Y') > '1930' THEN 1 ELSE 0 END\n  ) AS DOUBLE) * 100 / COUNT(*)\nFROM `Patient`\nWHERE\n  `SEX` = 'F'",
        "tables_extracted": [
            "Patient"
        ]
    },
    {
        "question_id": 1152,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  SUM(CASE WHEN `Admission` = '+' THEN 1 ELSE 0 END) / SUM(CASE WHEN `Admission` = '-' THEN 1 ELSE 0 END)\nFROM `Patient`\nWHERE\n  `Diagnosis` = 'SLE'",
        "tables_extracted": [
            "Patient"
        ]
    },
    {
        "question_id": 1153,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  `T1`.`Diagnosis`,\n  `T2`.`Date`\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T1`.`ID` = 30609",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1155,
        "db_id": "thrombosis_prediction",
        "query": "SELECT DISTINCT\n  `T1`.`ID`,\n  `T1`.`SEX`,\n  `T1`.`Birthday`\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`LDH` > 500",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1156,
        "db_id": "thrombosis_prediction",
        "query": "SELECT DISTINCT\n  `T1`.`ID`,\n  DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS DATETIME), '%Y') - DATE_FORMAT(CAST(`T1`.`Birthday` AS DATETIME), '%Y')\nFROM `Patient` AS `T1`\nINNER JOIN `Examination` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`RVVT` = '+'",
        "tables_extracted": [
            "Examination",
            "Patient"
        ]
    },
    {
        "question_id": 1157,
        "db_id": "thrombosis_prediction",
        "query": "SELECT DISTINCT\n  `T1`.`ID`,\n  `T1`.`SEX`,\n  `T1`.`Diagnosis`\nFROM `Patient` AS `T1`\nINNER JOIN `Examination` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`Thrombosis` = 2",
        "tables_extracted": [
            "Examination",
            "Patient"
        ]
    },
    {
        "question_id": 1162,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  COUNT(*)\nFROM `Patient`\nWHERE\n  DATE_FORMAT(CAST(`Description` AS DATETIME), '%Y') = '1997'\n  AND `SEX` = 'F'\n  AND `Admission` = '-'",
        "tables_extracted": [
            "Patient"
        ]
    },
    {
        "question_id": 1164,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  COUNT(*)\nFROM `Patient` AS `T1`\nINNER JOIN `Examination` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T1`.`SEX` = 'F'\n  AND DATE_FORMAT(CAST(`T2`.`Examination Date` AS DATETIME), '%Y') = '1997'\n  AND `T2`.`Thrombosis` = 1",
        "tables_extracted": [
            "Examination",
            "Patient"
        ]
    },
    {
        "question_id": 1166,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  `T2`.`Symptoms`,\n  `T1`.`Diagnosis`\nFROM `Patient` AS `T1`\nINNER JOIN `Examination` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  NOT `T2`.`Symptoms` IS NULL\nORDER BY\n  `T1`.`Birthday` DESC\nLIMIT 1",
        "tables_extracted": [
            "Examination",
            "Patient"
        ]
    },
    {
        "question_id": 1168,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  `T1`.`Date`,\n  DATE_FORMAT(CAST(`T2`.`First Date` AS DATETIME), '%Y') - DATE_FORMAT(CAST(`T2`.`Birthday` AS DATETIME), '%Y'),\n  `T2`.`Birthday`\nFROM `Laboratory` AS `T1`\nINNER JOIN `Patient` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`Diagnosis` = 'SJS' AND NOT `T2`.`Birthday` IS NULL\nORDER BY\n  `T2`.`Birthday` ASC\nLIMIT 1",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1169,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `T2`.`UA` <= 8.0 AND `T1`.`SEX` = 'M' THEN 1 ELSE 0 END) AS DOUBLE) / SUM(CASE WHEN `T2`.`UA` <= 6.5 AND `T1`.`SEX` = 'F' THEN 1 ELSE 0 END)\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1171,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  COUNT(`T1`.`ID`)\nFROM `Patient` AS `T1`\nINNER JOIN `Examination` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  DATE_FORMAT(CAST(`T2`.`Examination Date` AS DATETIME), '%Y') BETWEEN '1990' AND '1993'\n  AND DATE_FORMAT(CAST(`T2`.`Examination Date` AS DATETIME), '%Y') - DATE_FORMAT(CAST(`T1`.`Birthday` AS DATETIME), '%Y') < '18'",
        "tables_extracted": [
            "Examination",
            "Patient"
        ]
    },
    {
        "question_id": 1175,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  DATE_FORMAT(CAST(`T2`.`Date` AS DATETIME), '%Y') - DATE_FORMAT(CAST(`T1`.`Birthday` AS DATETIME), '%Y'),\n  `T1`.`Diagnosis`\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nORDER BY\n  `T2`.`HGB` DESC\nLIMIT 1",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1179,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  `aCL IgA`,\n  `aCL IgG`,\n  `aCL IgM`\nFROM `Examination`\nWHERE\n  `ID` IN (\n    SELECT\n      `ID`\n    FROM `Patient`\n    WHERE\n      `Diagnosis` = 'SLE' AND `Description` = '1994-02-19'\n  )\n  AND `Examination Date` = '1993-11-12'",
        "tables_extracted": [
            "Examination",
            "Patient"
        ]
    },
    {
        "question_id": 1185,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  CAST((\n    SUM(CASE WHEN `T2`.`Date` LIKE '1981-11-%' THEN `T2`.`T-CHO` ELSE 0 END) - SUM(CASE WHEN `T2`.`Date` LIKE '1981-12-%' THEN `T2`.`T-CHO` ELSE 0 END)\n  ) AS DOUBLE) / SUM(CASE WHEN `T2`.`Date` LIKE '1981-12-%' THEN `T2`.`T-CHO` ELSE 0 END)\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T1`.`Birthday` = '1959-02-18'",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1187,
        "db_id": "thrombosis_prediction",
        "query": "SELECT DISTINCT\n  `ID`\nFROM `Laboratory`\nWHERE\n  `Date` BETWEEN '1987-07-06' AND '1996-01-31' AND `GPT` > 30 AND `ALB` < 4",
        "tables_extracted": [
            "Laboratory"
        ]
    },
    {
        "question_id": 1189,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  COUNT(*)\nFROM `Examination`\nWHERE\n  `Thrombosis` = 2\n  AND `ANA Pattern` = 'S'\n  AND `aCL IgM` > (\n    SELECT\n      AVG(`aCL IgM`) * 1.2\n    FROM `Examination`\n    WHERE\n      `Thrombosis` = 2 AND `ANA Pattern` = 'S'\n  )",
        "tables_extracted": [
            "Examination"
        ]
    },
    {
        "question_id": 1192,
        "db_id": "thrombosis_prediction",
        "query": "SELECT DISTINCT\n  `T1`.`ID`\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T1`.`Admission` = '-' AND `T2`.`T-BIL` < 2.0 AND `T2`.`Date` LIKE '1991-10-%'",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1195,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  AVG(`T2`.`ALB`)\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`PLT` > 400 AND `T1`.`Diagnosis` = 'SLE' AND `T1`.`SEX` = 'F'",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1198,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  COUNT(`ID`)\nFROM `Patient`\nWHERE\n  `SEX` = 'F' AND `Diagnosis` = 'APS'",
        "tables_extracted": [
            "Patient"
        ]
    },
    {
        "question_id": 1201,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `SEX` = 'F' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`ID`)\nFROM `Patient`\nWHERE\n  `Diagnosis` = 'RA' AND DATE_FORMAT(CAST(`Birthday` AS DATETIME), '%Y') = '1980'",
        "tables_extracted": [
            "Patient"
        ]
    },
    {
        "question_id": 1205,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  CASE\n    WHEN (\n      `T1`.`SEX` = 'F' AND `T2`.`UA` > 6.5\n    )\n    OR (\n      `T1`.`SEX` = 'M' AND `T2`.`UA` > 8.0\n    )\n    THEN TRUE\n    ELSE FALSE\n  END\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T1`.`ID` = 57266",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1208,
        "db_id": "thrombosis_prediction",
        "query": "SELECT DISTINCT\n  `T1`.`ID`\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T1`.`SEX` = 'M' AND `T2`.`GPT` >= 60",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1209,
        "db_id": "thrombosis_prediction",
        "query": "SELECT `T1`.`Diagnosis`\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`GPT` > 60\nORDER BY\n  `T1`.`Birthday` ASC",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1220,
        "db_id": "thrombosis_prediction",
        "query": "SELECT DISTINCT\n  `T1`.`ID`,\n  `T1`.`SEX`,\n  `T1`.`Birthday`\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`UN` = 29",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1225,
        "db_id": "thrombosis_prediction",
        "query": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` >= 2.0 GROUP BY T1.SEX, T1.ID",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1227,
        "db_id": "thrombosis_prediction",
        "query": "SELECT AVG(YEAR(CURRENT_DATE) - YEAR(T1.Birthday)) FROM Patient AS T1  INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID  WHERE T2.`T-CHO` >= 250 AND T1.SEX = 'M'",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1229,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  COUNT(DISTINCT `T1`.`ID`)\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`TG` >= 200\n  AND DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS DATETIME), '%Y') - DATE_FORMAT(CAST(`T1`.`Birthday` AS DATETIME), '%Y') > 50",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1231,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  COUNT(DISTINCT `T1`.`ID`)\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  DATE_FORMAT(CAST(`T1`.`Birthday` AS DATETIME), '%Y') BETWEEN '1936' AND '1956'\n  AND `T1`.`SEX` = 'M'\n  AND `T2`.`CPK` >= 250",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1232,
        "db_id": "thrombosis_prediction",
        "query": "SELECT DISTINCT\n  `T1`.`ID`,\n  `T1`.`SEX`,\n  DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS DATETIME), '%Y') - DATE_FORMAT(CAST(`T1`.`Birthday` AS DATETIME), '%Y')\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`GLU` >= 180 AND `T2`.`T-CHO` < 250",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1235,
        "db_id": "thrombosis_prediction",
        "query": "SELECT DISTINCT\n  `T1`.`Diagnosis`,\n  `T1`.`ID`,\n  DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS DATETIME), '%Y') - DATE_FORMAT(CAST(`T1`.`Birthday` AS DATETIME), '%Y')\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`RBC` < 3.5",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1238,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  `T1`.`ID`,\n  `T1`.`SEX`\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T1`.`Diagnosis` = 'SLE' AND `T2`.`HGB` > 10 AND `T2`.`HGB` < 17\nORDER BY\n  `T1`.`Birthday` ASC\nLIMIT 1",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1239,
        "db_id": "thrombosis_prediction",
        "query": "SELECT DISTINCT\n  `T1`.`ID`,\n  DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS DATETIME), '%Y') - DATE_FORMAT(CAST(`T1`.`Birthday` AS DATETIME), '%Y')\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T1`.`ID` IN (\n    SELECT\n      `ID`\n    FROM `Laboratory`\n    WHERE\n      `HCT` >= 52\n    GROUP BY\n      `ID`\n    HAVING\n      COUNT(`ID`) >= 2\n  )",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1241,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  SUM(CASE WHEN `T2`.`PLT` <= 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN `T2`.`PLT` >= 400 THEN 1 ELSE 0 END)\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1242,
        "db_id": "thrombosis_prediction",
        "query": "SELECT DISTINCT\n  `T1`.`ID`\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`PLT` BETWEEN 100 AND 400\n  AND DATE_FORMAT(CAST(`T2`.`Date` AS DATETIME), '%Y') - DATE_FORMAT(CAST(`T1`.`Birthday` AS DATETIME), '%Y') < 50\n  AND DATE_FORMAT(CAST(`T2`.`Date` AS DATETIME), '%Y') = '1984'",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1243,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `T2`.`PT` >= 14 AND `T1`.`SEX` = 'F' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(CASE WHEN `T2`.`PT` >= 14 THEN 1 ELSE 0 END)\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS DATETIME), '%Y') - DATE_FORMAT(CAST(`T1`.`Birthday` AS DATETIME), '%Y') > 55",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1247,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  COUNT(DISTINCT `T1`.`ID`)\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`FG` <= 150\n  OR `T2`.`FG` >= 450\n  AND `T2`.`WBC` > 3.5\n  AND `T2`.`WBC` < 9.0\n  AND `T1`.`SEX` = 'M'",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1251,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  COUNT(DISTINCT `T1`.`ID`)\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nINNER JOIN `Examination` AS `T3`\n  ON `T3`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`IGG` >= 2000",
        "tables_extracted": [
            "Laboratory",
            "Examination",
            "Patient"
        ]
    },
    {
        "question_id": 1252,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  COUNT(`T1`.`ID`)\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nINNER JOIN `Examination` AS `T3`\n  ON `T3`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`IGG` BETWEEN 900 AND 2000 AND NOT `T3`.`Symptoms` IS NULL",
        "tables_extracted": [
            "Laboratory",
            "Examination",
            "Patient"
        ]
    },
    {
        "question_id": 1254,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  COUNT(`T1`.`ID`)\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`IGA` BETWEEN 80 AND 500\n  AND DATE_FORMAT(CAST(`T1`.`First Date` AS DATETIME), '%Y') > '1990'",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1255,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  `T1`.`Diagnosis`\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  NOT `T2`.`IGM` BETWEEN 40 AND 400\nGROUP BY\n  `T1`.`Diagnosis`\nORDER BY\n  COUNT(`T1`.`Diagnosis`) DESC\nLIMIT 1",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1256,
        "db_id": "thrombosis_prediction",
        "query": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.CRP = '+' ) AND T1.Description IS NULL;",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1257,
        "db_id": "thrombosis_prediction",
        "query": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND YEAR(CURDATE()) - YEAR(T1.Birthday) < 70",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1265,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  COUNT(DISTINCT `T1`.`ID`)\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`RNP` = 'negative' OR `T2`.`RNP` = '0' AND `T1`.`Admission` = '+'",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1267,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  COUNT(`T1`.`ID`)\nFROM `Examination` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`SM` IN ('negative', '0') AND `T1`.`Thrombosis` = 0",
        "tables_extracted": [
            "Laboratory",
            "Examination"
        ]
    },
    {
        "question_id": 1270,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  COUNT(DISTINCT `T1`.`ID`)\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nINNER JOIN `Examination` AS `T3`\n  ON `T3`.`ID` = `T2`.`ID`\nWHERE\n  (\n    `T2`.`SC170` = 'negative' OR `T2`.`SC170` = '0'\n  )\n  AND `T1`.`SEX` = 'F'\n  AND `T3`.`Symptoms` IS NULL",
        "tables_extracted": [
            "Laboratory",
            "Examination",
            "Patient"
        ]
    },
    {
        "question_id": 1275,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  COUNT(DISTINCT `T1`.`ID`)\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`CENTROMEA` IN ('negative', '0')\n  AND `T2`.`SSB` IN ('negative', '0')\n  AND `T1`.`SEX` = 'M'",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1281,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  `T1`.`Birthday`\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nWHERE\n  `T2`.`GOT` >= 60\nORDER BY\n  `T1`.`Birthday` DESC\nLIMIT 1",
        "tables_extracted": [
            "Laboratory",
            "Patient"
        ]
    },
    {
        "question_id": 1302,
        "db_id": "thrombosis_prediction",
        "query": "SELECT\n  COUNT(`T1`.`ID`)\nFROM `Patient` AS `T1`\nINNER JOIN `Laboratory` AS `T2`\n  ON `T1`.`ID` = `T2`.`ID`\nINNER JOIN `Examination` AS `T3`\n  ON `T1`.`ID` = `T3`.`ID`\nWHERE\n  `T2`.`CPK` < 250\n  AND (\n    `T3`.`KCT` = '+' OR `T3`.`RVVT` = '+' OR `T3`.`LAC` = '+'\n  )",
        "tables_extracted": [
            "Laboratory",
            "Examination",
            "Patient"
        ]
    },
    {
        "question_id": 1025,
        "db_id": "european_football_2",
        "query": "SELECT  `t2`.`name` FROM `Match` AS `t1` INNER JOIN `League` AS `t2`\n  ON `t1`.`league_id` = `t2`.`id`\nWHERE\n  `t1`.`season` = '2015/2016'\nGROUP BY\n  `t2`.`name`\nORDER BY\n  SUM(`t1`.`home_team_goal` + `t1`.`away_team_goal`) DESC\nLIMIT 1",
        "tables_extracted": [
            "League",
            "Match"
        ]
    },
    {
        "question_id": 1028,
        "db_id": "european_football_2",
        "query": "SELECT\n  `teamInfo`.`team_long_name`\nFROM `League` AS `leagueData`\nINNER JOIN `Match` AS `matchData`\n  ON `leagueData`.`id` = `matchData`.`league_id`\nINNER JOIN `Team` AS `teamInfo`\n  ON `matchData`.`away_team_api_id` = `teamInfo`.`team_api_id`\nWHERE\n  `leagueData`.`name` = 'Scotland Premier League'\n  AND `matchData`.`season` = '2009/2010'\n  AND `matchData`.`away_team_goal` - `matchData`.`home_team_goal` > 0\nGROUP BY\n  `matchData`.`away_team_api_id`\nORDER BY\n  COUNT(*) DESC\nLIMIT 1",
        "tables_extracted": [
            "League",
            "Match",
            "Team"
        ]
    },
    {
        "question_id": 1029,
        "db_id": "european_football_2",
        "query": "SELECT\n  `t1`.`buildUpPlaySpeed`\nFROM `Team_Attributes` AS `t1`\nINNER JOIN `Team` AS `t2`\n  ON `t1`.`team_api_id` = `t2`.`team_api_id`\nORDER BY\n  `t1`.`buildUpPlaySpeed` ASC\nLIMIT 4",
        "tables_extracted": [
            "Team_Attributes",
            "Team"
        ]
    },
    {
        "question_id": 1030,
        "db_id": "european_football_2",
        "query": "SELECT\n  `t2`.`name`\nFROM `Match` AS `t1`\nINNER JOIN `League` AS `t2`\n  ON `t1`.`league_id` = `t2`.`id`\nWHERE\n  `t1`.`season` = '2015/2016' AND `t1`.`home_team_goal` = `t1`.`away_team_goal`\nGROUP BY\n  `t2`.`name`\nORDER BY\n  COUNT(`t1`.`id`) DESC\nLIMIT 1",
        "tables_extracted": [
            "League",
            "Match"
        ]
    },
    {
        "question_id": 1031,
        "db_id": "european_football_2",
        "query": "SELECT DISTINCT YEAR(CURDATE()) - YEAR(t2.birthday) AS age FROM Player_Attributes AS t1 INNER JOIN Player AS t2 ON t1.player_api_id = t2.player_api_id WHERE YEAR(t1.`date`) BETWEEN 2013 AND 2015 AND t1.sprint_speed >= 97",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1032,
        "db_id": "european_football_2",
        "query": "SELECT\n  `t2`.`name`,\n  COUNT(`t1`.`id`)\nFROM `Match` AS `t1`\nINNER JOIN `League` AS `t2`\n  ON `t1`.`league_id` = `t2`.`id`\nGROUP BY\n  `t2`.`name`\nORDER BY\n  COUNT(`t1`.`id`) DESC\nLIMIT 1",
        "tables_extracted": [
            "League",
            "Match"
        ]
    },
    {
        "question_id": 1035,
        "db_id": "european_football_2",
        "query": "SELECT DISTINCT\n  `team_fifa_api_id`\nFROM `Team_Attributes`\nWHERE\n  `buildUpPlaySpeed` > 50 AND `buildUpPlaySpeed` < 60",
        "tables_extracted": [
            "Team_Attributes"
        ]
    },
    {
        "question_id": 1036,
        "db_id": "european_football_2",
        "query": "SELECT DISTINCT\n  `t4`.`team_long_name`\nFROM `Team_Attributes` AS `t3`\nINNER JOIN `Team` AS `t4`\n  ON `t3`.`team_api_id` = `t4`.`team_api_id`\nWHERE\n  SUBSTR(`t3`.`date`, 1, 4) = '2012'\n  AND `t3`.`buildUpPlayPassing` > (\n    SELECT\n      CAST(SUM(`t2`.`buildUpPlayPassing`) AS DOUBLE) / COUNT(`t1`.`id`)\n    FROM `Team` AS `t1`\n    INNER JOIN `Team_Attributes` AS `t2`\n      ON `t1`.`team_api_id` = `t2`.`team_api_id`\n    WHERE\n      DATE_FORMAT(CAST(`t2`.`date` AS DATETIME), '%Y') = '2012'\n  )",
        "tables_extracted": [
            "Team_Attributes",
            "Team"
        ]
    },
    {
        "question_id": 1037,
        "db_id": "european_football_2",
        "query": "SELECT\n  CAST(COUNT(CASE WHEN `t2`.`preferred_foot` = 'left' THEN `t1`.`id` ELSE NULL END) AS DOUBLE) * 100 / COUNT(`t1`.`id`) AS `percent`\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_api_id` = `t2`.`player_api_id`\nWHERE\n  SUBSTR(`t1`.`birthday`, 1, 4) BETWEEN '1987' AND '1992'",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1039,
        "db_id": "european_football_2",
        "query": "SELECT\n  CAST(SUM(`t2`.`long_shots`) AS DOUBLE) / COUNT(`t2`.`date`)\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_api_id` = `t2`.`player_api_id`\nWHERE\n  `t1`.`player_name` = 'Ahmed Samir Farag'",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1040,
        "db_id": "european_football_2",
        "query": "SELECT\n  `t1`.`player_name`\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_api_id` = `t2`.`player_api_id`\nWHERE\n  `t1`.`height` > 180\nGROUP BY\n  `t1`.`id`\nORDER BY\n  CAST(SUM(`t2`.`heading_accuracy`) AS DOUBLE) / COUNT(`t2`.`player_fifa_api_id`) DESC\nLIMIT 10",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1042,
        "db_id": "european_football_2",
        "query": "SELECT\n  `t1`.`name`\nFROM `League` AS `t1`\nINNER JOIN `Match` AS `t2`\n  ON `t1`.`id` = `t2`.`league_id`\nWHERE\n  `t2`.`season` = '2009/2010'\nGROUP BY\n  `t1`.`name`\nHAVING\n  (\n    CAST(SUM(`t2`.`home_team_goal`) AS DOUBLE) / COUNT(DISTINCT `t2`.`id`)\n  ) - (\n    CAST(SUM(`t2`.`away_team_goal`) AS DOUBLE) / COUNT(DISTINCT `t2`.`id`)\n  ) > 0",
        "tables_extracted": [
            "League",
            "Match"
        ]
    },
    {
        "question_id": 1044,
        "db_id": "european_football_2",
        "query": "SELECT\n  `player_name`\nFROM `Player`\nWHERE\n  SUBSTR(`birthday`, 1, 7) = '1970-10'",
        "tables_extracted": [
            "Player"
        ]
    },
    {
        "question_id": 1048,
        "db_id": "european_football_2",
        "query": "SELECT  `t2`.`overall_rating` FROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_api_id` = `t2`.`player_api_id` WHERE  `t1`.`player_name` = 'Gabriel Tamas'  AND DATE_FORMAT(CAST(`t2`.`date` AS DATETIME), '%Y') = '2011'",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1057,
        "db_id": "european_football_2",
        "query": "SELECT\n  CAST(SUM(`t2`.`home_team_goal`) AS DOUBLE) / COUNT(`t2`.`id`)\nFROM `Country` AS `t1`\nINNER JOIN `Match` AS `t2`\n  ON `t1`.`id` = `t2`.`country_id`\nWHERE\n  `t1`.`name` = 'Poland' AND `t2`.`season` = '2010/2011'",
        "tables_extracted": [
            "Match",
            "Country"
        ]
    },
    {
        "question_id": 1058,
        "db_id": "european_football_2",
        "query": "SELECT `A` FROM (SELECT AVG(`finishing`) AS `result`, 'Max' AS `A` FROM `Player` AS `T1` INNER JOIN `Player_Attributes` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T1`.`height` = (SELECT MAX(`height`) FROM `Player`) UNION SELECT AVG(`finishing`) AS `result`, 'Min' AS `A` FROM `Player` AS `T1` INNER JOIN `Player_Attributes` AS `T2` ON `T1`.`player_api_id` = `T2`.`player_api_id` WHERE `T1`.`height` = (SELECT MIN(`height`) FROM `Player`)) AS `derived` ORDER BY `result` DESC LIMIT 1",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1068,
        "db_id": "european_football_2",
        "query": "SELECT\n  CAST(SUM(`t2`.`overall_rating`) AS DOUBLE) / COUNT(`t2`.`id`)\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_api_id` = `t2`.`player_api_id`\nWHERE\n  `t1`.`height` > 170\n  AND DATE_FORMAT(CAST(`t2`.`date` AS DATETIME), '%Y') >= '2010'\n  AND DATE_FORMAT(CAST(`t2`.`date` AS DATETIME), '%Y') <= '2015'",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1076,
        "db_id": "european_football_2",
        "query": "SELECT\n  CAST(SUM(\n    CASE WHEN `t1`.`player_name` = 'Abdou Diallo' THEN `t2`.`ball_control` ELSE 0 END\n  ) AS DOUBLE) / COUNT(CASE WHEN `t1`.`player_name` = 'Abdou Diallo' THEN `t2`.`id` ELSE NULL END) - CAST(SUM(\n    CASE\n      WHEN `t1`.`player_name` = 'Aaron Appindangoye'\n      THEN `t2`.`ball_control`\n      ELSE 0\n    END\n  ) AS DOUBLE) / COUNT(CASE WHEN `t1`.`player_name` = 'Aaron Appindangoye' THEN `t2`.`id` ELSE NULL END)\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_api_id` = `t2`.`player_api_id`",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1078,
        "db_id": "european_football_2",
        "query": "SELECT\n  `player_name`\nFROM `Player`\nWHERE\n  `player_name` IN ('Aaron Lennon', 'Abdelaziz Barrada')\nORDER BY\n  `birthday` ASC\nLIMIT 1",
        "tables_extracted": [
            "Player"
        ]
    },
    {
        "question_id": 1079,
        "db_id": "european_football_2",
        "query": "SELECT\n  `player_name`\nFROM `Player`\nORDER BY\n  `height` DESC\nLIMIT 1",
        "tables_extracted": [
            "Player"
        ]
    },
    {
        "question_id": 1080,
        "db_id": "european_football_2",
        "query": "SELECT\n  COUNT(`player_api_id`)\nFROM `Player_Attributes`\nWHERE\n  `preferred_foot` = 'left' AND `attacking_work_rate` = 'low'",
        "tables_extracted": [
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1084,
        "db_id": "european_football_2",
        "query": "SELECT\n  COUNT(DISTINCT `t1`.`player_name`)\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_api_id` = `t2`.`player_api_id`\nWHERE\n  DATE_FORMAT(CAST(`t1`.`birthday` AS DATETIME), '%Y') < '1986'\n  AND `t2`.`defensive_work_rate` = 'high'",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1088,
        "db_id": "european_football_2",
        "query": "SELECT DISTINCT\n  `t1`.`player_name`\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_api_id` = `t2`.`player_api_id`\nWHERE\n  `t2`.`volleys` > 70 AND `t2`.`dribbling` > 70",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1091,
        "db_id": "european_football_2",
        "query": "SELECT\n  COUNT(`t2`.`id`)\nFROM `League` AS `t1`\nINNER JOIN `Match` AS `t2`\n  ON `t1`.`id` = `t2`.`league_id`\nWHERE\n  `t1`.`name` = 'Belgium Jupiler League' AND SUBSTR(`t2`.`date`, 1, 7) = '2009-04'",
        "tables_extracted": [
            "League",
            "Match"
        ]
    },
    {
        "question_id": 1092,
        "db_id": "european_football_2",
        "query": "SELECT `t1`.`name` FROM `League` AS `t1`JOIN `Match` AS `t2` ON `t1`.`id` = `t2`.`league_id` WHERE  `t2`.`season` = '2008/2009' GROUP BY  `t1`.`name` HAVING COUNT(`t2`.`id`) = (SELECT MAX(match_count) FROM (SELECT COUNT(`t2`.`id`) AS match_count FROM `Match` AS `t2` WHERE `t2`.`season` = '2008/2009' GROUP BY  `t2`.`league_id`) AS subquery)",
        "tables_extracted": [
            "League",
            "Match"
        ]
    },
    {
        "question_id": 1094,
        "db_id": "european_football_2",
        "query": "SELECT\n  (\n    SUM(\n      CASE\n        WHEN `t1`.`player_name` = 'Ariel Borysiuk'\n        THEN `t2`.`overall_rating`\n        ELSE 0\n      END\n    ) * 1.0 - SUM(\n      CASE WHEN `t1`.`player_name` = 'Paulin Puel' THEN `t2`.`overall_rating` ELSE 0 END\n    )\n  ) * 100 / SUM(\n    CASE WHEN `t1`.`player_name` = 'Paulin Puel' THEN `t2`.`overall_rating` ELSE 0 END\n  )\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_api_id` = `t2`.`player_api_id`",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1096,
        "db_id": "european_football_2",
        "query": "SELECT\n  CAST(SUM(`t2`.`overall_rating`) AS DOUBLE) / COUNT(`t2`.`id`)\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_api_id` = `t2`.`player_api_id`\nWHERE\n  `t1`.`player_name` = 'Pietro Marino'",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1098,
        "db_id": "european_football_2",
        "query": "SELECT\n  `t2`.`chanceCreationPassing`,\n  `t2`.`chanceCreationPassingClass`\nFROM `Team` AS `t1`\nINNER JOIN `Team_Attributes` AS `t2`\n  ON `t1`.`team_api_id` = `t2`.`team_api_id`\nWHERE\n  `t1`.`team_long_name` = 'Ajax'\nORDER BY\n  `t2`.`chanceCreationPassing` DESC\nLIMIT 1",
        "tables_extracted": [
            "Team_Attributes",
            "Team"
        ]
    },
    {
        "question_id": 1102,
        "db_id": "european_football_2",
        "query": "SELECT\n  `t1`.`player_name`\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_api_id` = `t2`.`player_api_id`\nWHERE\n  SUBSTR(`t2`.`date`, 1, 10) = '2016-06-23' AND `t2`.`overall_rating` = 77\nORDER BY\n  `t1`.`birthday` ASC\nLIMIT 1",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1103,
        "db_id": "european_football_2",
        "query": "SELECT\n  `t2`.`overall_rating`\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_api_id` = `t2`.`player_api_id`\nWHERE\n  SUBSTR(`t2`.`date`, 1, 10) = '2016-02-04' AND `t1`.`player_name` = 'Aaron Mooy'",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1105,
        "db_id": "european_football_2",
        "query": "SELECT\n  `t2`.`attacking_work_rate`\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_api_id` = `t2`.`player_api_id`\nWHERE\n  `t2`.`date` LIKE '2015-05-01%' AND `t1`.`player_name` = 'Francesco Migliore'",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1107,
        "db_id": "european_football_2",
        "query": "SELECT `date` FROM (SELECT `t2`.`crossing`, `t2`.`date` FROM `Player` AS `t1` INNER JOIN `Player_Attributes` AS `t2` ON `t1`.`player_fifa_api_id` = `t2`.`player_fifa_api_id` WHERE `t1`.`player_name` = 'Kevin Constant' ORDER BY `t2`.`crossing` DESC) AS `subquery` ORDER BY `date` DESC LIMIT 1",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1110,
        "db_id": "european_football_2",
        "query": "SELECT\n  `t2`.`buildUpPlayPassingClass`\nFROM `Team` AS `t1`\nINNER JOIN `Team_Attributes` AS `t2`\n  ON `t1`.`team_api_id` = `t2`.`team_api_id`\nWHERE\n  `t1`.`team_long_name` = 'FC Lorient' AND `t2`.`date` LIKE '2010-02-22%'",
        "tables_extracted": [
            "Team_Attributes",
            "Team"
        ]
    },
    {
        "question_id": 1113,
        "db_id": "european_football_2",
        "query": "SELECT\n  `t2`.`defenceAggressionClass`\nFROM `Team` AS `t1`\nINNER JOIN `Team_Attributes` AS `t2`\n  ON `t1`.`team_api_id` = `t2`.`team_api_id`\nWHERE\n  `t1`.`team_long_name` = 'Hannover 96' AND `t2`.`date` LIKE '2015-09-10%'",
        "tables_extracted": [
            "Team_Attributes",
            "Team"
        ]
    },
    {
        "question_id": 1114,
        "db_id": "european_football_2",
        "query": "SELECT\n  CAST(SUM(`t2`.`overall_rating`) AS DOUBLE) / COUNT(`t2`.`id`)\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_fifa_api_id` = `t2`.`player_fifa_api_id`\nWHERE\n  `t1`.`player_name` = 'Marko Arnautovic'\n  AND SUBSTR(`t2`.`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1115,
        "db_id": "european_football_2",
        "query": "SELECT\n  (\n    SUM(\n      CASE\n        WHEN `t1`.`player_name` = 'Landon Donovan'\n        THEN `t2`.`overall_rating`\n        ELSE 0\n      END\n    ) * 1.0 - SUM(\n      CASE WHEN `t1`.`player_name` = 'Jordan Bowery' THEN `t2`.`overall_rating` ELSE 0 END\n    )\n  ) * 100 / SUM(\n    CASE\n      WHEN `t1`.`player_name` = 'Landon Donovan'\n      THEN `t2`.`overall_rating`\n      ELSE 0\n    END\n  ) AS `LvsJ_percent`\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_fifa_api_id` = `t2`.`player_fifa_api_id`\nWHERE\n  SUBSTR(`t2`.`date`, 1, 10) = '2013-07-12'",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1116,
        "db_id": "european_football_2",
        "query": "SELECT player_name FROM (SELECT player_name, height, DENSE_RANK() OVER (ORDER BY height DESC) as `rank`FROM Player) AS ranked_players WHERE `rank` = 1",
        "tables_extracted": [
            "Player"
        ]
    },
    {
        "question_id": 1122,
        "db_id": "european_football_2",
        "query": "SELECT DISTINCT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1124,
        "db_id": "european_football_2",
        "query": "SELECT DISTINCT\n  `t1`.`player_name`\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_api_id` = `t2`.`player_api_id`\nWHERE\n  `t2`.`attacking_work_rate` = 'high'",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1130,
        "db_id": "european_football_2",
        "query": "SELECT DISTINCT\n  `t1`.`team_short_name`\nFROM `Team` AS `t1`\nINNER JOIN `Team_Attributes` AS `t2`\n  ON `t1`.`team_api_id` = `t2`.`team_api_id`\nWHERE\n  `t2`.`chanceCreationPassingClass` = 'Safe'",
        "tables_extracted": [
            "Team_Attributes",
            "Team"
        ]
    },
    {
        "question_id": 1133,
        "db_id": "european_football_2",
        "query": "SELECT\n  COUNT(`id`)\nFROM `Player`\nWHERE\n  `birthday` > '1990' AND `player_name` LIKE 'Aaron%'",
        "tables_extracted": [
            "Player"
        ]
    },
    {
        "question_id": 1134,
        "db_id": "european_football_2",
        "query": "SELECT\n  SUM(CASE WHEN `t1`.`id` = 6 THEN `t1`.`jumping` ELSE 0 END) - SUM(CASE WHEN `t1`.`id` = 23 THEN `t1`.`jumping` ELSE 0 END)\nFROM `Player_Attributes` AS `t1`",
        "tables_extracted": [
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1135,
        "db_id": "european_football_2",
        "query": "SELECT\n  `id`\nFROM `Player_Attributes`\nWHERE\n  `preferred_foot` = 'right'\nORDER BY\n  `potential` ASC\nLIMIT 4",
        "tables_extracted": [
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1136,
        "db_id": "european_football_2",
        "query": "SELECT\n  COUNT(`t1`.`id`)\nFROM `Player_Attributes` AS `t1`\nWHERE\n  `t1`.`preferred_foot` = 'left'\n  AND `t1`.`crossing` = (\n    SELECT\n      MAX(`crossing`)\n    FROM `Player_Attributes`\n  )",
        "tables_extracted": [
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1139,
        "db_id": "european_football_2",
        "query": "SELECT\n  `t2`.`home_team_goal`,\n  `t2`.`away_team_goal`\nFROM `League` AS `t1`\nINNER JOIN `Match` AS `t2`\n  ON `t1`.`id` = `t2`.`league_id`\nWHERE\n  `t1`.`name` = 'Belgium Jupiler League' AND `t2`.`date` LIKE '2008-09-24%'",
        "tables_extracted": [
            "League",
            "Match"
        ]
    },
    {
        "question_id": 1141,
        "db_id": "european_football_2",
        "query": "SELECT DISTINCT\n  `t1`.`buildUpPlaySpeedClass`\nFROM `Team_Attributes` AS `t1`\nINNER JOIN `Team` AS `t2`\n  ON `t1`.`team_api_id` = `t2`.`team_api_id`\nWHERE\n  `t2`.`team_long_name` = 'KSV Cercle Brugge'",
        "tables_extracted": [
            "Team_Attributes",
            "Team"
        ]
    },
    {
        "question_id": 1144,
        "db_id": "european_football_2",
        "query": "SELECT\n  `id`,\n  `finishing`,\n  `curve`\nFROM `Player_Attributes`\nWHERE\n  `player_api_id` = (\n    SELECT\n      `player_api_id`\n    FROM `Player`\n    ORDER BY\n      `weight` DESC\n    LIMIT 1\n  )\nLIMIT 1",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1145,
        "db_id": "european_football_2",
        "query": "SELECT\n  `t1`.`name`\nFROM `League` AS `t1`\nINNER JOIN `Match` AS `t2`\n  ON `t1`.`id` = `t2`.`league_id`\nWHERE\n  `t2`.`season` = '2015/2016'\nGROUP BY\n  `t1`.`name`\nORDER BY\n  COUNT(`t2`.`id`) DESC\nLIMIT 4",
        "tables_extracted": [
            "League",
            "Match"
        ]
    },
    {
        "question_id": 1146,
        "db_id": "european_football_2",
        "query": "SELECT\n  `t2`.`team_long_name`\nFROM `Match` AS `t1`\nINNER JOIN `Team` AS `t2`\n  ON `t1`.`away_team_api_id` = `t2`.`team_api_id`\nORDER BY\n  `t1`.`away_team_goal` DESC\nLIMIT 1",
        "tables_extracted": [
            "Match",
            "Team"
        ]
    },
    {
        "question_id": 1147,
        "db_id": "european_football_2",
        "query": "SELECT DISTINCT\n  `t1`.`player_name`\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_api_id` = `t2`.`player_api_id`\nWHERE\n  `t2`.`overall_rating` = (\n    SELECT\n      MAX(`overall_rating`)\n    FROM `Player_Attributes`\n  )",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 1148,
        "db_id": "european_football_2",
        "query": "SELECT\n  CAST(COUNT(CASE WHEN `t2`.`overall_rating` > 70 AND `t1`.`height` < 180 THEN `t1`.`id` ELSE NULL END) AS DOUBLE) * 100 / COUNT(`t1`.`id`) AS `percent`\nFROM `Player` AS `t1`\nINNER JOIN `Player_Attributes` AS `t2`\n  ON `t1`.`player_api_id` = `t2`.`player_api_id`",
        "tables_extracted": [
            "Player",
            "Player_Attributes"
        ]
    },
    {
        "question_id": 846,
        "db_id": "formula_1",
        "query": "SELECT\n  `T2`.`driverRef`\nFROM `qualifying` AS `T1`\nINNER JOIN `drivers` AS `T2`\n  ON `T2`.`driverId` = `T1`.`driverId`\nWHERE\n  `T1`.`raceId` = 20\nORDER BY\n  `T1`.`q1` DESC\nLIMIT 5",
        "tables_extracted": [
            "qualifying",
            "drivers"
        ]
    },
    {
        "question_id": 847,
        "db_id": "formula_1",
        "query": "SELECT\n  `T2`.`surname`\nFROM `qualifying` AS `T1`\nINNER JOIN `drivers` AS `T2`\n  ON `T2`.`driverId` = `T1`.`driverId`\nWHERE\n  `T1`.`raceId` = 19\nORDER BY\n  `T1`.`q2` ASC\nLIMIT 1",
        "tables_extracted": [
            "qualifying",
            "drivers"
        ]
    },
    {
        "question_id": 850,
        "db_id": "formula_1",
        "query": "SELECT DISTINCT\n  `T2`.`name`\nFROM `circuits` AS `T1`\nINNER JOIN `races` AS `T2`\n  ON `T2`.`circuitID` = `T1`.`circuitId`\nWHERE\n  `T1`.`country` = 'Germany'",
        "tables_extracted": [
            "circuits",
            "races"
        ]
    },
    {
        "question_id": 854,
        "db_id": "formula_1",
        "query": "SELECT DISTINCT\n  `T1`.`lat`,\n  `T1`.`lng`\nFROM `circuits` AS `T1`\nINNER JOIN `races` AS `T2`\n  ON `T2`.`circuitID` = `T1`.`circuitId`\nWHERE\n  `T2`.`name` = 'Australian Grand Prix'",
        "tables_extracted": [
            "circuits",
            "races"
        ]
    },
    {
        "question_id": 857,
        "db_id": "formula_1",
        "query": "SELECT DISTINCT\n  `T1`.`lat`,\n  `T1`.`lng`\nFROM `circuits` AS `T1`\nINNER JOIN `races` AS `T2`\n  ON `T2`.`circuitID` = `T1`.`circuitId`\nWHERE\n  `T2`.`name` = 'Abu Dhabi Grand Prix'",
        "tables_extracted": [
            "circuits",
            "races"
        ]
    },
    {
        "question_id": 859,
        "db_id": "formula_1",
        "query": "SELECT\n  `T1`.`q1`\nFROM `qualifying` AS `T1`\nINNER JOIN `drivers` AS `T2`\n  ON `T2`.`driverId` = `T1`.`driverId`\nWHERE\n  `T1`.`raceId` = 354 AND `T2`.`forename` = 'Bruno' AND `T2`.`surname` = 'Senna'",
        "tables_extracted": [
            "qualifying",
            "drivers"
        ]
    },
    {
        "question_id": 861,
        "db_id": "formula_1",
        "query": "SELECT\n  `T2`.`number`\nFROM `qualifying` AS `T1`\nINNER JOIN `drivers` AS `T2`\n  ON `T2`.`driverId` = `T1`.`driverId`\nWHERE\n  `T1`.`raceId` = 903 AND `T1`.`q3` LIKE '1:54%'",
        "tables_extracted": [
            "qualifying",
            "drivers"
        ]
    },
    {
        "question_id": 862,
        "db_id": "formula_1",
        "query": "SELECT\n  COUNT(`T3`.`driverId`)\nFROM `races` AS `T1`\nINNER JOIN `results` AS `T2`\n  ON `T2`.`raceId` = `T1`.`raceId`\nINNER JOIN `drivers` AS `T3`\n  ON `T3`.`driverId` = `T2`.`driverId`\nWHERE\n  `T1`.`year` = 2007 AND `T1`.`name` = 'Bahrain Grand Prix' AND `T2`.`time` IS NULL",
        "tables_extracted": [
            "results",
            "races",
            "drivers"
        ]
    },
    {
        "question_id": 865,
        "db_id": "formula_1",
        "query": "SELECT\n  `T1`.`forename`,\n  `T1`.`surname`\nFROM `drivers` AS `T1`\nINNER JOIN `results` AS `T2`\n  ON `T2`.`driverId` = `T1`.`driverId`\nWHERE\n  `T2`.`raceId` = 592 AND NOT `T2`.`time` IS NULL AND NOT `T1`.`dob` IS NULL\nORDER BY\n  `T1`.`dob` ASC\nLIMIT 1",
        "tables_extracted": [
            "results",
            "drivers"
        ]
    },
    {
        "question_id": 866,
        "db_id": "formula_1",
        "query": "SELECT DISTINCT\n  `T2`.`forename`,\n  `T2`.`surname`,\n  `T2`.`url`\nFROM `lapTimes` AS `T1`\nINNER JOIN `drivers` AS `T2`\n  ON `T2`.`driverId` = `T1`.`driverId`\nWHERE\n  `T1`.`raceId` = 161 AND `T1`.`time` LIKE '1:27%'",
        "tables_extracted": [
            "lapTimes",
            "drivers"
        ]
    },
    {
        "question_id": 868,
        "db_id": "formula_1",
        "query": "SELECT DISTINCT\n  `T1`.`lat`,\n  `T1`.`lng`\nFROM `circuits` AS `T1`\nINNER JOIN `races` AS `T2`\n  ON `T2`.`circuitID` = `T1`.`circuitId`\nWHERE\n  `T2`.`name` = 'Malaysian Grand Prix'",
        "tables_extracted": [
            "circuits",
            "races"
        ]
    },
    {
        "question_id": 869,
        "db_id": "formula_1",
        "query": "SELECT\n  `T2`.`url`\nFROM `constructorResults` AS `T1`\nINNER JOIN `constructors` AS `T2`\n  ON `T2`.`constructorId` = `T1`.`constructorId`\nWHERE\n  `T1`.`raceId` = 9\nORDER BY\n  `T1`.`points` DESC\nLIMIT 1",
        "tables_extracted": [
            "constructors",
            "constructorResults"
        ]
    },
    {
        "question_id": 872,
        "db_id": "formula_1",
        "query": "SELECT\n  `T2`.`code`\nFROM `qualifying` AS `T1`\nINNER JOIN `drivers` AS `T2`\n  ON `T2`.`driverId` = `T1`.`driverId`\nWHERE\n  `T1`.`raceId` = 45 AND `T1`.`q3` LIKE '1:33%'",
        "tables_extracted": [
            "qualifying",
            "drivers"
        ]
    },
    {
        "question_id": 875,
        "db_id": "formula_1",
        "query": "SELECT\n  `T2`.`url`\nFROM `races` AS `T1`\nINNER JOIN `seasons` AS `T2`\n  ON `T2`.`year` = `T1`.`year`\nWHERE\n  `T1`.`raceId` = 901",
        "tables_extracted": [
            "races",
            "seasons"
        ]
    },
    {
        "question_id": 877,
        "db_id": "formula_1",
        "query": "SELECT\n  `T1`.`forename`,\n  `T1`.`surname`\nFROM `drivers` AS `T1`\nINNER JOIN `results` AS `T2`\n  ON `T2`.`driverId` = `T1`.`driverId`\nWHERE\n  `T2`.`raceId` = 872 AND NOT `T2`.`time` IS NULL\nORDER BY\n  `T1`.`dob` DESC\nLIMIT 1",
        "tables_extracted": [
            "results",
            "drivers"
        ]
    },
    {
        "question_id": 879,
        "db_id": "formula_1",
        "query": "SELECT\n  `T1`.`nationality`\nFROM `drivers` AS `T1`\nINNER JOIN `results` AS `T2`\n  ON `T2`.`driverId` = `T1`.`driverId`\nORDER BY\n  `T2`.`fastestLapSpeed` DESC\nLIMIT 1",
        "tables_extracted": [
            "results",
            "drivers"
        ]
    },
    {
        "question_id": 880,
        "db_id": "formula_1",
        "query": "SELECT\n  (\n    SUM(CASE WHEN `T2`.`raceId` = 853 THEN `T2`.`fastestLapSpeed` ELSE 0 END) - SUM(CASE WHEN `T2`.`raceId` = 854 THEN `T2`.`fastestLapSpeed` ELSE 0 END)\n  ) * 100 / SUM(CASE WHEN `T2`.`raceId` = 853 THEN `T2`.`fastestLapSpeed` ELSE 0 END)\nFROM `drivers` AS `T1`\nINNER JOIN `results` AS `T2`\n  ON `T2`.`driverId` = `T1`.`driverId`\nWHERE\n  `T1`.`forename` = 'Paul' AND `T1`.`surname` = 'di Resta'",
        "tables_extracted": [
            "results",
            "drivers"
        ]
    },
    {
        "question_id": 881,
        "db_id": "formula_1",
        "query": "SELECT\n  CAST(COUNT(CASE WHEN NOT `T2`.`time` IS NULL THEN `T2`.`driverId` END) AS DOUBLE) * 100 / COUNT(`T2`.`driverId`)\nFROM `races` AS `T1`\nINNER JOIN `results` AS `T2`\n  ON `T2`.`raceId` = `T1`.`raceId`\nWHERE\n  `T1`.`date` = '1983-07-16'",
        "tables_extracted": [
            "results",
            "races"
        ]
    },
    {
        "question_id": 884,
        "db_id": "formula_1",
        "query": "SELECT\n  `name`\nFROM `races`\nWHERE\n  DATE_FORMAT(CAST(`date` AS DATETIME), '%Y') = (\n    SELECT\n      DATE_FORMAT(CAST(`date` AS DATETIME), '%Y')\n    FROM `races`\n    ORDER BY\n      `date` ASC\n    LIMIT 1\n  )\n  AND DATE_FORMAT(CAST(`date` AS DATETIME), '%m') = (\n    SELECT\n      DATE_FORMAT(CAST(`date` AS DATETIME), '%m')\n    FROM `races`\n    ORDER BY\n      `date` ASC\n    LIMIT 1\n  )",
        "tables_extracted": [
            "races"
        ]
    },
    {
        "question_id": 892,
        "db_id": "formula_1",
        "query": "SELECT\n  `T3`.`forename`,\n  `T3`.`surname`,\n  `T2`.`points`\nFROM `races` AS `T1`\nINNER JOIN `driverStandings` AS `T2`\n  ON `T2`.`raceId` = `T1`.`raceId`\nINNER JOIN `drivers` AS `T3`\n  ON `T3`.`driverId` = `T2`.`driverId`\nORDER BY\n  `T2`.`points` DESC\nLIMIT 1",
        "tables_extracted": [
            "races",
            "drivers",
            "driverStandings"
        ]
    },
    {
        "question_id": 894,
        "db_id": "formula_1",
        "query": "SELECT\n  `T2`.`milliseconds`,\n  `T1`.`forename`,\n  `T1`.`surname`,\n  `T3`.`name`\nFROM `drivers` AS `T1`\nINNER JOIN `lapTimes` AS `T2`\n  ON `T1`.`driverId` = `T2`.`driverId`\nINNER JOIN `races` AS `T3`\n  ON `T2`.`raceId` = `T3`.`raceId`\nORDER BY\n  `T2`.`milliseconds` ASC\nLIMIT 1",
        "tables_extracted": [
            "lapTimes",
            "races",
            "drivers"
        ]
    },
    {
        "question_id": 895,
        "db_id": "formula_1",
        "query": "SELECT\n  AVG(`T2`.`milliseconds`)\nFROM `races` AS `T1`\nINNER JOIN `lapTimes` AS `T2`\n  ON `T2`.`raceId` = `T1`.`raceId`\nINNER JOIN `drivers` AS `T3`\n  ON `T3`.`driverId` = `T2`.`driverId`\nWHERE\n  `T3`.`forename` = 'Lewis'\n  AND `T3`.`surname` = 'Hamilton'\n  AND `T1`.`year` = 2009\n  AND `T1`.`name` = 'Malaysian Grand Prix'",
        "tables_extracted": [
            "lapTimes",
            "races",
            "drivers"
        ]
    },
    {
        "question_id": 896,
        "db_id": "formula_1",
        "query": "SELECT\n  CAST(COUNT(CASE WHEN `T2`.`position` <> 1 THEN `T2`.`position` END) AS DOUBLE) * 100 / COUNT(`T2`.`driverStandingsId`)\nFROM `races` AS `T1`\nINNER JOIN `driverStandings` AS `T2`\n  ON `T2`.`raceId` = `T1`.`raceId`\nINNER JOIN `drivers` AS `T3`\n  ON `T3`.`driverId` = `T2`.`driverId`\nWHERE\n  `T3`.`surname` = 'Hamilton' AND `T1`.`year` >= 2010",
        "tables_extracted": [
            "races",
            "drivers",
            "driverStandings"
        ]
    },
    {
        "question_id": 897,
        "db_id": "formula_1",
        "query": "SELECT\n  `T1`.`forename`,\n  `T1`.`surname`,\n  `T1`.`nationality`,\n  MAX(`T2`.`points`)\nFROM `drivers` AS `T1`\nINNER JOIN `driverStandings` AS `T2`\n  ON `T2`.`driverId` = `T1`.`driverId`\nWHERE\n  `T2`.`wins` >= 1\nGROUP BY\n  `T1`.`forename`,\n  `T1`.`surname`,\n  `T1`.`nationality`\nORDER BY\n  COUNT(`T2`.`wins`) DESC\nLIMIT 1",
        "tables_extracted": [
            "driverStandings",
            "drivers"
        ]
    },
    {
        "question_id": 898,
        "db_id": "formula_1",
        "query": "SELECT\n  DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS DATETIME), '%Y') - DATE_FORMAT(CAST(`dob` AS DATETIME), '%Y'),\n  `forename`,\n  `surname`\nFROM `drivers`\nWHERE\n  `nationality` = 'Japanese'\nORDER BY\n  `dob` DESC\nLIMIT 1",
        "tables_extracted": [
            "drivers"
        ]
    },
    {
        "question_id": 901,
        "db_id": "formula_1",
        "query": "SELECT DISTINCT\n  `T2`.`name`,\n  `T1`.`name`,\n  `T1`.`location`\nFROM `circuits` AS `T1`\nINNER JOIN `races` AS `T2`\n  ON `T2`.`circuitID` = `T1`.`circuitId`\nWHERE\n  `T2`.`year` = 2005 AND DATE_FORMAT(CAST(`T2`.`date` AS DATETIME), '%m') = '09'",
        "tables_extracted": [
            "circuits",
            "races"
        ]
    },
    {
        "question_id": 902,
        "db_id": "formula_1",
        "query": "SELECT\n  `T1`.`name`\nFROM `races` AS `T1`\nINNER JOIN `driverStandings` AS `T2`\n  ON `T2`.`raceId` = `T1`.`raceId`\nINNER JOIN `drivers` AS `T3`\n  ON `T3`.`driverId` = `T2`.`driverId`\nWHERE\n  `T3`.`forename` = 'Alex' AND `T3`.`surname` = 'Yoong' AND `T2`.`position` < 20",
        "tables_extracted": [
            "races",
            "drivers",
            "driverStandings"
        ]
    },
    {
        "question_id": 904,
        "db_id": "formula_1",
        "query": "SELECT\n  `T1`.`name`,\n  `T1`.`year`\nFROM `races` AS `T1`\nINNER JOIN `lapTimes` AS `T2`\n  ON `T2`.`raceId` = `T1`.`raceId`\nINNER JOIN `drivers` AS `T3`\n  ON `T3`.`driverId` = `T2`.`driverId`\nWHERE\n  `T3`.`forename` = 'Michael' AND `T3`.`surname` = 'Schumacher'\nORDER BY\n  `T2`.`milliseconds` ASC\nLIMIT 1",
        "tables_extracted": [
            "lapTimes",
            "races",
            "drivers"
        ]
    },
    {
        "question_id": 906,
        "db_id": "formula_1",
        "query": "SELECT\n  `T1`.`name`,\n  `T2`.`points`\nFROM `races` AS `T1`\nINNER JOIN `driverStandings` AS `T2`\n  ON `T2`.`raceId` = `T1`.`raceId`\nINNER JOIN `drivers` AS `T3`\n  ON `T3`.`driverId` = `T2`.`driverId`\nWHERE\n  `T3`.`forename` = 'Lewis' AND `T3`.`surname` = 'Hamilton'\nORDER BY\n  `T1`.`year` ASC\nLIMIT 1",
        "tables_extracted": [
            "races",
            "drivers",
            "driverStandings"
        ]
    },
    {
        "question_id": 909,
        "db_id": "formula_1",
        "query": "SELECT\n  CAST(COUNT(CASE WHEN `T1`.`country` = 'Germany' THEN `T2`.`circuitID` END) AS DOUBLE) * 100 / COUNT(`T2`.`circuitId`)\nFROM `circuits` AS `T1`\nINNER JOIN `races` AS `T2`\n  ON `T2`.`circuitID` = `T1`.`circuitId`\nWHERE\n  `T2`.`name` = 'European Grand Prix'",
        "tables_extracted": [
            "circuits",
            "races"
        ]
    },
    {
        "question_id": 910,
        "db_id": "formula_1",
        "query": "SELECT\n  `lat`,\n  `lng`\nFROM `circuits`\nWHERE\n  `name` = 'Silverstone Circuit'",
        "tables_extracted": [
            "circuits"
        ]
    },
    {
        "question_id": 912,
        "db_id": "formula_1",
        "query": "SELECT\n  `circuitRef`\nFROM `circuits`\nWHERE\n  `name` = 'Marina Bay Street Circuit'",
        "tables_extracted": [
            "circuits"
        ]
    },
    {
        "question_id": 915,
        "db_id": "formula_1",
        "query": "SELECT\n  `nationality`\nFROM `drivers`\nWHERE\n  NOT `dob` IS NULL\nORDER BY\n  `dob` ASC\nLIMIT 1",
        "tables_extracted": [
            "drivers"
        ]
    },
    {
        "question_id": 928,
        "db_id": "formula_1",
        "query": "SELECT\n  `T3`.`forename`,\n  `T3`.`surname`,\n  `T3`.`driverRef`\nFROM `races` AS `T1`\nINNER JOIN `results` AS `T2`\n  ON `T2`.`raceId` = `T1`.`raceId`\nINNER JOIN `drivers` AS `T3`\n  ON `T3`.`driverId` = `T2`.`driverId`\nWHERE\n  `T1`.`name` = 'Canadian Grand Prix' AND `T2`.`rank` = 1 AND `T1`.`year` = 2007",
        "tables_extracted": [
            "results",
            "races",
            "drivers"
        ]
    },
    {
        "question_id": 930,
        "db_id": "formula_1",
        "query": "SELECT\n  `name`\nFROM `races`\nWHERE\n  `raceId` IN (\n    SELECT\n      `raceId`\n    FROM `results`\n    WHERE\n      `rank` = 1\n      AND `driverId` = (\n        SELECT\n          `driverId`\n        FROM `drivers`\n        WHERE\n          `forename` = 'Lewis' AND `surname` = 'Hamilton'\n      )\n  )",
        "tables_extracted": [
            "results",
            "races",
            "drivers"
        ]
    },
    {
        "question_id": 931,
        "db_id": "formula_1",
        "query": "SELECT\n  `T2`.`fastestLapSpeed`\nFROM `races` AS `T1`\nINNER JOIN `results` AS `T2`\n  ON `T2`.`raceId` = `T1`.`raceId`\nWHERE\n  `T1`.`name` = 'Spanish Grand Prix'\n  AND `T1`.`year` = 2009\n  AND NOT `T2`.`fastestLapSpeed` IS NULL\nORDER BY\n  `T2`.`fastestLapSpeed` DESC\nLIMIT 1",
        "tables_extracted": [
            "results",
            "races"
        ]
    },
    {
        "question_id": 933,
        "db_id": "formula_1",
        "query": "SELECT\n  `T2`.`positionOrder`\nFROM `races` AS `T1`\nINNER JOIN `results` AS `T2`\n  ON `T2`.`raceId` = `T1`.`raceId`\nINNER JOIN `drivers` AS `T3`\n  ON `T3`.`driverId` = `T2`.`driverId`\nWHERE\n  `T3`.`forename` = 'Lewis'\n  AND `T3`.`surname` = 'Hamilton'\n  AND `T1`.`name` = 'Chinese Grand Prix'\n  AND `T1`.`year` = 2008",
        "tables_extracted": [
            "results",
            "races",
            "drivers"
        ]
    },
    {
        "question_id": 937,
        "db_id": "formula_1",
        "query": "SELECT\n  `T1`.`time`\nFROM `results` AS `T1`\nINNER JOIN `races` AS `T2`\n  ON `T1`.`raceId` = `T2`.`raceId`\nWHERE\n  `T1`.`rank` = 2 AND `T2`.`name` = 'Chinese Grand Prix' AND `T2`.`year` = 2008",
        "tables_extracted": [
            "results",
            "races"
        ]
    },
    {
        "question_id": 940,
        "db_id": "formula_1",
        "query": "SELECT COUNT(*) FROM (SELECT `T1`.`driverId` FROM `results` AS `T1` INNER JOIN `races` AS `T2` ON `T1`.`raceId` = `T2`.`raceId` WHERE `T2`.`name` = 'Chinese Grand Prix' AND `T2`.`year` = 2008 AND `T1`.`time` IS NOT NULL GROUP BY `T1`.`driverId` HAVING COUNT(`T2`.`raceId`) > 0) AS derived_table",
        "tables_extracted": [
            "results",
            "races"
        ]
    },
    {
        "question_id": 944,
        "db_id": "formula_1",
        "query": "WITH `time_in_seconds` AS (\n  SELECT\n    `T1`.`positionOrder`,\n    CASE\n      WHEN `T1`.`positionOrder` = 1\n      THEN (\n        CAST(SUBSTR(`T1`.`time`, 1, 1) AS DOUBLE) * 3600\n      ) + (\n        CAST(SUBSTR(`T1`.`time`, 3, 2) AS DOUBLE) * 60\n      ) + CAST(SUBSTR(`T1`.`time`, 6) AS DOUBLE)\n      ELSE CAST(SUBSTR(`T1`.`time`, 2) AS DOUBLE)\n    END AS `time_seconds`\n  FROM `results` AS `T1`\n  INNER JOIN `races` AS `T2`\n    ON `T1`.`raceId` = `T2`.`raceId`\n  WHERE\n    `T2`.`name` = 'Australian Grand Prix'\n    AND NOT `T1`.`time` IS NULL\n    AND `T2`.`year` = 2008\n), `champion_time` AS (\n  SELECT\n    `time_seconds`\n  FROM `time_in_seconds`\n  WHERE\n    `positionOrder` = 1\n), `last_driver_incremental` AS (\n  SELECT\n    `time_seconds`\n  FROM `time_in_seconds`\n  WHERE\n    `positionOrder` = (\n      SELECT\n        MAX(`positionOrder`)\n      FROM `time_in_seconds`\n    )\n)\nSELECT\n  (\n    CAST((\n      SELECT\n        `time_seconds`\n      FROM `last_driver_incremental`\n    ) AS DOUBLE) * 100\n  ) / (\n    SELECT\n      `time_seconds` + (\n        SELECT\n          `time_seconds`\n        FROM `last_driver_incremental`\n      )\n    FROM `champion_time`\n  )",
        "tables_extracted": [
            "time_in_seconds",
            "champion_time",
            "races",
            "results",
            "last_driver_incremental"
        ]
    },
    {
        "question_id": 945,
        "db_id": "formula_1",
        "query": "SELECT\n  COUNT(`circuitId`)\nFROM `circuits`\nWHERE\n  `location` = 'Adelaide' AND `country` = 'Australia'",
        "tables_extracted": [
            "circuits"
        ]
    },
    {
        "question_id": 948,
        "db_id": "formula_1",
        "query": "SELECT\n  MAX(`T1`.`points`)\nFROM `constructorStandings` AS `T1`\nINNER JOIN `constructors` AS `T2`\n  ON `T1`.`constructorId` = `T2`.`constructorId`\nWHERE\n  `T2`.`nationality` = 'British'",
        "tables_extracted": [
            "constructors",
            "constructorStandings"
        ]
    },
    {
        "question_id": 950,
        "db_id": "formula_1",
        "query": "SELECT\n  `T2`.`name`\nFROM `constructorStandings` AS `T1`\nINNER JOIN `constructors` AS `T2`\n  ON `T1`.`constructorId` = `T2`.`constructorId`\nWHERE\n  `T1`.`points` = 0 AND `T1`.`raceId` = 291",
        "tables_extracted": [
            "constructors",
            "constructorStandings"
        ]
    },
    {
        "question_id": 951,
        "db_id": "formula_1",
        "query": "SELECT\n  COUNT(`T1`.`raceId`)\nFROM `constructorStandings` AS `T1`\nINNER JOIN `constructors` AS `T2`\n  ON `T1`.`constructorId` = `T2`.`constructorId`\nWHERE\n  `T1`.`points` = 0 AND `T2`.`nationality` = 'Japanese'\nGROUP BY\n  `T1`.`constructorId`\nHAVING\n  COUNT(`raceId`) = 2",
        "tables_extracted": [
            "constructors",
            "constructorStandings"
        ]
    },
    {
        "question_id": 954,
        "db_id": "formula_1",
        "query": "SELECT\n  CAST(SUM(CASE WHEN NOT `T1`.`time` IS NULL THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`T1`.`raceId`)\nFROM `results` AS `T1`\nINNER JOIN `races` AS `T2`\n  ON `T1`.`raceId` = `T2`.`raceId`\nINNER JOIN `drivers` AS `T3`\n  ON `T1`.`driverId` = `T3`.`driverId`\nWHERE\n  `T3`.`nationality` = 'Japanese' AND `T2`.`year` BETWEEN 2007 AND 2009",
        "tables_extracted": [
            "results",
            "races",
            "drivers"
        ]
    },
    {
        "question_id": 955,
        "db_id": "formula_1",
        "query": "WITH time_in_seconds AS (SELECT T2.year, T2.raceId, T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS FLOAT) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS FLOAT) * 60) + CAST(SUBSTR(T1.time, 6, 2) AS FLOAT) + CAST(SUBSTR(T1.time, 9) AS FLOAT) / 1000 ELSE 0 END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE NOT T1.time IS NULL), champion_time AS (SELECT year, raceId, time_seconds FROM time_in_seconds WHERE positionOrder = 1) SELECT year, AVG(time_seconds) FROM champion_time WHERE year < 1975 GROUP BY year HAVING NOT AVG(time_seconds) IS NULL",
        "tables_extracted": [
            "time_in_seconds",
            "results",
            "races",
            "champion_time"
        ]
    },
    {
        "question_id": 959,
        "db_id": "formula_1",
        "query": "SELECT\n  `T1`.`fastestLap`\nFROM `results` AS `T1`\nINNER JOIN `races` AS `T2`\n  ON `T1`.`raceId` = `T2`.`raceId`\nWHERE\n  `T2`.`year` = 2009 AND `T1`.`time` LIKE '_:%:__.___'",
        "tables_extracted": [
            "results",
            "races"
        ]
    },
    {
        "question_id": 960,
        "db_id": "formula_1",
        "query": "SELECT\n  AVG(`T1`.`fastestLapSpeed`)\nFROM `results` AS `T1`\nINNER JOIN `races` AS `T2`\n  ON `T1`.`raceId` = `T2`.`raceId`\nWHERE\n  `T2`.`year` = 2009 AND `T2`.`name` = 'Spanish Grand Prix'",
        "tables_extracted": [
            "results",
            "races"
        ]
    },
    {
        "question_id": 962,
        "db_id": "formula_1",
        "query": "SELECT\n  CAST(SUM(\n    CASE\n      WHEN DATE_FORMAT(CAST(`T3`.`dob` AS DATETIME), '%Y') < '1985' AND `T1`.`laps` > 50\n      THEN 1\n      ELSE 0\n    END\n  ) AS DOUBLE) * 100 / COUNT(*)\nFROM `results` AS `T1`\nINNER JOIN `races` AS `T2`\n  ON `T1`.`raceId` = `T2`.`raceId`\nINNER JOIN `drivers` AS `T3`\n  ON `T1`.`driverId` = `T3`.`driverId`\nWHERE\n  `T2`.`year` BETWEEN 2000 AND 2005",
        "tables_extracted": [
            "results",
            "races",
            "drivers"
        ]
    },
    {
        "question_id": 963,
        "db_id": "formula_1",
        "query": "SELECT\n  COUNT(`T1`.`driverId`)\nFROM `drivers` AS `T1`\nINNER JOIN `lapTimes` AS `T2`\n  ON `T1`.`driverId` = `T2`.`driverId`\nWHERE\n  `T1`.`nationality` = 'French'\n  AND (\n    CAST(SUBSTR(`T2`.`time`, 1, 2) AS SIGNED) * 60 + CAST(SUBSTR(`T2`.`time`, 4, 2) AS SIGNED) + CAST(SUBSTR(`T2`.`time`, 7, 2) AS DOUBLE) / 1000\n  ) < 120",
        "tables_extracted": [
            "lapTimes",
            "drivers"
        ]
    },
    {
        "question_id": 964,
        "db_id": "formula_1",
        "query": "SELECT `code` FROM `drivers` WHERE `Nationality` = 'American'",
        "tables_extracted": [
            "drivers"
        ]
    },
    {
        "question_id": 967,
        "db_id": "formula_1",
        "query": "SELECT COUNT(*) FROM (SELECT `T1`.`nationality` FROM `drivers` AS `T1` ORDER BY `T1`.`dob` DESC LIMIT 3) AS `T3` WHERE `T3`.`nationality` = 'Dutch'",
        "tables_extracted": [
            "drivers"
        ]
    },
    {
        "question_id": 971,
        "db_id": "formula_1",
        "query": "SELECT `driverRef` FROM `drivers` WHERE `nationality` = 'German' ORDER BY `dob` ASC LIMIT 1",
        "tables_extracted": [
            "drivers"
        ]
    },
    {
        "question_id": 972,
        "db_id": "formula_1",
        "query": "SELECT\n  `T2`.`driverId`,\n  `T2`.`code`\nFROM `results` AS `T1`\nINNER JOIN `drivers` AS `T2`\n  ON `T1`.`driverId` = `T2`.`driverId`\nWHERE\n  DATE_FORMAT(CAST(`T2`.`dob` AS DATETIME), '%Y') = '1971'\n  AND NOT `T1`.`fastestLapTime` IS NULL",
        "tables_extracted": [
            "results",
            "drivers"
        ]
    },
    {
        "question_id": 977,
        "db_id": "formula_1",
        "query": "SELECT\n  SUM(CASE WHEN NOT `time` IS NULL THEN 1 ELSE 0 END)\nFROM `results`\nWHERE\n  `statusId` = 2 AND `raceID` < 100 AND `raceId` > 50",
        "tables_extracted": [
            "results"
        ]
    },
    {
        "question_id": 978,
        "db_id": "formula_1",
        "query": "SELECT DISTINCT\n  `location`,\n  `lat`,\n  `lng`\nFROM `circuits`\nWHERE\n  `country` = 'Austria'",
        "tables_extracted": [
            "circuits"
        ]
    },
    {
        "question_id": 981,
        "db_id": "formula_1",
        "query": "SELECT\n  `T3`.`year`,\n  `T3`.`name`,\n  `T3`.`date`,\n  `T3`.`time`\nFROM `qualifying` AS `T1`\nINNER JOIN `drivers` AS `T2`\n  ON `T1`.`driverId` = `T2`.`driverId`\nINNER JOIN `races` AS `T3`\n  ON `T1`.`raceId` = `T3`.`raceId`\nWHERE\n  `T1`.`driverId` = (\n    SELECT\n      `driverId`\n    FROM `drivers`\n    ORDER BY\n      `dob` DESC\n    LIMIT 1\n  )\nORDER BY\n  `T3`.`date` ASC\nLIMIT 1",
        "tables_extracted": [
            "qualifying",
            "races",
            "drivers"
        ]
    },
    {
        "question_id": 988,
        "db_id": "formula_1",
        "query": "SELECT\n  `T2`.`forename`,\n  `T2`.`surname`\nFROM `pitStops` AS `T1`\nINNER JOIN `drivers` AS `T2`\n  ON `T1`.`driverId` = `T2`.`driverId`\nWHERE\n  `T2`.`nationality` = 'German'\n  AND DATE_FORMAT(CAST(`T2`.`dob` AS DATETIME), '%Y') BETWEEN '1980' AND '1985'\nGROUP BY\n  `T2`.`forename`,\n  `T2`.`surname`\nORDER BY\n  AVG(`T1`.`duration`)\nLIMIT 3",
        "tables_extracted": [
            "pitStops",
            "drivers"
        ]
    },
    {
        "question_id": 989,
        "db_id": "formula_1",
        "query": "SELECT\n  `T1`.`time`\nFROM `results` AS `T1`\nINNER JOIN `races` AS `T2`\n  ON `T1`.`raceId` = `T2`.`raceId`\nWHERE\n  `T2`.`name` = 'Canadian Grand Prix'\n  AND `T2`.`year` = 2008\n  AND `T1`.`time` LIKE '_:%:__.___'",
        "tables_extracted": [
            "results",
            "races"
        ]
    },
    {
        "question_id": 990,
        "db_id": "formula_1",
        "query": "SELECT\n  `T3`.`constructorRef`,\n  `T3`.`url`\nFROM `results` AS `T1`\nINNER JOIN `races` AS `T2`\n  ON `T1`.`raceId` = `T2`.`raceId`\nINNER JOIN `constructors` AS `T3`\n  ON `T1`.`constructorId` = `T3`.`constructorId`\nWHERE\n  `T2`.`name` = 'Singapore Grand Prix'\n  AND `T2`.`year` = 2009\n  AND `T1`.`time` LIKE '_:%:__.___'",
        "tables_extracted": [
            "results",
            "races",
            "constructors"
        ]
    },
    {
        "question_id": 717,
        "db_id": "superhero",
        "query": "SELECT  `T3`.`power_name` FROM `superhero` AS `T1` INNER JOIN `hero_power` AS `T2`  ON `T1`.`id` = `T2`.`hero_id` INNER JOIN `superpower` AS `T3`  ON `T2`.`power_id` = `T3`.`id` WHERE  `T1`.`superhero_name` = '3-D Man'",
        "tables_extracted": [
            "hero_power",
            "superhero",
            "superpower"
        ]
    },
    {
        "question_id": 994,
        "db_id": "formula_1",
        "query": "SELECT\n  SUM(`T1`.`points`),\n  `T2`.`name`,\n  `T2`.`nationality`\nFROM `constructorResults` AS `T1`\nINNER JOIN `constructors` AS `T2`\n  ON `T1`.`constructorId` = `T2`.`constructorId`\nINNER JOIN `races` AS `T3`\n  ON `T3`.`raceid` = `T1`.`raceid`\nWHERE\n  `T3`.`name` = 'Monaco Grand Prix' AND `T3`.`year` BETWEEN 1980 AND 2010\nGROUP BY\n  `T2`.`name`\nORDER BY\n  SUM(`T1`.`points`) DESC\nLIMIT 1",
        "tables_extracted": [
            "constructors",
            "constructorResults",
            "races"
        ]
    },
    {
        "question_id": 1001,
        "db_id": "formula_1",
        "query": "SELECT\n  `T2`.`forename`,\n  `T2`.`surname`\nFROM `qualifying` AS `T1`\nINNER JOIN `drivers` AS `T2`\n  ON `T1`.`driverId` = `T2`.`driverId`\nINNER JOIN `races` AS `T3`\n  ON `T1`.`raceid` = `T3`.`raceid`\nWHERE\n  NOT `q3` IS NULL\n  AND `T3`.`year` = 2008\n  AND `T3`.`circuitId` IN (\n    SELECT\n      `circuitId`\n    FROM `circuits`\n    WHERE\n      `name` = 'Marina Bay Street Circuit'\n  )\nORDER BY\n  CAST(SUBSTR(`q3`, 1, INSTR(`q3`, ':') - 1) AS SIGNED) * 60 + CAST(SUBSTR(`q3`, INSTR(`q3`, ':') + 1, INSTR(`q3`, '.') - INSTR(`q3`, ':') - 1) AS DOUBLE) + CAST(SUBSTR(`q3`, INSTR(`q3`, '.') + 1) AS DOUBLE) / 1000 ASC\nLIMIT 1",
        "tables_extracted": [
            "circuits",
            "qualifying",
            "races",
            "drivers"
        ]
    },
    {
        "question_id": 1002,
        "db_id": "formula_1",
        "query": "SELECT `T1`.`forename`, `T1`.`surname`, `T1`.`nationality`, `T3`.`name` FROM `drivers` AS `T1` INNER JOIN `driverStandings` AS `T2` ON `T1`.`driverId` = `T2`.`driverId` INNER JOIN `races` AS `T3` ON `T2`.`raceId` = `T3`.`raceId` ORDER BY `T1`.`dob` DESC LIMIT 1",
        "tables_extracted": [
            "driverStandings",
            "races",
            "drivers"
        ]
    },
    {
        "question_id": 1003,
        "db_id": "formula_1",
        "query": "SELECT\n  COUNT(`T1`.`driverId`)\nFROM `results` AS `T1`\nINNER JOIN `races` AS `T2`\n  ON `T1`.`raceId` = `T2`.`raceId`\nINNER JOIN `status` AS `T3`\n  ON `T1`.`statusId` = `T3`.`statusId`\nWHERE\n  `T3`.`statusId` = 3 AND `T2`.`name` = 'Canadian Grand Prix'\nGROUP BY\n  `T1`.`driverId`\nORDER BY\n  COUNT(`T1`.`driverId`) DESC\nLIMIT 1",
        "tables_extracted": [
            "results",
            "races",
            "status"
        ]
    },
    {
        "question_id": 1011,
        "db_id": "formula_1",
        "query": "WITH lap_times_in_seconds AS (SELECT driverId, (CASE WHEN SUBSTR(time, 1, INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS FLOAT) * 60 ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS FLOAT) ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, '.') + 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, '.') + 1) AS FLOAT) / 1000 ELSE 0 END) AS time_in_seconds FROM lapTimes) SELECT T2.forename, T2.surname, T1.driverId FROM (SELECT driverId, MIN(time_in_seconds) AS min_time_in_seconds FROM lap_times_in_seconds GROUP BY driverId) AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.min_time_in_seconds ASC LIMIT 20",
        "tables_extracted": [
            "lapTimes",
            "lap_times_in_seconds",
            "drivers"
        ]
    },
    {
        "question_id": 1014,
        "db_id": "formula_1",
        "query": "WITH `fastest_lap_times` AS (\n  SELECT\n    `T1`.`raceId`,\n    `T1`.`FastestLapTime`,\n    (\n      CAST(SUBSTR(`T1`.`FastestLapTime`, 1, INSTR(`T1`.`FastestLapTime`, ':') - 1) AS DOUBLE) * 60\n    ) + (\n      CAST(SUBSTR(\n        `T1`.`FastestLapTime`,\n        INSTR(`T1`.`FastestLapTime`, ':') + 1,\n        INSTR(`T1`.`FastestLapTime`, '.') - INSTR(`T1`.`FastestLapTime`, ':') - 1\n      ) AS DOUBLE)\n    ) + (\n      CAST(SUBSTR(`T1`.`FastestLapTime`, INSTR(`T1`.`FastestLapTime`, '.') + 1) AS DOUBLE) / 1000\n    ) AS `time_in_seconds`\n  FROM `results` AS `T1`\n  WHERE\n    NOT `T1`.`FastestLapTime` IS NULL\n)\nSELECT\n  `T1`.`FastestLapTime` AS `lap_record`\nFROM `results` AS `T1`\nINNER JOIN `races` AS `T2`\n  ON `T1`.`raceId` = `T2`.`raceId`\nINNER JOIN `circuits` AS `T3`\n  ON `T2`.`circuitId` = `T3`.`circuitId`\nINNER JOIN (\n  SELECT\n    MIN(`fastest_lap_times`.`time_in_seconds`) AS `min_time_in_seconds`\n  FROM `fastest_lap_times`\n  INNER JOIN `races` AS `T2`\n    ON `fastest_lap_times`.`raceId` = `T2`.`raceId`\n  INNER JOIN `circuits` AS `T3`\n    ON `T2`.`circuitId` = `T3`.`circuitId`\n  WHERE\n    `T3`.`country` = 'Italy'\n) AS `T4`\n  ON (\n    CAST(SUBSTR(`T1`.`FastestLapTime`, 1, INSTR(`T1`.`FastestLapTime`, ':') - 1) AS DOUBLE) * 60\n  ) + (\n    CAST(SUBSTR(\n      `T1`.`FastestLapTime`,\n      INSTR(`T1`.`FastestLapTime`, ':') + 1,\n      INSTR(`T1`.`FastestLapTime`, '.') - INSTR(`T1`.`FastestLapTime`, ':') - 1\n    ) AS DOUBLE)\n  ) + (\n    CAST(SUBSTR(`T1`.`FastestLapTime`, INSTR(`T1`.`FastestLapTime`, '.') + 1) AS DOUBLE) / 1000\n  ) = `T4`.`min_time_in_seconds`\nLIMIT 1",
        "tables_extracted": [
            "circuits",
            "results",
            "races",
            "fastest_lap_times"
        ]
    },
    {
        "question_id": 719,
        "db_id": "superhero",
        "query": "SELECT\n  COUNT(`T1`.`id`)\nFROM `superhero` AS `T1`\nINNER JOIN `hero_power` AS `T2`\n  ON `T1`.`id` = `T2`.`hero_id`\nINNER JOIN `superpower` AS `T3`\n  ON `T2`.`power_id` = `T3`.`id`\nWHERE\n  `T3`.`power_name` = 'Super Strength' AND `T1`.`height_cm` > 200",
        "tables_extracted": [
            "hero_power",
            "superhero",
            "superpower"
        ]
    },
    {
        "question_id": 723,
        "db_id": "superhero",
        "query": "SELECT\n  COUNT(`T1`.`id`)\nFROM `superhero` AS `T1`\nINNER JOIN `hero_power` AS `T2`\n  ON `T1`.`id` = `T2`.`hero_id`\nINNER JOIN `superpower` AS `T3`\n  ON `T2`.`power_id` = `T3`.`id`\nINNER JOIN `colour` AS `T4`\n  ON `T1`.`eye_colour_id` = `T4`.`id`\nWHERE\n  `T3`.`power_name` = 'Agility' AND `T4`.`colour` = 'Blue'",
        "tables_extracted": [
            "hero_power",
            "superhero",
            "colour",
            "superpower"
        ]
    },
    {
        "question_id": 724,
        "db_id": "superhero",
        "query": "SELECT\n  `T1`.`superhero_name`\nFROM `superhero` AS `T1`\nINNER JOIN `colour` AS `T2`\n  ON `T1`.`eye_colour_id` = `T2`.`id`\nINNER JOIN `colour` AS `T3`\n  ON `T1`.`hair_colour_id` = `T3`.`id`\nWHERE\n  `T2`.`colour` = 'Blue' AND `T3`.`colour` = 'Blond'",
        "tables_extracted": [
            "colour",
            "superhero"
        ]
    },
    {
        "question_id": 726,
        "db_id": "superhero",
        "query": "SELECT\n  `superhero_name`,\n  `height_cm`,\n  RANK() OVER (ORDER BY `height_cm` DESC) AS `HeightRank`\nFROM `superhero`\nINNER JOIN `publisher`\n  ON `superhero`.`publisher_id` = `publisher`.`id`\nWHERE\n  `publisher`.`publisher_name` = 'Marvel Comics'",
        "tables_extracted": [
            "superhero",
            "publisher"
        ]
    },
    {
        "question_id": 728,
        "db_id": "superhero",
        "query": "SELECT\n  `colour`.`colour` AS `EyeColor`,\n  COUNT(`superhero`.`id`) AS `Count`,\n  RANK() OVER (ORDER BY COUNT(`superhero`.`id`) DESC) AS `PopularityRank`\nFROM `superhero`\nINNER JOIN `colour`\n  ON `superhero`.`eye_colour_id` = `colour`.`id`\nINNER JOIN `publisher`\n  ON `superhero`.`publisher_id` = `publisher`.`id`\nWHERE\n  `publisher`.`publisher_name` = 'Marvel Comics'\nGROUP BY\n  `colour`.`colour`",
        "tables_extracted": [
            "colour",
            "superhero",
            "publisher"
        ]
    },
    {
        "question_id": 730,
        "db_id": "superhero",
        "query": "SELECT\n  `superhero_name`\nFROM `superhero` AS `T1`\nWHERE\n  EXISTS(\n    SELECT\n      1\n    FROM `hero_power` AS `T2`\n    INNER JOIN `superpower` AS `T3`\n      ON `T2`.`power_id` = `T3`.`id`\n    WHERE\n      `T3`.`power_name` = 'Super Strength' AND `T1`.`id` = `T2`.`hero_id`\n  )\n  AND EXISTS(\n    SELECT\n      1\n    FROM `publisher` AS `T4`\n    WHERE\n      `T4`.`publisher_name` = 'Marvel Comics' AND `T1`.`publisher_id` = `T4`.`id`\n  )",
        "tables_extracted": [
            "hero_power",
            "superhero",
            "superpower",
            "publisher"
        ]
    },
    {
        "question_id": 732,
        "db_id": "superhero",
        "query": "SELECT\n  `T2`.`publisher_name`\nFROM `superhero` AS `T1`\nINNER JOIN `publisher` AS `T2`\n  ON `T1`.`publisher_id` = `T2`.`id`\nINNER JOIN `hero_attribute` AS `T3`\n  ON `T1`.`id` = `T3`.`hero_id`\nINNER JOIN `attribute` AS `T4`\n  ON `T3`.`attribute_id` = `T4`.`id`\nWHERE\n  `T4`.`attribute_name` = 'Speed'\nORDER BY\n  `T3`.`attribute_value`\nLIMIT 1",
        "tables_extracted": [
            "superhero",
            "hero_attribute",
            "attribute",
            "publisher"
        ]
    },
    {
        "question_id": 733,
        "db_id": "superhero",
        "query": "SELECT\n  COUNT(`T1`.`id`)\nFROM `superhero` AS `T1`\nINNER JOIN `publisher` AS `T2`\n  ON `T1`.`publisher_id` = `T2`.`id`\nINNER JOIN `colour` AS `T3`\n  ON `T1`.`eye_colour_id` = `T3`.`id`\nWHERE\n  `T2`.`publisher_name` = 'Marvel Comics' AND `T3`.`colour` = 'Gold'",
        "tables_extracted": [
            "colour",
            "superhero",
            "publisher"
        ]
    },
    {
        "question_id": 736,
        "db_id": "superhero",
        "query": "SELECT\n  `T1`.`superhero_name`\nFROM `superhero` AS `T1`\nINNER JOIN `hero_attribute` AS `T2`\n  ON `T1`.`id` = `T2`.`hero_id`\nINNER JOIN `attribute` AS `T3`\n  ON `T2`.`attribute_id` = `T3`.`id`\nWHERE\n  `T3`.`attribute_name` = 'Intelligence'\nORDER BY\n  `T2`.`attribute_value`\nLIMIT 1",
        "tables_extracted": [
            "superhero",
            "hero_attribute",
            "attribute"
        ]
    },
    {
        "question_id": 737,
        "db_id": "superhero",
        "query": "SELECT\n  `T2`.`race`\nFROM `superhero` AS `T1`\nINNER JOIN `race` AS `T2`\n  ON `T1`.`race_id` = `T2`.`id`\nWHERE\n  `T1`.`superhero_name` = 'Copycat'",
        "tables_extracted": [
            "superhero",
            "race"
        ]
    },
    {
        "question_id": 738,
        "db_id": "superhero",
        "query": "SELECT\n  `superhero_name`\nFROM `superhero` AS `T1`\nWHERE\n  EXISTS(\n    SELECT\n      1\n    FROM `hero_attribute` AS `T2`\n    INNER JOIN `attribute` AS `T3`\n      ON `T2`.`attribute_id` = `T3`.`id`\n    WHERE\n      `T3`.`attribute_name` = 'Durability'\n      AND `T2`.`attribute_value` < 50\n      AND `T1`.`id` = `T2`.`hero_id`\n  )",
        "tables_extracted": [
            "superhero",
            "hero_attribute",
            "attribute"
        ]
    },
    {
        "question_id": 739,
        "db_id": "superhero",
        "query": "SELECT\n  `T1`.`superhero_name`\nFROM `superhero` AS `T1`\nINNER JOIN `hero_power` AS `T2`\n  ON `T1`.`id` = `T2`.`hero_id`\nINNER JOIN `superpower` AS `T3`\n  ON `T2`.`power_id` = `T3`.`id`\nWHERE\n  `T3`.`power_name` = 'Death Touch'",
        "tables_extracted": [
            "hero_power",
            "superhero",
            "superpower"
        ]
    },
    {
        "question_id": 740,
        "db_id": "superhero",
        "query": "SELECT\n  COUNT(`T1`.`id`)\nFROM `superhero` AS `T1`\nINNER JOIN `hero_attribute` AS `T2`\n  ON `T1`.`id` = `T2`.`hero_id`\nINNER JOIN `attribute` AS `T3`\n  ON `T2`.`attribute_id` = `T3`.`id`\nINNER JOIN `gender` AS `T4`\n  ON `T1`.`gender_id` = `T4`.`id`\nWHERE\n  `T3`.`attribute_name` = 'Strength'\n  AND `T2`.`attribute_value` = 100\n  AND `T4`.`gender` = 'Female'",
        "tables_extracted": [
            "superhero",
            "hero_attribute",
            "attribute",
            "gender"
        ]
    },
    {
        "question_id": 743,
        "db_id": "superhero",
        "query": "SELECT\n  (\n    CAST(COUNT(*) AS DOUBLE) * 100 / (\n      SELECT\n        COUNT(*)\n      FROM `superhero`\n    )\n  ),\n  CAST(SUM(CASE WHEN `T2`.`publisher_name` = 'Marvel Comics' THEN 1 ELSE 0 END) AS DOUBLE)\nFROM `superhero` AS `T1`\nINNER JOIN `publisher` AS `T2`\n  ON `T1`.`publisher_id` = `T2`.`id`\nINNER JOIN `alignment` AS `T3`\n  ON `T3`.`id` = `T1`.`alignment_id`\nWHERE\n  `T3`.`alignment` = 'Bad'",
        "tables_extracted": [
            "superhero",
            "alignment",
            "publisher"
        ]
    },
    {
        "question_id": 744,
        "db_id": "superhero",
        "query": "SELECT\n  SUM(CASE WHEN `T2`.`publisher_name` = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN `T2`.`publisher_name` = 'DC Comics' THEN 1 ELSE 0 END)\nFROM `superhero` AS `T1`\nINNER JOIN `publisher` AS `T2`\n  ON `T1`.`publisher_id` = `T2`.`id`",
        "tables_extracted": [
            "superhero",
            "publisher"
        ]
    },
    {
        "question_id": 745,
        "db_id": "superhero",
        "query": "SELECT\n  `id`\nFROM `publisher`\nWHERE\n  `publisher_name` = 'Star Trek'",
        "tables_extracted": [
            "publisher"
        ]
    },
    {
        "question_id": 747,
        "db_id": "superhero",
        "query": "SELECT\n  COUNT(`id`)\nFROM `superhero`\nWHERE\n  `full_name` IS NULL",
        "tables_extracted": [
            "superhero"
        ]
    },
    {
        "question_id": 750,
        "db_id": "superhero",
        "query": "SELECT\n  AVG(`T1`.`weight_kg`)\nFROM `superhero` AS `T1`\nINNER JOIN `gender` AS `T2`\n  ON `T1`.`gender_id` = `T2`.`id`\nWHERE\n  `T2`.`gender` = 'Female'",
        "tables_extracted": [
            "superhero",
            "gender"
        ]
    },
    {
        "question_id": 751,
        "db_id": "superhero",
        "query": "SELECT\n  `T3`.`power_name`\nFROM `superhero` AS `T1`\nINNER JOIN `hero_power` AS `T2`\n  ON `T1`.`id` = `T2`.`hero_id`\nINNER JOIN `superpower` AS `T3`\n  ON `T3`.`id` = `T2`.`power_id`\nINNER JOIN `gender` AS `T4`\n  ON `T4`.`id` = `T1`.`gender_id`\nWHERE\n  `T4`.`gender` = 'Male'\nLIMIT 5",
        "tables_extracted": [
            "hero_power",
            "superhero",
            "gender",
            "superpower"
        ]
    },
    {
        "question_id": 753,
        "db_id": "superhero",
        "query": "SELECT DISTINCT\n  `T1`.`superhero_name`\nFROM `superhero` AS `T1`\nINNER JOIN `colour` AS `T2`\n  ON `T1`.`eye_colour_id` = `T2`.`id`\nWHERE\n  `T1`.`height_cm` BETWEEN 170 AND 190 AND `T2`.`colour` = 'No Colour'",
        "tables_extracted": [
            "colour",
            "superhero"
        ]
    },
    {
        "question_id": 758,
        "db_id": "superhero",
        "query": "SELECT DISTINCT\n  `T3`.`colour`\nFROM `superhero` AS `T1`\nINNER JOIN `race` AS `T2`\n  ON `T1`.`race_id` = `T2`.`id`\nINNER JOIN `colour` AS `T3`\n  ON `T1`.`hair_colour_id` = `T3`.`id`\nWHERE\n  `T1`.`height_cm` = 185 AND `T2`.`race` = 'Human'",
        "tables_extracted": [
            "colour",
            "superhero",
            "race"
        ]
    },
    {
        "question_id": 760,
        "db_id": "superhero",
        "query": "SELECT\n  CAST(COUNT(CASE WHEN `T2`.`publisher_name` = 'Marvel Comics' THEN 1 ELSE NULL END) AS DOUBLE) * 100 / COUNT(`T1`.`id`)\nFROM `superhero` AS `T1`\nINNER JOIN `publisher` AS `T2`\n  ON `T1`.`publisher_id` = `T2`.`id`\nWHERE\n  `T1`.`height_cm` BETWEEN 150 AND 180",
        "tables_extracted": [
            "superhero",
            "publisher"
        ]
    },
    {
        "question_id": 761,
        "db_id": "superhero",
        "query": "SELECT\n  `T1`.`superhero_name`\nFROM `superhero` AS `T1`\nINNER JOIN `gender` AS `T2`\n  ON `T1`.`gender_id` = `T2`.`id`\nWHERE\n  `T2`.`gender` = 'Male'\n  AND `T1`.`weight_kg` * 100 > (\n    SELECT\n      AVG(`weight_kg`)\n    FROM `superhero`\n  ) * 79",
        "tables_extracted": [
            "superhero",
            "gender"
        ]
    },
    {
        "question_id": 764,
        "db_id": "superhero",
        "query": "SELECT DISTINCT\n  `T2`.`power_name`\nFROM `hero_power` AS `T1`\nINNER JOIN `superpower` AS `T2`\n  ON `T1`.`power_id` = `T2`.`id`\nWHERE\n  `T1`.`hero_id` = 1",
        "tables_extracted": [
            "hero_power",
            "superpower"
        ]
    },
    {
        "question_id": 765,
        "db_id": "superhero",
        "query": "SELECT\n  COUNT(`T1`.`hero_id`)\nFROM `hero_power` AS `T1`\nINNER JOIN `superpower` AS `T2`\n  ON `T1`.`power_id` = `T2`.`id`\nWHERE\n  `T2`.`power_name` = 'Stealth'",
        "tables_extracted": [
            "hero_power",
            "superpower"
        ]
    },
    {
        "question_id": 766,
        "db_id": "superhero",
        "query": "SELECT `T1`.`full_name` FROM `superhero` AS `T1` INNER JOIN `hero_attribute` AS `T2` ON `T1`.`id` = `T2`.`hero_id` INNER JOIN `attribute` AS `T3` ON `T2`.`attribute_id` = `T3`.`id` WHERE `T3`.`attribute_name` = 'Strength' ORDER BY `T2`.`attribute_value` DESC LIMIT 1",
        "tables_extracted": [
            "superhero",
            "hero_attribute",
            "attribute"
        ]
    },
    {
        "question_id": 769,
        "db_id": "superhero",
        "query": "SELECT\n  `T1`.`superhero_name`\nFROM `superhero` AS `T1`\nINNER JOIN `hero_attribute` AS `T2`\n  ON `T1`.`id` = `T2`.`hero_id`\nINNER JOIN `attribute` AS `T3`\n  ON `T3`.`id` = `T2`.`attribute_id`\nINNER JOIN `publisher` AS `T4`\n  ON `T4`.`id` = `T1`.`publisher_id`\nWHERE\n  `T4`.`publisher_name` = 'Dark Horse Comics'\n  AND `T3`.`attribute_name` = 'Durability'\nORDER BY\n  `T2`.`attribute_value` DESC\nLIMIT 1",
        "tables_extracted": [
            "superhero",
            "hero_attribute",
            "attribute",
            "publisher"
        ]
    },
    {
        "question_id": 772,
        "db_id": "superhero",
        "query": "SELECT\n  `T1`.`eye_colour_id`,\n  `T1`.`hair_colour_id`,\n  `T1`.`skin_colour_id`\nFROM `superhero` AS `T1`\nINNER JOIN `publisher` AS `T2`\n  ON `T2`.`id` = `T1`.`publisher_id`\nINNER JOIN `gender` AS `T3`\n  ON `T3`.`id` = `T1`.`gender_id`\nWHERE\n  `T2`.`publisher_name` = 'Dark Horse Comics' AND `T3`.`gender` = 'Female'",
        "tables_extracted": [
            "superhero",
            "gender",
            "publisher"
        ]
    },
    {
        "question_id": 773,
        "db_id": "superhero",
        "query": "SELECT\n  `T1`.`superhero_name`,\n  `T2`.`publisher_name`\nFROM `superhero` AS `T1`\nINNER JOIN `publisher` AS `T2`\n  ON `T1`.`publisher_id` = `T2`.`id`\nWHERE\n  `T1`.`eye_colour_id` = `T1`.`hair_colour_id`\n  AND `T1`.`eye_colour_id` = `T1`.`skin_colour_id`",
        "tables_extracted": [
            "superhero",
            "publisher"
        ]
    },
    {
        "question_id": 775,
        "db_id": "superhero",
        "query": "SELECT\n  CAST(COUNT(CASE WHEN `T3`.`colour` = 'Blue' THEN `T1`.`id` ELSE NULL END) AS DOUBLE) * 100 / COUNT(`T1`.`id`)\nFROM `superhero` AS `T1`\nINNER JOIN `gender` AS `T2`\n  ON `T1`.`gender_id` = `T2`.`id`\nINNER JOIN `colour` AS `T3`\n  ON `T1`.`skin_colour_id` = `T3`.`id`\nWHERE\n  `T2`.`gender` = 'Female'",
        "tables_extracted": [
            "colour",
            "superhero",
            "gender"
        ]
    },
    {
        "question_id": 779,
        "db_id": "superhero",
        "query": "SELECT\n  COUNT(`T1`.`power_id`)\nFROM `hero_power` AS `T1`\nINNER JOIN `superhero` AS `T2`\n  ON `T1`.`hero_id` = `T2`.`id`\nWHERE\n  `T2`.`superhero_name` = 'Amazo'",
        "tables_extracted": [
            "hero_power",
            "superhero"
        ]
    },
    {
        "question_id": 781,
        "db_id": "superhero",
        "query": "SELECT\n  `T1`.`height_cm`\nFROM `superhero` AS `T1`\nINNER JOIN `colour` AS `T2`\n  ON `T1`.`eye_colour_id` = `T2`.`id`\nWHERE\n  `T2`.`colour` = 'Amber'",
        "tables_extracted": [
            "colour",
            "superhero"
        ]
    },
    {
        "question_id": 782,
        "db_id": "superhero",
        "query": "SELECT\n  `T1`.`superhero_name`\nFROM `superhero` AS `T1`\nINNER JOIN `colour` AS `T2`\n  ON `T1`.`eye_colour_id` = `T2`.`id` AND `T1`.`hair_colour_id` = `T2`.`id`\nWHERE\n  `T2`.`colour` = 'Black'",
        "tables_extracted": [
            "colour",
            "superhero"
        ]
    },
    {
        "question_id": 785,
        "db_id": "superhero",
        "query": "SELECT\n  `T1`.`superhero_name`\nFROM `superhero` AS `T1`\nINNER JOIN `alignment` AS `T2`\n  ON `T1`.`alignment_id` = `T2`.`id`\nWHERE\n  `T2`.`alignment` = 'Neutral'",
        "tables_extracted": [
            "superhero",
            "alignment"
        ]
    },
    {
        "question_id": 786,
        "db_id": "superhero",
        "query": "SELECT\n  COUNT(`T1`.`hero_id`)\nFROM `hero_attribute` AS `T1`\nINNER JOIN `attribute` AS `T2`\n  ON `T1`.`attribute_id` = `T2`.`id`\nWHERE\n  `T2`.`attribute_name` = 'Strength'\n  AND `T1`.`attribute_value` = (\n    SELECT\n      MAX(`attribute_value`)\n    FROM `hero_attribute`\n  )",
        "tables_extracted": [
            "hero_attribute",
            "attribute"
        ]
    },
    {
        "question_id": 788,
        "db_id": "superhero",
        "query": "SELECT\n  CAST(COUNT(CASE WHEN `T2`.`publisher_name` = 'Marvel Comics' AND `T3`.`gender` = 'Female' THEN 1 ELSE NULL END) AS DOUBLE) * 100 / COUNT(CASE WHEN `T2`.`publisher_name` = 'Marvel Comics' THEN 1 ELSE NULL END)\nFROM `superhero` AS `T1`\nINNER JOIN `publisher` AS `T2`\n  ON `T1`.`publisher_id` = `T2`.`id`\nINNER JOIN `gender` AS `T3`\n  ON `T1`.`gender_id` = `T3`.`id`\n",
        "tables_extracted": [
            "superhero",
            "gender",
            "publisher"
        ]
    },
    {
        "question_id": 790,
        "db_id": "superhero",
        "query": "SELECT\n  (\n    SELECT\n      `weight_kg`\n    FROM `superhero`\n    WHERE\n      `full_name` LIKE 'Emil Blonsky'\n  ) - (\n    SELECT\n      `weight_kg`\n    FROM `superhero`\n    WHERE\n      `full_name` LIKE 'Charles Chandler'\n  ) AS `CALCULATE`",
        "tables_extracted": [
            "superhero"
        ]
    },
    {
        "question_id": 791,
        "db_id": "superhero",
        "query": "SELECT\n  CAST(SUM(`height_cm`) AS DOUBLE) / COUNT(`id`)\nFROM `superhero`",
        "tables_extracted": [
            "superhero"
        ]
    },
    {
        "question_id": 792,
        "db_id": "superhero",
        "query": "SELECT\n  `T3`.`power_name`\nFROM `superhero` AS `T1`\nINNER JOIN `hero_power` AS `T2`\n  ON `T1`.`id` = `T2`.`hero_id`\nINNER JOIN `superpower` AS `T3`\n  ON `T2`.`power_id` = `T3`.`id`\nWHERE\n  `T1`.`superhero_name` = 'Abomination'",
        "tables_extracted": [
            "hero_power",
            "superhero",
            "superpower"
        ]
    },
    {
        "question_id": 794,
        "db_id": "superhero",
        "query": "SELECT `T1`.`superhero_name` FROM `superhero` AS `T1` INNER JOIN `hero_attribute` AS `T2` ON `T1`.`id` = `T2`.`hero_id` INNER JOIN `attribute` AS `T3` ON `T2`.`attribute_id` = `T3`.`id`WHERE `T3`.`attribute_name` = 'Speed' AND `T2`.`attribute_value` = (SELECT MAX(`attribute_value`) FROM `hero_attribute` AS `T2b` WHERE `T2b`.`attribute_id` = `T3`.`id` ) LIMIT 1",
        "tables_extracted": [
            "superhero",
            "hero_attribute",
            "attribute"
        ]
    },
    {
        "question_id": 796,
        "db_id": "superhero",
        "query": "SELECT\n  `T3`.`attribute_name`,\n  `T2`.`attribute_value`\nFROM `superhero` AS `T1`\nINNER JOIN `hero_attribute` AS `T2`\n  ON `T1`.`id` = `T2`.`hero_id`\nINNER JOIN `attribute` AS `T3`\n  ON `T2`.`attribute_id` = `T3`.`id`\nWHERE\n  `T1`.`superhero_name` = '3-D Man'",
        "tables_extracted": [
            "superhero",
            "hero_attribute",
            "attribute"
        ]
    },
    {
        "question_id": 797,
        "db_id": "superhero",
        "query": "SELECT\n  `T1`.`superhero_name`\nFROM `superhero` AS `T1`\nINNER JOIN `colour` AS `T2`\n  ON `T1`.`eye_colour_id` = `T2`.`id`\nINNER JOIN `colour` AS `T3`\n  ON `T1`.`hair_colour_id` = `T3`.`id`\nWHERE\n  `T2`.`colour` = 'Blue' AND `T3`.`colour` = 'Brown'",
        "tables_extracted": [
            "colour",
            "superhero"
        ]
    },
    {
        "question_id": 798,
        "db_id": "superhero",
        "query": "SELECT\n  `T2`.`publisher_name`\nFROM `superhero` AS `T1`\nINNER JOIN `publisher` AS `T2`\n  ON `T1`.`publisher_id` = `T2`.`id`\nWHERE\n  `T1`.`superhero_name` IN ('Hawkman', 'Karate Kid', 'Speedy')",
        "tables_extracted": [
            "superhero",
            "publisher"
        ]
    },
    {
        "question_id": 800,
        "db_id": "superhero",
        "query": "SELECT\n  CAST(COUNT(CASE WHEN `T2`.`colour` = 'Blue' THEN 1 ELSE NULL END) AS DOUBLE) * 100 / COUNT(`T1`.`id`)\nFROM `superhero` AS `T1`\nINNER JOIN `colour` AS `T2`\n  ON `T1`.`eye_colour_id` = `T2`.`id`",
        "tables_extracted": [
            "colour",
            "superhero"
        ]
    },
    {
        "question_id": 801,
        "db_id": "superhero",
        "query": "SELECT\n  CAST(COUNT(CASE WHEN `T2`.`gender` = 'Male' THEN `T1`.`id` ELSE NULL END) AS DOUBLE) / COUNT(CASE WHEN `T2`.`gender` = 'Female' THEN `T1`.`id` ELSE NULL END)\nFROM `superhero` AS `T1`\nINNER JOIN `gender` AS `T2`\n  ON `T1`.`gender_id` = `T2`.`id`",
        "tables_extracted": [
            "superhero",
            "gender"
        ]
    },
    {
        "question_id": 806,
        "db_id": "superhero",
        "query": "SELECT\n  `T2`.`colour`\nFROM `superhero` AS `T1`\nINNER JOIN `colour` AS `T2`\n  ON `T1`.`eye_colour_id` = `T2`.`id`\nWHERE\n  `T1`.`full_name` = 'Karen Beecher-Duncan'",
        "tables_extracted": [
            "colour",
            "superhero"
        ]
    },
    {
        "question_id": 819,
        "db_id": "superhero",
        "query": "SELECT\n  SUM(CASE WHEN `T2`.`id` = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN `T2`.`id` = 1 THEN 1 ELSE 0 END)\nFROM `superhero` AS `T1`\nINNER JOIN `colour` AS `T2`\n  ON `T1`.`eye_colour_id` = `T2`.`id`\nWHERE\n  `T1`.`weight_kg` = 0 OR `T1`.`weight_kg` IS NULL",
        "tables_extracted": [
            "colour",
            "superhero"
        ]
    },
    {
        "question_id": 822,
        "db_id": "superhero",
        "query": "SELECT\n  COUNT(`T1`.`id`)\nFROM `superhero` AS `T1`\nINNER JOIN `alignment` AS `T2`\n  ON `T1`.`alignment_id` = `T2`.`id`\nINNER JOIN `colour` AS `T3`\n  ON `T1`.`skin_colour_id` = `T3`.`id`\nWHERE\n  `T2`.`alignment` = 'Bad' AND `T3`.`colour` = 'Green'",
        "tables_extracted": [
            "colour",
            "superhero",
            "alignment"
        ]
    },
    {
        "question_id": 824,
        "db_id": "superhero",
        "query": "SELECT\n  `T1`.`superhero_name`\nFROM `superhero` AS `T1`\nINNER JOIN `hero_power` AS `T2`\n  ON `T1`.`id` = `T2`.`hero_id`\nINNER JOIN `superpower` AS `T3`\n  ON `T2`.`power_id` = `T3`.`id`\nWHERE\n  `T3`.`power_name` = 'Wind Control'\nORDER BY\n  `T1`.`superhero_name`",
        "tables_extracted": [
            "hero_power",
            "superhero",
            "superpower"
        ]
    },
    {
        "question_id": 825,
        "db_id": "superhero",
        "query": "SELECT\n  `T4`.`gender`\nFROM `superhero` AS `T1`\nINNER JOIN `hero_power` AS `T2`\n  ON `T1`.`id` = `T2`.`hero_id`\nINNER JOIN `superpower` AS `T3`\n  ON `T2`.`power_id` = `T3`.`id`\nINNER JOIN `gender` AS `T4`\n  ON `T1`.`gender_id` = `T4`.`id`\nWHERE\n  `T3`.`power_name` = 'Phoenix Force'",
        "tables_extracted": [
            "hero_power",
            "superhero",
            "gender",
            "superpower"
        ]
    },
    {
        "question_id": 829,
        "db_id": "superhero",
        "query": "SELECT\n  SUM(CASE WHEN `T2`.`publisher_name` = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN `T2`.`publisher_name` = 'Marvel Comics' THEN 1 ELSE 0 END)\nFROM `superhero` AS `T1`\nINNER JOIN `publisher` AS `T2`\n  ON `T1`.`publisher_id` = `T2`.`id`",
        "tables_extracted": [
            "superhero",
            "publisher"
        ]
    },
    {
        "question_id": 531,
        "db_id": "codebase_community",
        "query": "SELECT\n  `DisplayName`\nFROM `users`\nWHERE\n  `DisplayName` IN ('Harlan', 'Jarrod Dixon')\n  AND `Reputation` = (\n    SELECT\n      MAX(`Reputation`)\n    FROM `users`\n    WHERE\n      `DisplayName` IN ('Harlan', 'Jarrod Dixon')\n  )",
        "tables_extracted": [
            "users"
        ]
    },
    {
        "question_id": 532,
        "db_id": "codebase_community",
        "query": "SELECT\n  `DisplayName`\nFROM `users`\nWHERE\n  DATE_FORMAT(CAST(`CreationDate` AS DATETIME), '%Y') = '2011'",
        "tables_extracted": [
            "users"
        ]
    },
    {
        "question_id": 533,
        "db_id": "codebase_community",
        "query": "SELECT\n  COUNT(`Id`)\nFROM `users`\nWHERE\n  DATE(`LastAccessDate`) > '2014-09-01'",
        "tables_extracted": [
            "users"
        ]
    },
    {
        "question_id": 539,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T2`.`DisplayName`\nFROM `posts` AS `T1`\nINNER JOIN `users` AS `T2`\n  ON `T1`.`OwnerUserId` = `T2`.`Id`\nWHERE\n  `T1`.`Title` = 'Eliciting priors from experts'",
        "tables_extracted": [
            "experts",
            "posts",
            "users"
        ]
    },
    {
        "question_id": 537,
        "db_id": "codebase_community",
        "query": "SELECT\n  COUNT(`T1`.`id`)\nFROM `posts` AS `T1`\nINNER JOIN `users` AS `T2`\n  ON `T1`.`OwnerUserId` = `T2`.`Id`\nWHERE\n  `T2`.`DisplayName` = 'csgillespie'",
        "tables_extracted": [
            "posts",
            "users"
        ]
    },
    {
        "question_id": 544,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T2`.`DisplayName`\nFROM `posts` AS `T1`\nINNER JOIN `users` AS `T2`\n  ON `T1`.`LastEditorUserId` = `T2`.`Id`\nWHERE\n  `T1`.`Title` = 'Examples for teaching: Correlation does not mean causation'",
        "tables_extracted": [
            "posts",
            "users"
        ]
    },
    {
        "question_id": 547,
        "db_id": "codebase_community",
        "query": "SELECT\n  COUNT(`T1`.`Id`)\nFROM `posts` AS `T1`\nINNER JOIN `users` AS `T2`\n  ON `T1`.`OwnerUserId` = `T2`.`Id`\nWHERE\n  `T1`.`Score` >= 20 AND `T2`.`Age` > 65",
        "tables_extracted": [
            "posts",
            "users"
        ]
    },
    {
        "question_id": 549,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T2`.`Body`\nFROM `tags` AS `T1`\nINNER JOIN `posts` AS `T2`\n  ON `T2`.`Id` = `T1`.`ExcerptPostId`\nWHERE\n  `T1`.`TagName` = 'bayesian'",
        "tables_extracted": [
            "posts",
            "tags"
        ]
    },
    {
        "question_id": 555,
        "db_id": "codebase_community",
        "query": "SELECT\n  AVG(`T1`.`Score`)\nFROM `posts` AS `T1`\nINNER JOIN `users` AS `T2`\n  ON `T1`.`OwnerUserId` = `T2`.`Id`\nWHERE\n  `T2`.`DisplayName` = 'csgillespie'",
        "tables_extracted": [
            "posts",
            "users"
        ]
    },
    {
        "question_id": 557,
        "db_id": "codebase_community",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `T2`.`Age` > 65 THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`T1`.`Id`)\nFROM `posts` AS `T1`\nINNER JOIN `users` AS `T2`\n  ON `T1`.`OwnerUserId` = `T2`.`Id`\nWHERE\n  `T1`.`Score` > 5",
        "tables_extracted": [
            "posts",
            "users"
        ]
    },
    {
        "question_id": 563,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T1`.`FavoriteCount`\nFROM `posts` AS `T1`\nINNER JOIN `comments` AS `T2`\n  ON `T1`.`Id` = `T2`.`PostId`\nWHERE\n  `T2`.`CreationDate` = '2014-04-23 20:29:39.0' AND `T2`.`UserId` = 3025",
        "tables_extracted": [
            "posts",
            "comments"
        ]
    },
    {
        "question_id": 565,
        "db_id": "codebase_community",
        "query": "SELECT\n  CASE\n    WHEN `T2`.`ClosedDate` IS NULL\n    THEN 'NOT well-finished'\n    ELSE 'well-finished'\n  END AS `resylt`\nFROM `comments` AS `T1`\nINNER JOIN `posts` AS `T2`\n  ON `T1`.`PostId` = `T2`.`Id`\nWHERE\n  `T1`.`UserId` = 23853 AND `T1`.`CreationDate` = '2013-07-12 09:08:18.0'",
        "tables_extracted": [
            "posts",
            "comments"
        ]
    },
    {
        "question_id": 567,
        "db_id": "codebase_community",
        "query": "SELECT\n  COUNT(`T1`.`Id`)\nFROM `users` AS `T1`\nINNER JOIN `posts` AS `T2`\n  ON `T1`.`Id` = `T2`.`OwnerUserId`\nWHERE\n  `T1`.`DisplayName` = 'Tiago Pasqualini'",
        "tables_extracted": [
            "posts",
            "users"
        ]
    },
    {
        "question_id": 568,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T1`.`DisplayName`\nFROM `users` AS `T1`\nINNER JOIN `votes` AS `T2`\n  ON `T1`.`Id` = `T2`.`UserId`\nWHERE\n  `T2`.`Id` = 6347",
        "tables_extracted": [
            "users",
            "votes"
        ]
    },
    {
        "question_id": 571,
        "db_id": "codebase_community",
        "query": "SELECT\n  CAST(COUNT(DISTINCT `T2`.`Id`) AS DOUBLE) / COUNT(DISTINCT `T1`.`Id`)\nFROM `votes` AS `T1`\nINNER JOIN `posts` AS `T2`\n  ON `T1`.`UserId` = `T2`.`OwnerUserId`\nWHERE\n  `T1`.`UserId` = 24",
        "tables_extracted": [
            "posts",
            "votes"
        ]
    },
    {
        "question_id": 572,
        "db_id": "codebase_community",
        "query": "SELECT\n  `ViewCount`\nFROM `posts`\nWHERE\n  `Title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'",
        "tables_extracted": [
            "posts"
        ]
    },
    {
        "question_id": 573,
        "db_id": "codebase_community",
        "query": "SELECT\n  `Text`\nFROM `comments`\nWHERE\n  `Score` = 17",
        "tables_extracted": [
            "comments"
        ]
    },
    {
        "question_id": 576,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T1`.`DisplayName`\nFROM `users` AS `T1`\nINNER JOIN `comments` AS `T2`\n  ON `T1`.`Id` = `T2`.`UserId`\nWHERE\n  `T2`.`Text` = 'thank you user93!'",
        "tables_extracted": [
            "users",
            "comments"
        ]
    },
    {
        "question_id": 578,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T1`.`DisplayName`,\n  `T1`.`Reputation`\nFROM `users` AS `T1`\nINNER JOIN `posts` AS `T2`\n  ON `T1`.`Id` = `T2`.`OwnerUserId`\nWHERE\n  `T2`.`Title` = 'Understanding what Dassault iSight is doing?'",
        "tables_extracted": [
            "posts",
            "users"
        ]
    },
    {
        "question_id": 581,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T2`.`DisplayName`\nFROM `posts` AS `T1`\nINNER JOIN `users` AS `T2`\n  ON `T1`.`OwnerUserId` = `T2`.`Id`\nWHERE\n  `T1`.`Title` = 'Open source tools for visualizing multi-dimensional data?'",
        "tables_extracted": [
            "posts",
            "users"
        ]
    },
    {
        "question_id": 584,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T2`.`Comment`\nFROM `posts` AS `T1`\nINNER JOIN `postHistory` AS `T2`\n  ON `T1`.`Id` = `T2`.`PostId`\nWHERE\n  `T1`.`Title` = 'Why square the difference instead of taking the absolute value in standard deviation?'",
        "tables_extracted": [
            "posts",
            "postHistory"
        ]
    },
    {
        "question_id": 586,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T3`.`DisplayName`,\n  `T1`.`Title`\nFROM `posts` AS `T1`\nINNER JOIN `votes` AS `T2`\n  ON `T1`.`Id` = `T2`.`PostId`\nINNER JOIN `users` AS `T3`\n  ON `T3`.`Id` = `T2`.`UserId`\nWHERE\n  `T2`.`BountyAmount` = 50 AND `T1`.`Title` LIKE '%variance%'",
        "tables_extracted": [
            "posts",
            "users",
            "votes"
        ]
    },
    {
        "question_id": 587,
        "db_id": "codebase_community",
        "query": "SELECT AVG(T2.ViewCount) AS average_view_count, T2.Title, T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T2.Id = T1.PostId WHERE T2.Tags = '<humor>' GROUP BY T2.Title, T1.Text",
        "tables_extracted": [
            "posts",
            "comments"
        ]
    },
    {
        "question_id": 592,
        "db_id": "codebase_community",
        "query": "SELECT\n  COUNT(`UserId`)\nFROM (\n  SELECT\n    `UserId`,\n    COUNT(`Name`) AS `num`\n  FROM `badges`\n  GROUP BY\n    `UserId`\n) AS `T`\nWHERE\n  `T`.`num` > 5",
        "tables_extracted": [
            "badges"
        ]
    },
    {
        "question_id": 595,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T2`.`UserId`\nFROM `users` AS `T1`\nINNER JOIN `postHistory` AS `T2`\n  ON `T1`.`Id` = `T2`.`UserId`\nINNER JOIN `posts` AS `T3`\n  ON `T2`.`PostId` = `T3`.`Id`\nWHERE\n  `T3`.`ViewCount` >= 1000\nGROUP BY\n  `T2`.`UserId`\nHAVING\n  COUNT(DISTINCT `T2`.`PostHistoryTypeId`) = 1",
        "tables_extracted": [
            "posts",
            "users",
            "postHistory"
        ]
    },
    {
        "question_id": 598,
        "db_id": "codebase_community",
        "query": "SELECT\n  CAST(SUM(CASE WHEN DATE_FORMAT(CAST(`Date` AS DATETIME), '%Y') = '2010' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`Id`) - CAST(SUM(CASE WHEN DATE_FORMAT(CAST(`Date` AS DATETIME), '%Y') = '2011' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`Id`)\nFROM `badges`\nWHERE\n  `Name` = 'Student'",
        "tables_extracted": [
            "badges"
        ]
    },
    {
        "question_id": 604,
        "db_id": "codebase_community",
        "query": "SELECT\n  AVG(`T1`.`UpVotes`),\n  AVG(`T1`.`Age`)\nFROM `users` AS `T1`\nINNER JOIN (\n  SELECT\n    `OwnerUserId`,\n    COUNT(*) AS `post_count`\n  FROM `posts`\n  GROUP BY\n    `OwnerUserId`\n  HAVING\n    `post_count` > 10\n) AS `T2`\n  ON `T1`.`Id` = `T2`.`OwnerUserId`",
        "tables_extracted": [
            "posts",
            "users"
        ]
    },
    {
        "question_id": 629,
        "db_id": "codebase_community",
        "query": "SELECT\n  CAST(SUM(\n    CASE\n      WHEN DATE_FORMAT(CAST(`CreationDate` AS DATETIME), '%Y') = '2010'\n      THEN 1\n      ELSE 0\n    END\n  ) AS DOUBLE) / SUM(\n    CASE\n      WHEN DATE_FORMAT(CAST(`CreationDate` AS DATETIME), '%Y') = '2011'\n      THEN 1\n      ELSE 0\n    END\n  )\nFROM `votes`",
        "tables_extracted": [
            "votes"
        ]
    },
    {
        "question_id": 633,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T2`.`PostId`\nFROM `users` AS `T1`\nINNER JOIN `postHistory` AS `T2`\n  ON `T1`.`Id` = `T2`.`UserId`\nINNER JOIN `posts` AS `T3`\n  ON `T2`.`PostId` = `T3`.`Id`\nWHERE\n  `T1`.`DisplayName` = 'slashnick'\nORDER BY\n  `T3`.`AnswerCount` DESC\nLIMIT 1",
        "tables_extracted": [
            "posts",
            "users",
            "postHistory"
        ]
    },
    {
        "question_id": 634,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T1`.`DisplayName`\nFROM `users` AS `T1`\nINNER JOIN `postHistory` AS `T2`\n  ON `T1`.`Id` = `T2`.`UserId`\nINNER JOIN `posts` AS `T3`\n  ON `T2`.`PostId` = `T3`.`Id`\nWHERE\n  `T1`.`DisplayName` = 'Harvey Motulsky' OR `T1`.`DisplayName` = 'Noah Snyder'\nGROUP BY\n  `T1`.`DisplayName`\nORDER BY\n  SUM(`T3`.`ViewCount`) DESC\nLIMIT 1",
        "tables_extracted": [
            "posts",
            "users",
            "postHistory"
        ]
    },
    {
        "question_id": 637,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T3`.`Tags`\nFROM `users` AS `T1`\nINNER JOIN `postHistory` AS `T2`\n  ON `T1`.`Id` = `T2`.`UserId`\nINNER JOIN `posts` AS `T3`\n  ON `T3`.`Id` = `T2`.`PostId`\nWHERE\n  `T1`.`DisplayName` = 'Mark Meckes' AND `T3`.`CommentCount` = 0",
        "tables_extracted": [
            "posts",
            "users",
            "postHistory"
        ]
    },
    {
        "question_id": 639,
        "db_id": "codebase_community",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `T3`.`TagName` = 'r' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`T1`.`Id`)\nFROM `users` AS `T1`\nINNER JOIN `postHistory` AS `T2`\n  ON `T1`.`Id` = `T2`.`UserId`\nINNER JOIN `tags` AS `T3`\n  ON `T3`.`ExcerptPostId` = `T2`.`PostId`\nWHERE\n  `T1`.`DisplayName` = 'Community'",
        "tables_extracted": [
            "users",
            "postHistory",
            "tags"
        ]
    },
    {
        "question_id": 640,
        "db_id": "codebase_community",
        "query": "SELECT\n  SUM(CASE WHEN `T1`.`DisplayName` = 'Mornington' THEN `T3`.`ViewCount` ELSE 0 END) - SUM(CASE WHEN `T1`.`DisplayName` = 'Amos' THEN `T3`.`ViewCount` ELSE 0 END) AS `diff`\nFROM `users` AS `T1`\nINNER JOIN `postHistory` AS `T2`\n  ON `T1`.`Id` = `T2`.`UserId`\nINNER JOIN `posts` AS `T3`\n  ON `T3`.`Id` = `T2`.`PostId`",
        "tables_extracted": [
            "posts",
            "users",
            "postHistory"
        ]
    },
    {
        "question_id": 665,
        "db_id": "codebase_community",
        "query": "SELECT\n  CAST(COUNT(`T1`.`Id`) AS DOUBLE) / 12\nFROM `postLinks` AS `T1`\nINNER JOIN `posts` AS `T2`\n  ON `T1`.`PostId` = `T2`.`Id`\nWHERE\n  `T2`.`AnswerCount` <= 2\n  AND DATE_FORMAT(CAST(`T1`.`CreationDate` AS DATETIME), '%Y') = '2010'",
        "tables_extracted": [
            "postLinks",
            "posts"
        ]
    },
    {
        "question_id": 669,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T2`.`CreationDate`\nFROM `users` AS `T1`\nINNER JOIN `votes` AS `T2`\n  ON `T1`.`Id` = `T2`.`UserId`\nWHERE\n  `T1`.`DisplayName` = 'chl'\nORDER BY\n  `T2`.`CreationDate`\nLIMIT 1",
        "tables_extracted": [
            "users",
            "votes"
        ]
    },
    {
        "question_id": 671,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T1`.`DisplayName`\nFROM `users` AS `T1`\nINNER JOIN `badges` AS `T2`\n  ON `T1`.`Id` = `T2`.`UserId`\nWHERE\n  `T2`.`Name` = 'Autobiographer'\nORDER BY\n  `T2`.`Date`\nLIMIT 1",
        "tables_extracted": [
            "users",
            "badges"
        ]
    },
    {
        "question_id": 672,
        "db_id": "codebase_community",
        "query": "SELECT\n  COUNT(`T1`.`Id`)\nFROM `users` AS `T1`\nINNER JOIN `posts` AS `T2`\n  ON `T1`.`Id` = `T2`.`OwnerUserId`\nWHERE\n  `T1`.`Location` = 'United Kingdom' AND `T2`.`FavoriteCount` >= 4",
        "tables_extracted": [
            "posts",
            "users"
        ]
    },
    {
        "question_id": 678,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T2`.`Id`,\n  `T2`.`Title`\nFROM `users` AS `T1`\nINNER JOIN `posts` AS `T2`\n  ON `T1`.`Id` = `T2`.`OwnerUserId`\nWHERE\n  `T1`.`DisplayName` = 'Harvey Motulsky'\nORDER BY\n  `T2`.`ViewCount` DESC\nLIMIT 1",
        "tables_extracted": [
            "posts",
            "users"
        ]
    },
    {
        "question_id": 682,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T2`.`OwnerUserId`,\n  `T1`.`DisplayName`\nFROM `users` AS `T1`\nINNER JOIN `posts` AS `T2`\n  ON `T1`.`Id` = `T2`.`OwnerUserId`\nWHERE\n  DATE_FORMAT(CAST(`T1`.`CreationDate` AS DATETIME), '%Y') = '2010'\nORDER BY\n  `T2`.`FavoriteCount` DESC\nLIMIT 1",
        "tables_extracted": [
            "posts",
            "users"
        ]
    },
    {
        "question_id": 683,
        "db_id": "codebase_community",
        "query": "SELECT\n  CAST(SUM(\n    CASE\n      WHEN DATE_FORMAT(CAST(`T2`.`CreaionDate` AS DATETIME), '%Y') = '2011'\n      AND `T1`.`Reputation` > 1000\n      THEN 1\n      ELSE 0\n    END\n  ) AS DOUBLE) * 100 / COUNT(`T1`.`Id`)\nFROM `users` AS `T1`\nINNER JOIN `posts` AS `T2`\n  ON `T1`.`Id` = `T2`.`OwnerUserId`",
        "tables_extracted": [
            "posts",
            "users"
        ]
    },
    {
        "question_id": 685,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T2`.`ViewCount`,\n  `T3`.`DisplayName`\nFROM `postHistory` AS `T1`\nINNER JOIN `posts` AS `T2`\n  ON `T1`.`PostId` = `T2`.`Id`\nINNER JOIN `users` AS `T3`\n  ON `T2`.`LastEditorUserId` = `T3`.`Id`\nWHERE\n  `T1`.`Text` = 'Computer Game Datasets'",
        "tables_extracted": [
            "posts",
            "users",
            "postHistory"
        ]
    },
    {
        "question_id": 687,
        "db_id": "codebase_community",
        "query": "SELECT\n  COUNT(`T2`.`Id`)\nFROM `posts` AS `T1`\nINNER JOIN `comments` AS `T2`\n  ON `T1`.`Id` = `T2`.`PostId`\nGROUP BY\n  `T1`.`Id`\nORDER BY\n  `T1`.`Score` DESC\nLIMIT 1",
        "tables_extracted": [
            "posts",
            "comments"
        ]
    },
    {
        "question_id": 694,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T3`.`Text`,\n  `T1`.`DisplayName`\nFROM `users` AS `T1`\nINNER JOIN `posts` AS `T2`\n  ON `T1`.`Id` = `T2`.`OwnerUserId`\nINNER JOIN `comments` AS `T3`\n  ON `T2`.`Id` = `T3`.`PostId`\nWHERE\n  `T2`.`Title` = 'Analysing wind data with R'\nORDER BY\n  `T1`.`CreationDate` DESC\nLIMIT 10",
        "tables_extracted": [
            "posts",
            "users",
            "comments"
        ]
    },
    {
        "question_id": 701,
        "db_id": "codebase_community",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `T2`.`Score` > 50 THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`T1`.`Id`)\nFROM `users` AS `T1`\nINNER JOIN `posts` AS `T2`\n  ON `T1`.`Id` = `T2`.`OwnerUserId`\nINNER JOIN (\n  SELECT\n    MAX(`Reputation`) AS `max_reputation`\n  FROM `users`\n) AS `T3`\n  ON `T1`.`Reputation` = `T3`.`max_reputation`",
        "tables_extracted": [
            "posts",
            "users"
        ]
    },
    {
        "question_id": 704,
        "db_id": "codebase_community",
        "query": "SELECT\n  `ExcerptPostId`,\n  `WikiPostId`\nFROM `tags`\nWHERE\n  `TagName` = 'sample'",
        "tables_extracted": [
            "tags"
        ]
    },
    {
        "question_id": 705,
        "db_id": "codebase_community",
        "query": "SELECT\n  `T2`.`Reputation`,\n  `T2`.`UpVotes`\nFROM `comments` AS `T1`\nINNER JOIN `users` AS `T2`\n  ON `T1`.`UserId` = `T2`.`Id`\nWHERE\n  `T1`.`Text` = 'fine, you win :)'",
        "tables_extracted": [
            "users",
            "comments"
        ]
    },
    {
        "question_id": 707,
        "db_id": "codebase_community",
        "query": "SELECT\n  `Text`\nFROM `comments`\nWHERE\n  `PostId` IN (\n    SELECT\n      `Id`\n    FROM `posts`\n    WHERE\n      `ViewCount` BETWEEN 100 AND 150\n  )\nORDER BY\n  `Score` DESC\nLIMIT 1",
        "tables_extracted": [
            "posts",
            "comments"
        ]
    },
    {
        "question_id": 710,
        "db_id": "codebase_community",
        "query": "SELECT\n  COUNT(`T1`.`id`)\nFROM `comments` AS `T1`\nINNER JOIN `posts` AS `T2`\n  ON `T1`.`PostId` = `T2`.`Id`\nWHERE\n  `T2`.`CommentCount` = 1 AND `T2`.`Score` = 0",
        "tables_extracted": [
            "posts",
            "comments"
        ]
    },
    {
        "question_id": 716,
        "db_id": "codebase_community",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `T1`.`UpVotes` = 0 THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`T1`.`Id`) AS `per`\nFROM `users` AS `T1`\nINNER JOIN `comments` AS `T2`\n  ON `T1`.`Id` = `T2`.`UserId`\nWHERE\n  `T2`.`Score` BETWEEN 5 AND 10",
        "tables_extracted": [
            "users",
            "comments"
        ]
    },
    {
        "question_id": 340,
        "db_id": "card_games",
        "query": "SELECT\n  `id`\nFROM `cards`\nWHERE\n  NOT `cardKingdomFoilId` IS NULL AND NOT `cardKingdomId` IS NULL",
        "tables_extracted": [
            "cards"
        ]
    },
    {
        "question_id": 341,
        "db_id": "card_games",
        "query": "SELECT\n  `id`\nFROM `cards`\nWHERE\n  `borderColor` = 'borderless'\n  AND (\n    `cardKingdomId` IS NULL OR `cardKingdomId` IS NULL\n  )",
        "tables_extracted": [
            "cards"
        ]
    },
    {
        "question_id": 344,
        "db_id": "card_games",
        "query": "SELECT DISTINCT\n  `T1`.`id`\nFROM `cards` AS `T1`\nINNER JOIN `legalities` AS `T2`\n  ON `T1`.`uuid` = `T2`.`uuid`\nWHERE\n  `T2`.`format` = 'gladiator'\n  AND `T2`.`status` = 'Banned'\n  AND `T1`.`rarity` = 'mythic'",
        "tables_extracted": [
            "cards",
            "legalities"
        ]
    },
    {
        "question_id": 345,
        "db_id": "card_games",
        "query": "SELECT DISTINCT\n  `T2`.`status`\nFROM `cards` AS `T1`\nINNER JOIN `legalities` AS `T2`\n  ON `T1`.`uuid` = `T2`.`uuid`\nWHERE\n  `T1`.`type` = 'Artifact' AND `T2`.`format` = 'vintage' AND `T1`.`side` IS NULL",
        "tables_extracted": [
            "cards",
            "legalities"
        ]
    },
    {
        "question_id": 346,
        "db_id": "card_games",
        "query": "SELECT\n  `T1`.`id`,\n  `T1`.`artist`\nFROM `cards` AS `T1`\nINNER JOIN `legalities` AS `T2`\n  ON `T1`.`uuid` = `T2`.`uuid`\nWHERE\n  `T2`.`status` = 'Legal'\n  AND `T2`.`format` = 'commander'\n  AND (\n    `T1`.`power` IS NULL OR `T1`.`power` = '*'\n  )",
        "tables_extracted": [
            "cards",
            "legalities"
        ]
    },
    {
        "question_id": 347,
        "db_id": "card_games",
        "query": "SELECT\n  `T1`.`id`,\n  `T2`.`text`,\n  `T1`.`hasContentWarning`\nFROM `cards` AS `T1`\nINNER JOIN `rulings` AS `T2`\n  ON `T1`.`uuid` = `T2`.`uuid`\nWHERE\n  `T1`.`artist` = 'Stephen Daniele'",
        "tables_extracted": [
            "cards",
            "rulings"
        ]
    },
    {
        "question_id": 349,
        "db_id": "card_games",
        "query": "SELECT `T1`.`name`, `T1`.`artist`, `T1`.`isPromo` FROM `cards` AS `T1` INNER JOIN `rulings` AS `T2` ON `T1`.`uuid` = `T2`.`uuid` WHERE `T1`.`isPromo` = 1 AND `T1`.`artist` = ( SELECT `artist` FROM `cards` WHERE `isPromo` = 1 GROUP BY `artist` HAVING COUNT(DISTINCT `uuid`) = (SELECT MAX(card_counts.max_count) FROM (SELECT COUNT(DISTINCT `uuid`) AS max_count FROM `cards` WHERE `isPromo` = 1 GROUP BY `artist`) AS card_counts))LIMIT 1",
        "tables_extracted": [
            "cards",
            "rulings"
        ]
    },
    {
        "question_id": 352,
        "db_id": "card_games",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `T2`.`language` = 'Chinese Simplified' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`T1`.`id`)\nFROM `cards` AS `T1`\nINNER JOIN `foreign_data` AS `T2`\n  ON `T1`.`uuid` = `T2`.`uuid`",
        "tables_extracted": [
            "cards",
            "foreign_data"
        ]
    },
    {
        "question_id": 356,
        "db_id": "card_games",
        "query": "SELECT\n  COUNT(*)\nFROM `cards`\nWHERE\n  `power` = '*'",
        "tables_extracted": [
            "cards"
        ]
    },
    {
        "question_id": 358,
        "db_id": "card_games",
        "query": "SELECT DISTINCT\n  `borderColor`\nFROM `cards`\nWHERE\n  `name` = 'Ancestor''s Chosen'",
        "tables_extracted": [
            "cards"
        ]
    },
    {
        "question_id": 366,
        "db_id": "card_games",
        "query": "SELECT\n  `T2`.`format`\nFROM `cards` AS `T1`\nINNER JOIN `legalities` AS `T2`\n  ON `T1`.`uuid` = `T2`.`uuid`\nWHERE\n  `T1`.`name` = 'Benalish Knight'",
        "tables_extracted": [
            "cards",
            "legalities"
        ]
    },
    {
        "question_id": 368,
        "db_id": "card_games",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `borderColor` = 'borderless' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`id`)\nFROM `cards`",
        "tables_extracted": [
            "cards"
        ]
    },
    {
        "question_id": 371,
        "db_id": "card_games",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `T2`.`language` = 'French' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`T1`.`id`)\nFROM `cards` AS `T1`\nINNER JOIN `foreign_data` AS `T2`\n  ON `T1`.`uuid` = `T2`.`uuid`\nWHERE\n  `T1`.`isStorySpotlight` = 1",
        "tables_extracted": [
            "cards",
            "foreign_data"
        ]
    },
    {
        "question_id": 377,
        "db_id": "card_games",
        "query": "SELECT\n  COUNT(`id`)\nFROM `cards`\nWHERE\n  `originalType` = 'Summon - Angel' AND `subtypes` <> 'Angel'",
        "tables_extracted": [
            "cards"
        ]
    },
    {
        "question_id": 379,
        "db_id": "card_games",
        "query": "SELECT\n  `id`\nFROM `cards`\nWHERE\n  `duelDeck` = 'a'",
        "tables_extracted": [
            "cards"
        ]
    },
    {
        "question_id": 383,
        "db_id": "card_games",
        "query": "SELECT\n  COUNT(`T1`.`id`)\nFROM `cards` AS `T1`\nINNER JOIN `legalities` AS `T2`\n  ON `T1`.`uuid` = `T2`.`uuid`\nWHERE\n  `T2`.`status` = 'Banned' AND `T1`.`borderColor` = 'white'",
        "tables_extracted": [
            "cards",
            "legalities"
        ]
    },
    {
        "question_id": 391,
        "db_id": "card_games",
        "query": "SELECT DISTINCT\n  `T1`.`name`\nFROM `cards` AS `T1`\nINNER JOIN `foreign_data` AS `T2`\n  ON `T1`.`uuid` = `T2`.`uuid`\nWHERE\n  `T1`.`originalType` = 'Artifact' AND `T1`.`colors` = 'B'",
        "tables_extracted": [
            "cards",
            "foreign_data"
        ]
    },
    {
        "question_id": 397,
        "db_id": "card_games",
        "query": "SELECT\n  `manaCost`\nFROM `cards`\nWHERE\n  `availability` = 'mtgo,paper'\n  AND `borderColor` = 'black'\n  AND `frameVersion` = 2003\n  AND `layout` = 'normal'",
        "tables_extracted": [
            "cards"
        ]
    },
    {
        "question_id": 402,
        "db_id": "card_games",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `isTextless` = 0  AND `isStorySpotlight` = 1 THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`id`)\nFROM `cards`",
        "tables_extracted": [
            "cards"
        ]
    },
    {
        "question_id": 405,
        "db_id": "card_games",
        "query": "SELECT\n  COUNT(`T1`.`id`)\nFROM `sets` AS `T1`\nINNER JOIN `set_translations` AS `T2`\n  ON `T1`.`code` = `T2`.`setCode`\nWHERE\n  `T2`.`language` = 'Portuguese (Brazil)' AND `T1`.`block` = 'Commander'",
        "tables_extracted": [
            "set_translations",
            "sets"
        ]
    },
    {
        "question_id": 407,
        "db_id": "card_games",
        "query": "SELECT\n  `T1`.`subtypes`,\n  `T1`.`supertypes`\nFROM `cards` AS `T1`\nINNER JOIN `foreign_data` AS `T2`\n  ON `T1`.`uuid` = `T2`.`uuid`\nWHERE\n  `T2`.`language` = 'German'\n  AND NOT `T1`.`subtypes` IS NULL\n  AND NOT `T1`.`supertypes` IS NULL",
        "tables_extracted": [
            "cards",
            "foreign_data"
        ]
    },
    {
        "question_id": 408,
        "db_id": "card_games",
        "query": "SELECT\n  Count(DISTINCT `T1`.`id`) \nFROM `cards` AS `T1`\nINNER JOIN `rulings` AS `T2`\n  ON `T1`.`uuid` = `T2`.`uuid`\nWHERE\n  (\n    `T1`.`power` IS NULL OR `T1`.`power` = '*'\n  )\n  AND `T2`.`text` LIKE '%triggered ability%'",
        "tables_extracted": [
            "cards",
            "rulings"
        ]
    },
    {
        "question_id": 409,
        "db_id": "card_games",
        "query": "SELECT\n  COUNT(`T1`.`id`)\nFROM `cards` AS `T1`\nINNER JOIN `legalities` AS `T2`\n  ON `T1`.`uuid` = `T2`.`uuid`\nINNER JOIN `rulings` AS `T3`\n  ON `T1`.`uuid` = `T3`.`uuid`\nWHERE\n  `T2`.`format` = 'premodern'\n  AND `T3`.`text` = 'This is a triggered mana ability.'\n  AND `T1`.`Side` IS NULL",
        "tables_extracted": [
            "cards",
            "legalities",
            "rulings"
        ]
    },
    {
        "question_id": 412,
        "db_id": "card_games",
        "query": "SELECT\n  `name`\nFROM `foreign_data`\nWHERE\n  `uuid` IN (\n    SELECT\n      `uuid`\n    FROM `cards`\n    WHERE\n      `types` = 'Creature'\n      AND `layout` = 'normal'\n      AND `borderColor` = 'black'\n      AND `artist` = 'Matthew D. Wilson'\n  )\n  AND `language` = 'French'",
        "tables_extracted": [
            "cards",
            "foreign_data"
        ]
    },
    {
        "question_id": 414,
        "db_id": "card_games",
        "query": "SELECT\n  `T2`.`language`\nFROM `sets` AS `T1`\nINNER JOIN `set_translations` AS `T2`\n  ON `T1`.`code` = `T2`.`setCode`\nWHERE\n  `T1`.`block` = 'Ravnica' AND `T1`.`baseSetSize` = 180",
        "tables_extracted": [
            "set_translations",
            "sets"
        ]
    },
    {
        "question_id": 415,
        "db_id": "card_games",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `T1`.`hasContentWarning` = 0 THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`T1`.`id`)\nFROM `cards` AS `T1`\nINNER JOIN `legalities` AS `T2`\n  ON `T1`.`uuid` = `T2`.`uuid`\nWHERE\n  `T2`.`format` = 'commander' AND `T2`.`status` = 'Legal'",
        "tables_extracted": [
            "cards",
            "legalities"
        ]
    },
    {
        "question_id": 416,
        "db_id": "card_games",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `T2`.`language` = 'French' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`T1`.`id`)\nFROM `cards` AS `T1`\nINNER JOIN `foreign_data` AS `T2`\n  ON `T1`.`uuid` = `T2`.`uuid`\nWHERE\n  `T1`.`power` IS NULL OR `T1`.`power` = '*'",
        "tables_extracted": [
            "cards",
            "foreign_data"
        ]
    },
    {
        "question_id": 422,
        "db_id": "card_games",
        "query": "SELECT\n  `language`\nFROM `foreign_data`\nWHERE\n  `multiverseid` = 149934",
        "tables_extracted": [
            "foreign_data"
        ]
    },
    {
        "question_id": 424,
        "db_id": "card_games",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `isTextless` = 1 AND `layout` = 'normal' THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(*)\nFROM `cards`",
        "tables_extracted": [
            "cards"
        ]
    },
    {
        "question_id": 427,
        "db_id": "card_games",
        "query": "SELECT\n  `T2`.`language`\nFROM `sets` AS `T1`\nINNER JOIN `set_translations` AS `T2`\n  ON `T1`.`code` = `T2`.`setCode`\nWHERE\n  `T1`.`mcmName` = 'Archenemy' AND `T2`.`setCode` = 'ARC'",
        "tables_extracted": [
            "set_translations",
            "sets"
        ]
    },
    {
        "question_id": 440,
        "db_id": "card_games",
        "query": "SELECT DISTINCT\n  `language`\nFROM `foreign_data`\nWHERE\n  `name` = 'A Pedra Fellwar'",
        "tables_extracted": [
            "foreign_data"
        ]
    },
    {
        "question_id": 459,
        "db_id": "card_games",
        "query": "SELECT\n  `name`\nFROM `cards`\nWHERE\n  `name` IN ('Serra Angel', 'Shrine Keeper')\nORDER BY\n  `convertedManaCost` DESC\nLIMIT 1",
        "tables_extracted": [
            "cards"
        ]
    },
    {
        "question_id": 462,
        "db_id": "card_games",
        "query": "SELECT\n  `translation`\nFROM `set_translations`\nWHERE\n  `setCode` IN (\n    SELECT\n      `setCode`\n    FROM `cards`\n    WHERE\n      `name` = 'Ancestor''s Chosen'\n  )\n  AND `language` = 'Italian'",
        "tables_extracted": [
            "cards",
            "set_translations"
        ]
    },
    {
        "question_id": 465,
        "db_id": "card_games",
        "query": "SELECT\n  CASE\n    WHEN SUM(\n      CASE\n        WHEN `T2`.`language` = 'Korean' AND NOT `T2`.`translation` IS NULL\n        THEN 1\n        ELSE 0\n      END\n    ) > 0\n    THEN 'YES'\n    ELSE 'NO'\n  END\nFROM `cards` AS `T1`\nINNER JOIN `set_translations` AS `T2`\n  ON `T2`.`setCode` = `T1`.`setCode`\nWHERE\n  `T1`.`name` = 'Ancestor''s Chosen'",
        "tables_extracted": [
            "cards",
            "set_translations"
        ]
    },
    {
        "question_id": 466,
        "db_id": "card_games",
        "query": "SELECT\n  COUNT(`T1`.`id`)\nFROM `cards` AS `T1`\nINNER JOIN `set_translations` AS `T2`\n  ON `T2`.`setCode` = `T1`.`setCode`\nWHERE\n  `T2`.`translation` = 'Hauptset Zehnte Edition' AND `T1`.`artist` = 'Adam Rex'",
        "tables_extracted": [
            "cards",
            "set_translations"
        ]
    },
    {
        "question_id": 468,
        "db_id": "card_games",
        "query": "SELECT\n  `T2`.`translation`\nFROM `sets` AS `T1`\nINNER JOIN `set_translations` AS `T2`\n  ON `T2`.`setCode` = `T1`.`code`\nWHERE\n  `T1`.`name` = 'Eighth Edition' AND `T2`.`language` = 'Chinese Simplified'",
        "tables_extracted": [
            "set_translations",
            "sets"
        ]
    },
    {
        "question_id": 469,
        "db_id": "card_games",
        "query": "SELECT\n  CASE WHEN NOT `T2`.`mtgoCode` IS NULL THEN 'YES' ELSE 'NO' END\nFROM `cards` AS `T1`\nINNER JOIN `sets` AS `T2`\n  ON `T2`.`code` = `T1`.`setCode`\nWHERE\n  `T1`.`name` = 'Angel of Mercy'",
        "tables_extracted": [
            "cards",
            "sets"
        ]
    },
    {
        "question_id": 472,
        "db_id": "card_games",
        "query": "SELECT\n  COUNT(DISTINCT `T1`.`id`)\nFROM `sets` AS `T1`\nINNER JOIN `set_translations` AS `T2`\n  ON `T2`.`setCode` = `T1`.`code`\nWHERE\n  `T1`.`block` = 'Ice Age'\n  AND `T2`.`language` = 'Italian'\n  AND NOT `T2`.`translation` IS NULL",
        "tables_extracted": [
            "set_translations",
            "sets"
        ]
    },
    {
        "question_id": 473,
        "db_id": "card_games",
        "query": "SELECT\n  CASE WHEN `isForeignOnly` = 1 THEN 'YES' ELSE 'NO' END\nFROM `cards` AS `T1`\nINNER JOIN `sets` AS `T2`\n  ON `T2`.`code` = `T1`.`setCode`\nWHERE\n  `T1`.`name` = 'Adarkar Valkyrie'",
        "tables_extracted": [
            "cards",
            "sets"
        ]
    },
    {
        "question_id": 474,
        "db_id": "card_games",
        "query": "SELECT\n  COUNT(`T1`.`id`)\nFROM `sets` AS `T1`\nINNER JOIN `set_translations` AS `T2`\n  ON `T2`.`setCode` = `T1`.`code`\nWHERE\n  NOT `T2`.`translation` IS NULL\n  AND `T1`.`baseSetSize` < 100\n  AND `T2`.`language` = 'Italian'",
        "tables_extracted": [
            "set_translations",
            "sets"
        ]
    },
    {
        "question_id": 477,
        "db_id": "card_games",
        "query": "SELECT\n  `T1`.`artist`\nFROM `cards` AS `T1`\nINNER JOIN `sets` AS `T2`\n  ON `T2`.`code` = `T1`.`setCode`\nWHERE\n  (\n    `T2`.`name` = 'Coldsnap' AND `T1`.`artist` = 'Chippy'\n  )\n  OR (\n    `T2`.`name` = 'Coldsnap' AND `T1`.`artist` = 'Aaron Miller'\n  )\n  OR (\n    `T2`.`name` = 'Coldsnap' AND `T1`.`artist` = 'Jeremy Jarvis'\n  )\nGROUP BY\n  `T1`.`artist`",
        "tables_extracted": [
            "cards",
            "sets"
        ]
    },
    {
        "question_id": 479,
        "db_id": "card_games",
        "query": "SELECT\n  SUM(CASE WHEN `T1`.`power` = '*' OR `T1`.`power` IS NULL THEN 1 ELSE 0 END)\nFROM `cards` AS `T1`\nINNER JOIN `sets` AS `T2`\n  ON `T2`.`code` = `T1`.`setCode`\nWHERE\n  `T2`.`name` = 'Coldsnap' AND `T1`.`convertedManaCost` > 5",
        "tables_extracted": [
            "cards",
            "sets"
        ]
    },
    {
        "question_id": 480,
        "db_id": "card_games",
        "query": "SELECT\n  `T2`.`flavorText`\nFROM `cards` AS `T1`\nINNER JOIN `foreign_data` AS `T2`\n  ON `T2`.`uuid` = `T1`.`uuid`\nWHERE\n  `T1`.`name` = 'Ancestor''s Chosen' AND `T2`.`language` = 'Italian'",
        "tables_extracted": [
            "cards",
            "foreign_data"
        ]
    },
    {
        "question_id": 483,
        "db_id": "card_games",
        "query": "SELECT DISTINCT\n  `T1`.`text`\nFROM `foreign_data` AS `T1`\nINNER JOIN `cards` AS `T2`\n  ON `T2`.`uuid` = `T1`.`uuid`\nINNER JOIN `sets` AS `T3`\n  ON `T3`.`code` = `T2`.`setCode`\nWHERE\n  `T3`.`name` = 'Coldsnap' AND `T1`.`language` = 'Italian'",
        "tables_extracted": [
            "cards",
            "foreign_data",
            "sets"
        ]
    },
    {
        "question_id": 484,
        "db_id": "card_games",
        "query": "SELECT\n  `T2`.`name`\nFROM `foreign_data` AS `T1`\nINNER JOIN `cards` AS `T2`\n  ON `T2`.`uuid` = `T1`.`uuid`\nINNER JOIN `sets` AS `T3`\n  ON `T3`.`code` = `T2`.`setCode`\nWHERE\n  `T3`.`name` = 'Coldsnap' AND `T1`.`language` = 'Italian'\nORDER BY\n  `T2`.`convertedManaCost` DESC",
        "tables_extracted": [
            "cards",
            "foreign_data",
            "sets"
        ]
    },
    {
        "question_id": 486,
        "db_id": "card_games",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `T1`.`convertedManaCost` = 7 THEN 1 ELSE 0 END) AS DOUBLE) * 100 / COUNT(`T1`.`id`)\nFROM `cards` AS `T1`\nINNER JOIN `sets` AS `T2`\n  ON `T2`.`code` = `T1`.`setCode`\nWHERE\n  `T2`.`name` = 'Coldsnap'",
        "tables_extracted": [
            "cards",
            "sets"
        ]
    },
    {
        "question_id": 487,
        "db_id": "card_games",
        "query": "SELECT\n  CAST(SUM(\n    CASE\n      WHEN NOT `T1`.`cardKingdomFoilId` IS NULL AND NOT `T1`.`cardKingdomId` IS NULL\n      THEN 1\n      ELSE 0\n    END\n  ) AS DOUBLE) * 100 / COUNT(`T1`.`id`)\nFROM `cards` AS `T1`\nINNER JOIN `sets` AS `T2`\n  ON `T2`.`code` = `T1`.`setCode`\nWHERE\n  `T2`.`name` = 'Coldsnap'",
        "tables_extracted": [
            "cards",
            "sets"
        ]
    },
    {
        "question_id": 518,
        "db_id": "card_games",
        "query": "SELECT T2.format, T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.uuid = T1.uuid INNER JOIN ( SELECT format FROM legalities WHERE status = 'Banned' GROUP BY format ORDER BY COUNT(*) DESC LIMIT 1 ) AS MaxBanned ON MaxBanned.format = T2.format WHERE T2.status = 'Banned'",
        "tables_extracted": [
            "cards",
            "legalities"
        ]
    },
    {
        "question_id": 522,
        "db_id": "card_games",
        "query": "SELECT\n  `T1`.`name`,\n  `T2`.`format`\nFROM `cards` AS `T1`\nINNER JOIN `legalities` AS `T2`\n  ON `T2`.`uuid` = `T1`.`uuid`\nWHERE\n  `T1`.`edhrecRank` = 1 AND `T2`.`status` = 'Banned'\nGROUP BY\n  `T1`.`name`,\n  `T2`.`format`",
        "tables_extracted": [
            "cards",
            "legalities"
        ]
    },
    {
        "question_id": 528,
        "db_id": "card_games",
        "query": "SELECT DISTINCT\n  `T2`.`name`,\n  CASE WHEN `T1`.`status` = 'Legal' THEN `T1`.`format` ELSE NULL END\nFROM `legalities` AS `T1`\nINNER JOIN `cards` AS `T2`\n  ON `T2`.`uuid` = `T1`.`uuid`\nWHERE\n  `T2`.`setCode` IN (\n    SELECT\n      `code`\n    FROM `sets`\n    WHERE\n      `name` = 'Hour of Devastation'\n  )",
        "tables_extracted": [
            "cards",
            "legalities",
            "sets"
        ]
    },
    {
        "question_id": 529,
        "db_id": "card_games",
        "query": "SELECT\n  `name`\nFROM `sets`\nWHERE\n  `code` IN (\n    SELECT\n      `setCode`\n    FROM `set_translations`\n    WHERE\n      `language` = 'Korean' AND NOT `language` LIKE '%Japanese%'\n  )",
        "tables_extracted": [
            "set_translations",
            "sets"
        ]
    },
    {
        "question_id": 530,
        "db_id": "card_games",
        "query": "SELECT DISTINCT\n  `T1`.`frameVersion`,\n  `T1`.`name`,\n  CASE WHEN `T2`.`status` = 'Banned' THEN `T1`.`name` ELSE 'NO' END\nFROM `cards` AS `T1`\nINNER JOIN `legalities` AS `T2`\n  ON `T1`.`uuid` = `T2`.`uuid`\nWHERE\n  `T1`.`artist` = 'Allen Williams'",
        "tables_extracted": [
            "cards",
            "legalities"
        ]
    },
    {
        "question_id": 195,
        "db_id": "toxicology",
        "query": "SELECT\n  `T`.`bond_type`\nFROM (\n  SELECT\n    `bond_type`,\n    COUNT(`bond_id`)\n  FROM `bond`\n  GROUP BY\n    `bond_type`\n  ORDER BY\n    COUNT(`bond_id`) DESC\n  LIMIT 1\n) AS `T`",
        "tables_extracted": [
            "bond"
        ]
    },
    {
        "question_id": 197,
        "db_id": "toxicology",
        "query": "SELECT\n  AVG(`oxygen_count`)\nFROM (\n  SELECT\n    `T1`.`molecule_id`,\n    COUNT(`T1`.`element`) AS `oxygen_count`\n  FROM `atom` AS `T1`\n  INNER JOIN `bond` AS `T2`\n    ON `T1`.`molecule_id` = `T2`.`molecule_id`\n  WHERE\n    `T2`.`bond_type` = '-' AND `T1`.`element` = 'o'\n  GROUP BY\n    `T1`.`molecule_id`\n) AS `oxygen_counts`",
        "tables_extracted": [
            "atom",
            "bond"
        ]
    },
    {
        "question_id": 198,
        "db_id": "toxicology",
        "query": "SELECT\n  AVG(`single_bond_count`)\nFROM (\n  SELECT\n    `T3`.`molecule_id`,\n    COUNT(`T1`.`bond_type`) AS `single_bond_count`\n  FROM `bond` AS `T1`\n  INNER JOIN `atom` AS `T2`\n    ON `T1`.`molecule_id` = `T2`.`molecule_id`\n  INNER JOIN `molecule` AS `T3`\n    ON `T3`.`molecule_id` = `T2`.`molecule_id`\n  WHERE\n    `T1`.`bond_type` = '-' AND `T3`.`label` = '+'\n  GROUP BY\n    `T3`.`molecule_id`\n) AS `subquery`",
        "tables_extracted": [
            "atom",
            "molecule",
            "bond"
        ]
    },
    {
        "question_id": 200,
        "db_id": "toxicology",
        "query": "SELECT DISTINCT\n  `T2`.`molecule_id`\nFROM `bond` AS `T1`\nINNER JOIN `molecule` AS `T2`\n  ON `T1`.`molecule_id` = `T2`.`molecule_id`\nWHERE\n  `T1`.`bond_type` = '#' AND `T2`.`label` = '+'",
        "tables_extracted": [
            "molecule",
            "bond"
        ]
    },
    {
        "question_id": 201,
        "db_id": "toxicology",
        "query": "SELECT\n  CAST(COUNT(DISTINCT CASE WHEN `T1`.`element` = 'c' THEN `T1`.`atom_id` ELSE NULL END) AS DOUBLE) * 100 / COUNT(DISTINCT `T1`.`atom_id`)\nFROM `atom` AS `T1`\nINNER JOIN `bond` AS `T2`\n  ON `T1`.`molecule_id` = `T2`.`molecule_id`\nWHERE\n  `T2`.`bond_type` = '='",
        "tables_extracted": [
            "atom",
            "bond"
        ]
    },
    {
        "question_id": 206,
        "db_id": "toxicology",
        "query": "SELECT DISTINCT\n  `T1`.`element`\nFROM `atom` AS `T1`\nINNER JOIN `connected` AS `T2`\n  ON `T1`.`atom_id` = `T2`.`atom_id`\nWHERE\n  `T2`.`bond_id` = 'TR004_8_9'",
        "tables_extracted": [
            "atom",
            "connected"
        ]
    },
    {
        "question_id": 207,
        "db_id": "toxicology",
        "query": "SELECT DISTINCT\n  `T1`.`element`\nFROM `atom` AS `T1`\nINNER JOIN `bond` AS `T2`\n  ON `T1`.`molecule_id` = `T2`.`molecule_id`\nINNER JOIN `connected` AS `T3`\n  ON `T1`.`atom_id` = `T3`.`atom_id`\nWHERE\n  `T2`.`bond_type` = '='",
        "tables_extracted": [
            "atom",
            "connected",
            "bond"
        ]
    },
    {
        "question_id": 208,
        "db_id": "toxicology",
        "query": "SELECT\n  `T`.`label`\nFROM (\n  SELECT\n    `T2`.`label`,\n    COUNT(`T2`.`molecule_id`)\n  FROM `atom` AS `T1`\n  INNER JOIN `molecule` AS `T2`\n    ON `T1`.`molecule_id` = `T2`.`molecule_id`\n  WHERE\n    `T1`.`element` = 'h'\n  GROUP BY\n    `T2`.`label`\n  ORDER BY\n    COUNT(`T2`.`molecule_id`) DESC\n  LIMIT 1\n) AS `t`",
        "tables_extracted": [
            "atom",
            "molecule"
        ]
    },
    {
        "question_id": 212,
        "db_id": "toxicology",
        "query": "SELECT\n  `T`.`element`\nFROM (\n  SELECT\n    `T1`.`element`,\n    COUNT(DISTINCT `T1`.`molecule_id`)\n  FROM `atom` AS `T1`\n  INNER JOIN `molecule` AS `T2`\n    ON `T1`.`molecule_id` = `T2`.`molecule_id`\n  WHERE\n    `T2`.`label` = '-'\n  GROUP BY\n    `T1`.`element`\n  ORDER BY\n    COUNT(DISTINCT `T1`.`molecule_id`) ASC\n  LIMIT 1\n) AS `t`",
        "tables_extracted": [
            "atom",
            "molecule"
        ]
    },
    {
        "question_id": 213,
        "db_id": "toxicology",
        "query": "SELECT\n  `T1`.`bond_type`\nFROM `bond` AS `T1`\nINNER JOIN `connected` AS `T2`\n  ON `T1`.`bond_id` = `T2`.`bond_id`\nWHERE\n  `T2`.`atom_id` = 'TR004_8'\n  AND `T2`.`atom_id2` = 'TR004_20'\n  OR `T2`.`atom_id2` = 'TR004_8'\n  AND `T2`.`atom_id` = 'TR004_20'",
        "tables_extracted": [
            "connected",
            "bond"
        ]
    },
    {
        "question_id": 215,
        "db_id": "toxicology",
        "query": "SELECT\n  COUNT(DISTINCT CASE WHEN `T1`.`element` = 'i' THEN `T1`.`atom_id` ELSE NULL END) AS `iodine_nums`,\n  COUNT(DISTINCT CASE WHEN `T1`.`element` = 's' THEN `T1`.`atom_id` ELSE NULL END) AS `sulfur_nums`\nFROM `atom` AS `T1`\nINNER JOIN `connected` AS `T2`\n  ON `T1`.`atom_id` = `T2`.`atom_id`\nINNER JOIN `bond` AS `T3`\n  ON `T2`.`bond_id` = `T3`.`bond_id`\nWHERE\n  `T3`.`bond_type` = '-'",
        "tables_extracted": [
            "atom",
            "connected",
            "bond"
        ]
    },
    {
        "question_id": 218,
        "db_id": "toxicology",
        "query": "SELECT\n  CAST(COUNT(DISTINCT CASE WHEN `T1`.`element` <> 'f' THEN `T2`.`molecule_id` ELSE NULL END) AS DOUBLE) * 100 / COUNT(DISTINCT `T2`.`molecule_id`)\nFROM `atom` AS `T1`\nINNER JOIN `molecule` AS `T2`\n  ON `T1`.`molecule_id` = `T2`.`molecule_id`\nWHERE\n  `T2`.`label` = '+'",
        "tables_extracted": [
            "atom",
            "molecule"
        ]
    },
    {
        "question_id": 219,
        "db_id": "toxicology",
        "query": "SELECT\n  CAST(COUNT(DISTINCT CASE WHEN `T2`.`label` = '+' THEN `T2`.`molecule_id` ELSE NULL END) AS DOUBLE) * 100 / COUNT(DISTINCT `T2`.`molecule_id`)\nFROM `atom` AS `T1`\nINNER JOIN `molecule` AS `T2`\n  ON `T1`.`molecule_id` = `T2`.`molecule_id`\nINNER JOIN `bond` AS `T3`\n  ON `T2`.`molecule_id` = `T3`.`molecule_id`\nWHERE\n  `T3`.`bond_type` = '#'",
        "tables_extracted": [
            "atom",
            "molecule",
            "bond"
        ]
    },
    {
        "question_id": 220,
        "db_id": "toxicology",
        "query": "SELECT DISTINCT\n  `T`.`element`\nFROM `atom` AS `T`\nWHERE\n  `T`.`molecule_id` = 'TR000'\nORDER BY\n  `T`.`element`\nLIMIT 3",
        "tables_extracted": [
            "atom"
        ]
    },
    {
        "question_id": 226,
        "db_id": "toxicology",
        "query": "SELECT\n  ROUND(\n    CAST(COUNT(CASE WHEN `T`.`bond_type` = '=' THEN `T`.`bond_id` ELSE NULL END) AS DOUBLE) * 100 / COUNT(`T`.`bond_id`),\n    5\n  )\nFROM `bond` AS `T`\nWHERE\n  `T`.`molecule_id` = 'TR008'",
        "tables_extracted": [
            "bond"
        ]
    },
    {
        "question_id": 227,
        "db_id": "toxicology",
        "query": "SELECT\n  ROUND(\n    CAST(COUNT(CASE WHEN `T`.`label` = '+' THEN `T`.`molecule_id` ELSE NULL END) AS DOUBLE) * 100 / COUNT(`T`.`molecule_id`),\n    3\n  )\nFROM `molecule` AS `t`",
        "tables_extracted": [
            "molecule"
        ]
    },
    {
        "question_id": 228,
        "db_id": "toxicology",
        "query": "SELECT\n  ROUND(\n    CAST(COUNT(CASE WHEN `T`.`element` = 'h' THEN `T`.`atom_id` ELSE NULL END) AS DOUBLE) * 100 / COUNT(`T`.`atom_id`),\n    4\n  )\nFROM `atom` AS `T`\nWHERE\n  `T`.`molecule_id` = 'TR206'",
        "tables_extracted": [
            "atom"
        ]
    },
    {
        "question_id": 230,
        "db_id": "toxicology",
        "query": "SELECT DISTINCT\n  `T1`.`element`,\n  `T2`.`label`\nFROM `atom` AS `T1`\nINNER JOIN `molecule` AS `T2`\n  ON `T1`.`molecule_id` = `T2`.`molecule_id`\nWHERE\n  `T2`.`molecule_id` = 'TR060'",
        "tables_extracted": [
            "atom",
            "molecule"
        ]
    },
    {
        "question_id": 231,
        "db_id": "toxicology",
        "query": "SELECT\n  `T`.`bond_type`\nFROM (\n  SELECT\n    `T1`.`bond_type`,\n    COUNT(`T1`.`molecule_id`)\n  FROM `bond` AS `T1`\n  WHERE\n    `T1`.`molecule_id` = 'TR010'\n  GROUP BY\n    `T1`.`bond_type`\n  ORDER BY\n    COUNT(`T1`.`molecule_id`) DESC\n  LIMIT 1\n) AS `T`",
        "tables_extracted": [
            "bond"
        ]
    },
    {
        "question_id": 232,
        "db_id": "toxicology",
        "query": "SELECT DISTINCT\n  `T2`.`molecule_id`\nFROM `bond` AS `T1`\nINNER JOIN `molecule` AS `T2`\n  ON `T1`.`molecule_id` = `T2`.`molecule_id`\nWHERE\n  `T1`.`bond_type` = '-' AND `T2`.`label` = '-'\nORDER BY\n  `T2`.`molecule_id`\nLIMIT 3",
        "tables_extracted": [
            "molecule",
            "bond"
        ]
    },
    {
        "question_id": 234,
        "db_id": "toxicology",
        "query": "SELECT\n  COUNT(`T2`.`bond_id`)\nFROM `bond` AS `T1`\nINNER JOIN `connected` AS `T2`\n  ON `T1`.`bond_id` = `T2`.`bond_id`\nWHERE\n  `T1`.`molecule_id` = 'TR009'\n  AND `T2`.`atom_id` = CONCAT(`T1`.`molecule_id`, '_1')\n  OR `T2`.`atom_id2` = CONCAT(`T1`.`molecule_id`, '_2')",
        "tables_extracted": [
            "connected",
            "bond"
        ]
    },
    {
        "question_id": 236,
        "db_id": "toxicology",
        "query": "SELECT\n  `T1`.`bond_type`,\n  `T2`.`atom_id`,\n  `T2`.`atom_id2`\nFROM `bond` AS `T1`\nINNER JOIN `connected` AS `T2`\n  ON `T1`.`bond_id` = `T2`.`bond_id`\nWHERE\n  `T2`.`bond_id` = 'TR001_6_9'",
        "tables_extracted": [
            "connected",
            "bond"
        ]
    },
    {
        "question_id": 239,
        "db_id": "toxicology",
        "query": "SELECT\n  COUNT(`T`.`bond_id`)\nFROM `connected` AS `T`\nWHERE\n  SUBSTR(`T`.`atom_id`, -2) = '19'",
        "tables_extracted": [
            "connected"
        ]
    },
    {
        "question_id": 240,
        "db_id": "toxicology",
        "query": "SELECT DISTINCT\n  `T`.`element`\nFROM `atom` AS `T`\nWHERE\n  `T`.`molecule_id` = 'TR004'",
        "tables_extracted": [
            "atom"
        ]
    },
    {
        "question_id": 242,
        "db_id": "toxicology",
        "query": "SELECT DISTINCT\n  `T2`.`molecule_id`\nFROM `atom` AS `T1`\nINNER JOIN `molecule` AS `T2`\n  ON `T1`.`molecule_id` = `T2`.`molecule_id`\nWHERE\n  SUBSTR(`T1`.`atom_id`, -2) BETWEEN '21' AND '25' AND `T2`.`label` = '+'",
        "tables_extracted": [
            "atom",
            "molecule"
        ]
    },
    {
        "question_id": 243,
        "db_id": "toxicology",
        "query": "SELECT\n  `T2`.`bond_id`\nFROM `atom` AS `T1`\nINNER JOIN `connected` AS `T2`\n  ON `T1`.`atom_id` = `T2`.`atom_id`\nWHERE\n  `T2`.`bond_id` IN (\n    SELECT\n      `T3`.`bond_id`\n    FROM `connected` AS `T3`\n    INNER JOIN `atom` AS `T4`\n      ON `T3`.`atom_id` = `T4`.`atom_id`\n    WHERE\n      `T4`.`element` = 'p'\n  )\n  AND `T1`.`element` = 'n'",
        "tables_extracted": [
            "atom",
            "connected"
        ]
    },
    {
        "question_id": 244,
        "db_id": "toxicology",
        "query": "SELECT\n  `T1`.`label`\nFROM `molecule` AS `T1`\nINNER JOIN (\n  SELECT\n    `T`.`molecule_id`,\n    COUNT(`T`.`bond_type`)\n  FROM `bond` AS `T`\n  WHERE\n    `T`.`bond_type` = '='\n  GROUP BY\n    `T`.`molecule_id`\n  ORDER BY\n    COUNT(`T`.`bond_type`) DESC\n  LIMIT 1\n) AS `T2`\n  ON `T1`.`molecule_id` = `T2`.`molecule_id`",
        "tables_extracted": [
            "molecule",
            "bond"
        ]
    },
    {
        "question_id": 245,
        "db_id": "toxicology",
        "query": "SELECT\n  CAST(COUNT(`T2`.`bond_id`) AS DOUBLE) / COUNT(`T1`.`atom_id`)\nFROM `atom` AS `T1`\nINNER JOIN `connected` AS `T2`\n  ON `T1`.`atom_id` = `T2`.`atom_id`\nWHERE\n  `T1`.`element` = 'i'",
        "tables_extracted": [
            "atom",
            "connected"
        ]
    },
    {
        "question_id": 247,
        "db_id": "toxicology",
        "query": "SELECT DISTINCT\n  `T`.`element`\nFROM `atom` AS `T`\nWHERE\n  NOT `T`.`element` IN (\n    SELECT DISTINCT\n      `T1`.`element`\n    FROM `atom` AS `T1`\n    INNER JOIN `connected` AS `T2`\n      ON `T1`.`atom_id` = `T2`.`atom_id`\n  )",
        "tables_extracted": [
            "atom",
            "connected"
        ]
    },
    {
        "question_id": 248,
        "db_id": "toxicology",
        "query": "SELECT\n  `T2`.`atom_id`,\n  `T2`.`atom_id2`\nFROM `atom` AS `T1`\nINNER JOIN `connected` AS `T2`\n  ON `T1`.`atom_id` = `T2`.`atom_id`\nINNER JOIN `bond` AS `T3`\n  ON `T2`.`bond_id` = `T3`.`bond_id`\nWHERE\n  `T3`.`bond_type` = '#' AND `T3`.`molecule_id` = 'TR041'",
        "tables_extracted": [
            "atom",
            "connected",
            "bond"
        ]
    },
    {
        "question_id": 249,
        "db_id": "toxicology",
        "query": "SELECT\n  `T2`.`element`\nFROM `connected` AS `T1`\nINNER JOIN `atom` AS `T2`\n  ON `T1`.`atom_id` = `T2`.`atom_id`\nWHERE\n  `T1`.`bond_id` = 'TR144_8_19'",
        "tables_extracted": [
            "atom",
            "connected"
        ]
    },
    {
        "question_id": 253,
        "db_id": "toxicology",
        "query": "SELECT DISTINCT\n  `T3`.`element`\nFROM `bond` AS `T1`\nINNER JOIN `connected` AS `T2`\n  ON `T1`.`bond_id` = `T2`.`bond_id`\nINNER JOIN `atom` AS `T3`\n  ON `T2`.`atom_id` = `T3`.`atom_id`\nWHERE\n  `T1`.`bond_type` = '#'",
        "tables_extracted": [
            "atom",
            "connected",
            "bond"
        ]
    },
    {
        "question_id": 255,
        "db_id": "toxicology",
        "query": "SELECT\n  ROUND(\n    CAST(COUNT(CASE WHEN `T2`.`label` = '+' THEN `T1`.`bond_id` ELSE NULL END) AS DOUBLE) * 100 / COUNT(`T1`.`bond_id`),\n    5\n  )\nFROM `bond` AS `T1`\nINNER JOIN `molecule` AS `T2`\n  ON `T1`.`molecule_id` = `T2`.`molecule_id`\nWHERE\n  `T1`.`bond_type` = '-'",
        "tables_extracted": [
            "molecule",
            "bond"
        ]
    },
    {
        "question_id": 260,
        "db_id": "toxicology",
        "query": "SELECT\n  COUNT(`T1`.`atom_id`)\nFROM `atom` AS `T1`\nINNER JOIN `molecule` AS `T2`\n  ON `T1`.`molecule_id` = `T2`.`molecule_id`\nINNER JOIN `bond` AS `T3`\n  ON `T2`.`molecule_id` = `T3`.`molecule_id`\nWHERE\n  `T3`.`bond_type` = '#' AND `T1`.`element` IN ('p', 'br')",
        "tables_extracted": [
            "atom",
            "molecule",
            "bond"
        ]
    },
    {
        "question_id": 263,
        "db_id": "toxicology",
        "query": "SELECT\n  CAST(COUNT(CASE WHEN `T`.`element` = 'cl' THEN `T`.`atom_id` ELSE NULL END) AS DOUBLE) * 100 / COUNT(`T`.`atom_id`)\nFROM (\n  SELECT\n    `T1`.`atom_id`,\n    `T1`.`element`\n  FROM `atom` AS `T1`\n  INNER JOIN `molecule` AS `T2`\n    ON `T1`.`molecule_id` = `T2`.`molecule_id`\n  INNER JOIN `bond` AS `T3`\n    ON `T2`.`molecule_id` = `T3`.`molecule_id`\n  WHERE\n    `T3`.`bond_type` = '-'\n) AS `T`",
        "tables_extracted": [
            "atom",
            "molecule",
            "bond"
        ]
    },
    {
        "question_id": 268,
        "db_id": "toxicology",
        "query": "SELECT\n  `T2`.`element`\nFROM `connected` AS `T1`\nINNER JOIN `atom` AS `T2`\n  ON `T1`.`atom_id` = `T2`.`atom_id`\nWHERE\n  `T1`.`bond_id` = 'TR001_10_11'",
        "tables_extracted": [
            "atom",
            "connected"
        ]
    },
    {
        "question_id": 273,
        "db_id": "toxicology",
        "query": "SELECT\n  CAST(COUNT(CASE WHEN `T1`.`element` = 'cl' THEN `T1`.`element` ELSE NULL END) AS DOUBLE) * 100 / COUNT(`T1`.`element`)\nFROM `atom` AS `T1`\nINNER JOIN `molecule` AS `T2`\n  ON `T1`.`molecule_id` = `T2`.`molecule_id`\nWHERE\n  `T2`.`label` = '+'",
        "tables_extracted": [
            "atom",
            "molecule"
        ]
    },
    {
        "question_id": 281,
        "db_id": "toxicology",
        "query": "SELECT DISTINCT\n  `T1`.`element`\nFROM `atom` AS `T1`\nINNER JOIN `molecule` AS `T2`\n  ON `T1`.`molecule_id` = `T2`.`molecule_id`\nWHERE\n  `T2`.`label` = '+'\n  AND SUBSTR(`T1`.`atom_id`, -1) = '4'\n  AND LENGTH(`T1`.`atom_id`) = 7",
        "tables_extracted": [
            "atom",
            "molecule"
        ]
    },
    {
        "question_id": 282,
        "db_id": "toxicology",
        "query": "WITH SubQuery AS (SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006') SELECT CAST(COUNT(CASE WHEN element = 'h' THEN atom_id ELSE NULL END) AS DECIMAL(10,2)) / NULLIF(COUNT(atom_id), 0) AS ratio, label FROM SubQuery GROUP BY label",
        "tables_extracted": [
            "atom",
            "SubQuery",
            "molecule"
        ]
    },
    {
        "question_id": 327,
        "db_id": "toxicology",
        "query": "SELECT\n  `T`.`molecule_id`\nFROM (\n  SELECT\n    `T1`.`molecule_id`,\n    COUNT(`T2`.`atom_id`)\n  FROM `molecule` AS `T1`\n  INNER JOIN `atom` AS `T2`\n    ON `T1`.`molecule_id` = `T2`.`molecule_id`\n  WHERE\n    `T1`.`label` = '-'\n  GROUP BY\n    `T1`.`molecule_id`\n  HAVING\n    COUNT(`T2`.`atom_id`) > 5\n) AS `t`",
        "tables_extracted": [
            "atom",
            "molecule"
        ]
    },
    {
        "question_id": 5,
        "db_id": "california_schools",
        "query": "SELECT  COUNT(DISTINCT `T2`.`School`) FROM `satscores` AS `T1` INNER JOIN `schools` AS `T2`  ON `T1`.`cds` = `T2`.`CDSCode` WHERE  `T2`.`Virtual` = 'F' AND `T1`.`AvgScrMath` > 400",
        "tables_extracted": [
            "schools",
            "satscores"
        ]
    },
    {
        "question_id": 11,
        "db_id": "california_schools",
        "query": "SELECT\n  `T2`.`CDSCode`\nFROM `schools` AS `T1`\nINNER JOIN `frpm` AS `T2`\n  ON `T1`.`CDSCode` = `T2`.`CDSCode`\nWHERE\n  `T2`.`Enrollment (K-12)` + `T2`.`Enrollment (Ages 5-17)` > 500",
        "tables_extracted": [
            "schools",
            "frpm"
        ]
    },
    {
        "question_id": 12,
        "db_id": "california_schools",
        "query": "SELECT\n  MAX(\n    CAST(`T1`.`Free Meal Count (Ages 5-17)` AS DOUBLE) / `T1`.`Enrollment (Ages 5-17)`\n  )\nFROM `frpm` AS `T1`\nINNER JOIN `satscores` AS `T2`\n  ON `T1`.`CDSCode` = `T2`.`cds`\nWHERE\n  CAST(`T2`.`NumGE1500` AS DOUBLE) / `T2`.`NumTstTakr` > 0.3",
        "tables_extracted": [
            "satscores",
            "frpm"
        ]
    },
    {
        "question_id": 17,
        "db_id": "california_schools",
        "query": "SELECT\n  `CharterNum`,\n  `AvgScrWrite`,\n  RANK() OVER (ORDER BY `AvgScrWrite` DESC) AS `WritingScoreRank`\nFROM `schools` AS `T1`\nINNER JOIN `satscores` AS `T2`\n  ON `T1`.`CDSCode` = `T2`.`cds`\nWHERE\n  `T2`.`AvgScrWrite` > 499 AND NOT `CharterNum` IS NULL",
        "tables_extracted": [
            "schools",
            "satscores"
        ]
    },
    {
        "question_id": 23,
        "db_id": "california_schools",
        "query": "SELECT\n  `T1`.`School`,\n  `T1`.`Street`\nFROM `schools` AS `T1`\nINNER JOIN `frpm` AS `T2`\n  ON `T1`.`CDSCode` = `T2`.`CDSCode`\nWHERE\n  `T2`.`Enrollment (K-12)` - `T2`.`Enrollment (Ages 5-17)` > 30",
        "tables_extracted": [
            "schools",
            "frpm"
        ]
    },
    {
        "question_id": 24,
        "db_id": "california_schools",
        "query": "SELECT\n  `T2`.`School Name`\nFROM `satscores` AS `T1`\nINNER JOIN `frpm` AS `T2`\n  ON `T1`.`cds` = `T2`.`CDSCode`\nWHERE\n  CAST(`T2`.`Free Meal Count (K-12)` AS DOUBLE) / `T2`.`Enrollment (K-12)` > 0.1\n  AND `T1`.`NumGE1500` > 0",
        "tables_extracted": [
            "satscores",
            "frpm"
        ]
    },
    {
        "question_id": 25,
        "db_id": "california_schools",
        "query": "SELECT\n  `T1`.`sname`,\n  `T2`.`Charter Funding Type`\nFROM `satscores` AS `T1`\nINNER JOIN `frpm` AS `T2`\n  ON `T1`.`cds` = `T2`.`CDSCode`\nWHERE\n  `T2`.`District Name` LIKE 'Riverside%'\nGROUP BY\n  `T1`.`sname`,\n  `T2`.`Charter Funding Type`\nHAVING\n  CAST(SUM(`T1`.`AvgScrMath`) AS DOUBLE) / COUNT(`T1`.`cds`) > 400",
        "tables_extracted": [
            "satscores",
            "frpm"
        ]
    },
    {
        "question_id": 26,
        "db_id": "california_schools",
        "query": "SELECT\n  `T1`.`School Name`,\n  `T2`.`Street`,\n  `T2`.`City`,\n  `T2`.`State`,\n  `T2`.`Zip`\nFROM `frpm` AS `T1`\nINNER JOIN `schools` AS `T2`\n  ON `T1`.`CDSCode` = `T2`.`CDSCode`\nWHERE\n  `T2`.`County` = 'Monterey'\n  AND `T1`.`Free Meal Count (Ages 5-17)` > 800\n  AND `T1`.`School Type` = 'High Schools (Public)'",
        "tables_extracted": [
            "schools",
            "frpm"
        ]
    },
    {
        "question_id": 27,
        "db_id": "california_schools",
        "query": "SELECT\n  `T2`.`School`,\n  `T1`.`AvgScrWrite`,\n  `T2`.`Phone`\nFROM `schools` AS `T2`\nLEFT JOIN `satscores` AS `T1`\n  ON `T2`.`CDSCode` = `T1`.`cds`\nWHERE\n  DATE_FORMAT(CAST(`T2`.`OpenDate` AS DATETIME), '%Y') > '1991'\n  OR DATE_FORMAT(CAST(`T2`.`ClosedDate` AS DATETIME), '%Y') < '2000'",
        "tables_extracted": [
            "schools",
            "satscores"
        ]
    },
    {
        "question_id": 28,
        "db_id": "california_schools",
        "query": "SELECT\n  `T2`.`School`,\n  `T2`.`DOC`\nFROM `frpm` AS `T1`\nINNER JOIN `schools` AS `T2`\n  ON `T1`.`CDSCode` = `T2`.`CDSCode`\nWHERE\n  `T2`.`FundingType` = 'Locally funded'\n  AND (\n    `T1`.`Enrollment (K-12)` - `T1`.`Enrollment (Ages 5-17)`\n  ) > (\n    SELECT\n      AVG(`T3`.`Enrollment (K-12)` - `T3`.`Enrollment (Ages 5-17)`)\n    FROM `frpm` AS `T3`\n    INNER JOIN `schools` AS `T4`\n      ON `T3`.`CDSCode` = `T4`.`CDSCode`\n    WHERE\n      `T4`.`FundingType` = 'Locally funded'\n  )",
        "tables_extracted": [
            "schools",
            "frpm"
        ]
    },
    {
        "question_id": 31,
        "db_id": "california_schools",
        "query": "SELECT\n  CAST(`Free Meal Count (K-12)` AS DOUBLE) / `Enrollment (K-12)`\nFROM `frpm`\nORDER BY\n  `Enrollment (K-12)` DESC\nLIMIT 2\nOFFSET 9",
        "tables_extracted": [
            "frpm"
        ]
    },
    {
        "question_id": 32,
        "db_id": "california_schools",
        "query": "SELECT\n  CAST(`T1`.`FRPM Count (K-12)` AS DOUBLE) / `T1`.`Enrollment (K-12)`\nFROM `frpm` AS `T1`\nINNER JOIN `schools` AS `T2`\n  ON `T1`.`CDSCode` = `T2`.`CDSCode`\nWHERE\n  `T2`.`SOC` = 66\nORDER BY\n  `T1`.`FRPM Count (K-12)` DESC\nLIMIT 5",
        "tables_extracted": [
            "schools",
            "frpm"
        ]
    },
    {
        "question_id": 37,
        "db_id": "california_schools",
        "query": "SELECT\n  `T2`.`Street`,\n  `T2`.`City`,\n  `T2`.`State`,\n  `T2`.`Zip`\nFROM `satscores` AS `T1`\nINNER JOIN `schools` AS `T2`\n  ON `T1`.`cds` = `T2`.`CDSCode`\nORDER BY\n  CAST(`T1`.`NumGE1500` AS DOUBLE) / `T1`.`NumTstTakr` ASC\nLIMIT 1",
        "tables_extracted": [
            "schools",
            "satscores"
        ]
    },
    {
        "question_id": 36,
        "db_id": "california_schools",
        "query": "SELECT\n  `T2`.`AdmFName1`,\n  `T2`.`AdmLName1`,\n  `T2`.`AdmFName2`,\n  `T2`.`AdmLName2`,\n  `T2`.`AdmFName3`,\n  `T2`.`AdmLName3`\nFROM `satscores` AS `T1`\nINNER JOIN `schools` AS `T2`\n  ON `T1`.`cds` = `T2`.`CDSCode`\nORDER BY\n  `T1`.`NumGE1500` DESC\nLIMIT 1",
        "tables_extracted": [
            "schools",
            "satscores"
        ]
    },
    {
        "question_id": 39,
        "db_id": "california_schools",
        "query": "SELECT\n  AVG(`T1`.`NumTstTakr`)\nFROM `satscores` AS `T1`\nINNER JOIN `schools` AS `T2`\n  ON `T1`.`cds` = `T2`.`CDSCode`\nWHERE\n  DATE_FORMAT(CAST(`T2`.`OpenDate` AS DATETIME), '%Y') = '1980'\n  AND `T2`.`County` = 'Fresno'",
        "tables_extracted": [
            "schools",
            "satscores"
        ]
    },
    {
        "question_id": 40,
        "db_id": "california_schools",
        "query": "SELECT\n  `T2`.`Phone`\nFROM `satscores` AS `T1`\nINNER JOIN `schools` AS `T2`\n  ON `T1`.`cds` = `T2`.`CDSCode`\nWHERE\n  `T2`.`District` = 'Fresno Unified' AND NOT `T1`.`AvgScrRead` IS NULL\nORDER BY\n  `T1`.`AvgScrRead` ASC\nLIMIT 1",
        "tables_extracted": [
            "schools",
            "satscores"
        ]
    },
    {
        "question_id": 41,
        "db_id": "california_schools",
        "query": "SELECT  School FROM ( SELECT T2.School, T1.AvgScrRead, RANK() OVER (PARTITION BY T2.County ORDER BY T1.AvgScrRead DESC) AS rnk FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Virtual = 'F') ranked_schools WHERE rnk <= 5",
        "tables_extracted": [
            "schools",
            "satscores"
        ]
    },
    {
        "question_id": 45,
        "db_id": "california_schools",
        "query": "SELECT\n  `T2`.`School`,\n  `T1`.`AvgScrWrite`\nFROM `satscores` AS `T1`\nINNER JOIN `schools` AS `T2`\n  ON `T1`.`cds` = `T2`.`CDSCode`\nWHERE\n  `T2`.`AdmFName1` = 'Ricci' AND `T2`.`AdmLName1` = 'Ulrich'",
        "tables_extracted": [
            "schools",
            "satscores"
        ]
    },
    {
        "question_id": 46,
        "db_id": "california_schools",
        "query": "SELECT\n  `T2`.`School`\nFROM `frpm` AS `T1`\nINNER JOIN `schools` AS `T2`\n  ON `T1`.`CDSCode` = `T2`.`CDSCode`\nWHERE\n  `T2`.`DOC` = 31\nORDER BY\n  `T1`.`Enrollment (K-12)` DESC\nLIMIT 1",
        "tables_extracted": [
            "schools",
            "frpm"
        ]
    },
    {
        "question_id": 47,
        "db_id": "california_schools",
        "query": "SELECT\n  CAST(COUNT(`School`) AS DOUBLE) / 12\nFROM `schools`\nWHERE\n  `DOC` = 52\n  AND `County` = 'Alameda'\n  AND DATE_FORMAT(CAST(`OpenDate` AS DATETIME), '%Y') = '1980'",
        "tables_extracted": [
            "schools"
        ]
    },
    {
        "question_id": 48,
        "db_id": "california_schools",
        "query": "SELECT\n  CAST(SUM(CASE WHEN `DOC` = 54 THEN 1 ELSE 0 END) AS DOUBLE) / SUM(CASE WHEN `DOC` = 52 THEN 1 ELSE 0 END)\nFROM `schools`\nWHERE\n  `StatusType` = 'Merged' AND `County` = 'Orange'",
        "tables_extracted": [
            "schools"
        ]
    },
    {
        "question_id": 50,
        "db_id": "california_schools",
        "query": "SELECT\n  `T2`.`MailStreet`,\n  `T2`.`School`\nFROM `satscores` AS `T1`\nINNER JOIN `schools` AS `T2`\n  ON `T1`.`cds` = `T2`.`CDSCode`\nORDER BY\n  `T1`.`AvgScrMath` DESC\nLIMIT 1\nOFFSET 6",
        "tables_extracted": [
            "schools",
            "satscores"
        ]
    },
    {
        "question_id": 62,
        "db_id": "california_schools",
        "query": "SELECT\n  COUNT(`T2`.`School`)\nFROM `frpm` AS `T1`\nINNER JOIN `schools` AS `T2`\n  ON `T1`.`CDSCode` = `T2`.`CDSCode`\nWHERE\n  `T2`.`County` = 'Los Angeles'\n  AND `T2`.`Charter` = 0\n  AND CAST(`T1`.`Free Meal Count (K-12)` AS DOUBLE) * 100 / `T1`.`Enrollment (K-12)` < 0.18",
        "tables_extracted": [
            "schools",
            "frpm"
        ]
    },
    {
        "question_id": 72,
        "db_id": "california_schools",
        "query": "SELECT\n  `T1`.`Enrollment (Ages 5-17)`\nFROM `frpm` AS `T1`\nINNER JOIN `schools` AS `T2`\n  ON `T1`.`CDSCode` = `T2`.`CDSCode`\nWHERE\n  `T2`.`EdOpsCode` = 'SSS'\n  AND `T2`.`City` = 'Fremont'\n  AND `T1`.`Academic Year` BETWEEN 2014 AND 2015",
        "tables_extracted": [
            "schools",
            "frpm"
        ]
    },
    {
        "question_id": 77,
        "db_id": "california_schools",
        "query": "SELECT\n  `T2`.`School`,\n  `T1`.`FRPM Count (Ages 5-17)` * 100 / `T1`.`Enrollment (Ages 5-17)`\nFROM `frpm` AS `T1`\nINNER JOIN `schools` AS `T2`\n  ON `T1`.`CDSCode` = `T2`.`CDSCode`\nWHERE\n  `T2`.`County` = 'Los Angeles' AND `T2`.`GSserved` = 'K-9'",
        "tables_extracted": [
            "schools",
            "frpm"
        ]
    },
    {
        "question_id": 79,
        "db_id": "california_schools",
        "query": "SELECT\n  `County`,\n  COUNT(`Virtual`)\nFROM `schools`\nWHERE\n  (\n    `County` = 'San Diego' OR `County` = 'Santa Barbara'\n  ) AND `Virtual` = 'F'\nGROUP BY\n  `County`\nORDER BY\n  COUNT(`Virtual`) DESC\nLIMIT 1",
        "tables_extracted": [
            "schools"
        ]
    },
    {
        "question_id": 82,
        "db_id": "california_schools",
        "query": "SELECT\n  `GSoffered`\nFROM `schools`\nORDER BY\n  ABS(`longitude`) DESC\nLIMIT 1",
        "tables_extracted": [
            "schools"
        ]
    },
    {
        "question_id": 83,
        "db_id": "california_schools",
        "query": "SELECT\n  `T2`.`City`,\n  COUNT(`T2`.`CDSCode`)\nFROM `frpm` AS `T1`\nINNER JOIN `schools` AS `T2`\n  ON `T1`.`CDSCode` = `T2`.`CDSCode`\nWHERE\n  `T2`.`Magnet` = 1\n  AND `T2`.`GSoffered` = 'K-8'\n  AND `T1`.`NSLP Provision Status` = 'Multiple Provision Types'\nGROUP BY\n  `T2`.`City`",
        "tables_extracted": [
            "schools",
            "frpm"
        ]
    },
    {
        "question_id": 85,
        "db_id": "california_schools",
        "query": "SELECT\n  `T1`.`Free Meal Count (K-12)` * 100 / `T1`.`Enrollment (K-12)`,\n  `T1`.`District Code`\nFROM `frpm` AS `T1`\nINNER JOIN `schools` AS `T2`\n  ON `T1`.`CDSCode` = `T2`.`CDSCode`\nWHERE\n  `T2`.`AdmFName1` = 'Alusine'",
        "tables_extracted": [
            "schools",
            "frpm"
        ]
    },
    {
        "question_id": 87,
        "db_id": "california_schools",
        "query": "SELECT\n  `T2`.`AdmEmail1`,\n  `T2`.`AdmEmail2`\nFROM `frpm` AS `T1`\nINNER JOIN `schools` AS `T2`\n  ON `T1`.`CDSCode` = `T2`.`CDSCode`\nWHERE\n  `T2`.`County` = 'San Bernardino'\n  AND `T2`.`City` = 'San Bernardino'\n  AND `T2`.`DOC` = 54\n  AND DATE_FORMAT(CAST(`T2`.`OpenDate` AS DATETIME), '%Y') BETWEEN '2009' AND '2010'\n  AND `T2`.`SOC` = 62",
        "tables_extracted": [
            "schools",
            "frpm"
        ]
    },
    {
        "question_id": 89,
        "db_id": "financial",
        "query": "SELECT\n  COUNT(`T2`.`account_id`)\nFROM `district` AS `T1`\nINNER JOIN `account` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nWHERE\n  `T1`.`A3` = 'east Bohemia' AND `T2`.`frequency` = 'POPLATEK PO OBRATU'",
        "tables_extracted": [
            "district",
            "account"
        ]
    },
    {
        "question_id": 92,
        "db_id": "financial",
        "query": "SELECT\n  COUNT(DISTINCT `T2`.`district_id`)\nFROM `client` AS `T1`\nINNER JOIN `district` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nWHERE\n  `T1`.`gender` = 'F' AND `T2`.`A11` BETWEEN 6000 AND 10000",
        "tables_extracted": [
            "district",
            "client"
        ]
    },
    {
        "question_id": 93,
        "db_id": "financial",
        "query": "SELECT\n  COUNT(`T1`.`client_id`)\nFROM `client` AS `T1`\nINNER JOIN `district` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nWHERE\n  `T1`.`gender` = 'M' AND `T2`.`A3` = 'north Bohemia' AND `T2`.`A11` > 8000",
        "tables_extracted": [
            "district",
            "client"
        ]
    },
    {
        "question_id": 94,
        "db_id": "financial",
        "query": "SELECT\n  `T1`.`account_id`,\n  (\n    SELECT\n      MAX(`A11`) - MIN(`A11`)\n    FROM `district`\n  )\nFROM `account` AS `T1`\nINNER JOIN `district` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nINNER JOIN `disp` AS `T3`\n  ON `T1`.`account_id` = `T3`.`account_id`\nINNER JOIN `client` AS `T4`\n  ON `T3`.`client_id` = `T4`.`client_id`\nWHERE\n  `T2`.`district_id` = (\n    SELECT\n      `district_id`\n    FROM `client`\n    WHERE\n      `gender` = 'F'\n    ORDER BY\n      `birth_date` ASC\n    LIMIT 1\n  )\nORDER BY\n  `T2`.`A11` DESC\nLIMIT 1",
        "tables_extracted": [
            "district",
            "account",
            "disp",
            "client"
        ]
    },
    {
        "question_id": 95,
        "db_id": "financial",
        "query": "SELECT\n  `T1`.`account_id`\nFROM `account` AS `T1`\nINNER JOIN `disp` AS `T2`\n  ON `T1`.`account_id` = `T2`.`account_id`\nINNER JOIN `client` AS `T3`\n  ON `T2`.`client_id` = `T3`.`client_id`\nINNER JOIN `district` AS `T4`\n  ON `T4`.`district_id` = `T1`.`district_id`\nWHERE\n  `T2`.`client_id` = (\n    SELECT\n      `client_id`\n    FROM `client`\n    ORDER BY\n      `birth_date` DESC\n    LIMIT 1\n  )\nGROUP BY\n  `T4`.`A11`,\n  `T1`.`account_id`",
        "tables_extracted": [
            "district",
            "account",
            "disp",
            "client"
        ]
    },
    {
        "question_id": 98,
        "db_id": "financial",
        "query": "SELECT\n  `T2`.`account_id`\nFROM `loan` AS `T1`\nINNER JOIN `account` AS `T2`\n  ON `T1`.`account_id` = `T2`.`account_id`\nWHERE\n  DATE_FORMAT(CAST(`T1`.`date` AS DATETIME), '%Y') = '1997'\n  AND `T2`.`frequency` = 'POPLATEK TYDNE'\nORDER BY\n  `T1`.`amount`\nLIMIT 1",
        "tables_extracted": [
            "loan",
            "account"
        ]
    },
    {
        "question_id": 99,
        "db_id": "financial",
        "query": "SELECT\n  `T1`.`account_id`\nFROM `loan` AS `T1`\nINNER JOIN `account` AS `T2`\n  ON `T1`.`account_id` = `T2`.`account_id`\nWHERE\n  DATE_FORMAT(CAST(`T2`.`date` AS DATETIME), '%Y') = '1993'\n  AND `T1`.`duration` > 12\nORDER BY\n  `T1`.`amount` DESC\nLIMIT 1",
        "tables_extracted": [
            "loan",
            "account"
        ]
    },
    {
        "question_id": 100,
        "db_id": "financial",
        "query": "SELECT\n  COUNT(`T2`.`client_id`)\nFROM `district` AS `T1`\nINNER JOIN `client` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nWHERE\n  `T2`.`gender` = 'F'\n  AND DATE_FORMAT(CAST(`T2`.`birth_date` AS DATETIME), '%Y') < '1950'\n  AND `T1`.`A2` = 'Sokolov'",
        "tables_extracted": [
            "district",
            "client"
        ]
    },
    {
        "question_id": 112,
        "db_id": "financial",
        "query": "SELECT\n  `T1`.`A2`\nFROM `district` AS `T1`\nINNER JOIN `client` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nWHERE\n  `T2`.`birth_date` = '1976-01-29' AND `T2`.`gender` = 'F'",
        "tables_extracted": [
            "district",
            "client"
        ]
    },
    {
        "question_id": 115,
        "db_id": "financial",
        "query": "SELECT\n  CAST(SUM(`T1`.`gender` = 'M') AS DOUBLE) * 100 / COUNT(`T1`.`client_id`)\nFROM `client` AS `T1`\nINNER JOIN `district` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nWHERE\n  `T2`.`A3` = 'south Bohemia'\nGROUP BY\n  `T2`.`A4`\nORDER BY\n  `T2`.`A4` DESC\nLIMIT 1",
        "tables_extracted": [
            "district",
            "client"
        ]
    },
    {
        "question_id": 116,
        "db_id": "financial",
        "query": "SELECT\n  CAST((\n    SUM(CASE WHEN `T3`.`date` = '1998-12-27' THEN `T3`.`balance` ELSE 0 END) - SUM(CASE WHEN `T3`.`date` = '1993-03-22' THEN `T3`.`balance` ELSE 0 END)\n  ) AS DOUBLE) * 100 / SUM(CASE WHEN `T3`.`date` = '1993-03-22' THEN `T3`.`balance` ELSE 0 END)\nFROM `loan` AS `T1`\nINNER JOIN `account` AS `T2`\n  ON `T1`.`account_id` = `T2`.`account_id`\nINNER JOIN `trans` AS `T3`\n  ON `T3`.`account_id` = `T2`.`account_id`\nWHERE\n  `T1`.`date` = '1993-07-05'",
        "tables_extracted": [
            "trans",
            "loan",
            "account"
        ]
    },
    {
        "question_id": 117,
        "db_id": "financial",
        "query": "SELECT\n  (\n    CAST(SUM(CASE WHEN `status` = 'A' THEN `amount` ELSE 0 END) AS DOUBLE) * 100\n  ) / SUM(`amount`)\nFROM `loan`",
        "tables_extracted": [
            "loan"
        ]
    },
    {
        "question_id": 118,
        "db_id": "financial",
        "query": "SELECT\n  CAST(SUM(`status` = 'C') AS DOUBLE) * 100 / COUNT(`account_id`)\nFROM `loan`\nWHERE\n  `amount` < 100000",
        "tables_extracted": [
            "loan"
        ]
    },
    {
        "question_id": 125,
        "db_id": "financial",
        "query": "SELECT\n  CAST((\n    `T3`.`A13` - `T3`.`A12`\n  ) AS DOUBLE) * 100 / `T3`.`A12`\nFROM `loan` AS `T1`\nINNER JOIN `account` AS `T2`\n  ON `T1`.`account_id` = `T2`.`account_id`\nINNER JOIN `district` AS `T3`\n  ON `T2`.`district_id` = `T3`.`district_id`\nWHERE\n  `T1`.`status` = 'D'",
        "tables_extracted": [
            "loan",
            "district",
            "account"
        ]
    },
    {
        "question_id": 128,
        "db_id": "financial",
        "query": "SELECT\n  `T2`.`A2`,\n  COUNT(`T1`.`client_id`)\nFROM `client` AS `T1`\nINNER JOIN `district` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nWHERE\n  `T1`.`gender` = 'F'\nGROUP BY\n  `T2`.`district_id`,\n  `T2`.`A2`\nORDER BY\n  COUNT(`T1`.`client_id`) DESC\nLIMIT 9",
        "tables_extracted": [
            "district",
            "client"
        ]
    },
    {
        "question_id": 136,
        "db_id": "financial",
        "query": "SELECT\n  COUNT(`T1`.`account_id`)\nFROM `account` AS `T1`\nINNER JOIN `loan` AS `T2`\n  ON `T1`.`account_id` = `T2`.`account_id`\nWHERE\n  `T2`.`date` BETWEEN '1995-01-01' AND '1997-12-31'\n  AND `T1`.`frequency` = 'POPLATEK MESICNE'\n  AND `T2`.`amount` >= 250000",
        "tables_extracted": [
            "loan",
            "account"
        ]
    },
    {
        "question_id": 137,
        "db_id": "financial",
        "query": "SELECT\n  COUNT(`T1`.`account_id`)\nFROM `account` AS `T1`\nINNER JOIN `district` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nINNER JOIN `loan` AS `T3`\n  ON `T1`.`account_id` = `T3`.`account_id`\nWHERE\n  `T1`.`district_id` = 1 AND (\n    `T3`.`status` = 'C' OR `T3`.`status` = 'D'\n  )",
        "tables_extracted": [
            "loan",
            "district",
            "account"
        ]
    },
    {
        "question_id": 138,
        "db_id": "financial",
        "query": "SELECT\n  COUNT(`T1`.`client_id`)\nFROM `client` AS `T1`\nINNER JOIN `district` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nWHERE\n  `T1`.`gender` = 'M'\n  AND `T2`.`A15` = (\n    SELECT\n      `T3`.`A15`\n    FROM `district` AS `T3`\n    ORDER BY\n      `T3`.`A15` DESC\n    LIMIT 1\n    OFFSET 1\n  )",
        "tables_extracted": [
            "district",
            "client"
        ]
    },
    {
        "question_id": 129,
        "db_id": "financial",
        "query": "SELECT DISTINCT\n  `T1`.`A2`\nFROM `district` AS `T1`\nINNER JOIN `account` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nINNER JOIN `trans` AS `T3`\n  ON `T2`.`account_id` = `T3`.`account_id`\nWHERE\n  `T3`.`type` = 'VYDAJ' AND `T3`.`date` LIKE '1996-01%'\nORDER BY\n  `A2` ASC\nLIMIT 10",
        "tables_extracted": [
            "trans",
            "district",
            "account"
        ]
    },
    {
        "question_id": 137,
        "db_id": "financial",
        "query": "SELECT\n  COUNT(`T1`.`account_id`)\nFROM `account` AS `T1`\nINNER JOIN `district` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nINNER JOIN `loan` AS `T3`\n  ON `T1`.`account_id` = `T3`.`account_id`\nWHERE\n  `T1`.`district_id` = 1 AND (\n    `T3`.`status` = 'C' OR `T3`.`status` = 'D'\n  )",
        "tables_extracted": [
            "loan",
            "district",
            "account"
        ]
    },
    {
        "question_id": 138,
        "db_id": "financial",
        "query": "SELECT\n  COUNT(`T1`.`client_id`)\nFROM `client` AS `T1`\nINNER JOIN `district` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nWHERE\n  `T1`.`gender` = 'M'\n  AND `T2`.`A15` = (\n    SELECT\n      `T3`.`A15`\n    FROM `district` AS `T3`\n    ORDER BY\n      `T3`.`A15` DESC\n    LIMIT 1\n    OFFSET 1\n  )",
        "tables_extracted": [
            "district",
            "client"
        ]
    },
    {
        "question_id": 145,
        "db_id": "financial",
        "query": "SELECT\n  `T1`.`account_id`\nFROM `trans` AS `T1`\nINNER JOIN `account` AS `T2`\n  ON `T1`.`account_id` = `T2`.`account_id`\nWHERE\n  DATE_FORMAT(CAST(`T1`.`date` AS DATETIME), '%Y') = '1998'\n  AND `T1`.`operation` = 'VYBER KARTOU'\n  AND `T1`.`amount` < (\n    SELECT\n      AVG(`amount`)\n    FROM `trans`\n    WHERE\n      DATE_FORMAT(CAST(`date` AS DATETIME), '%Y') = '1998'\n  )",
        "tables_extracted": [
            "trans",
            "account"
        ]
    },
    {
        "question_id": 149,
        "db_id": "financial",
        "query": "SELECT\n  `T3`.`type`\nFROM `district` AS `T1`\nINNER JOIN `account` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nINNER JOIN `disp` AS `T3`\n  ON `T2`.`account_id` = `T3`.`account_id`\nWHERE\n  `T3`.`type` <> 'OWNER' AND `T1`.`A11` BETWEEN 8000 AND 9000",
        "tables_extracted": [
            "district",
            "account",
            "disp"
        ]
    },
    {
        "question_id": 152,
        "db_id": "financial",
        "query": "SELECT\n  AVG(`T1`.`A15`)\nFROM `district` AS `T1`\nINNER JOIN `account` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nWHERE\n  DATE_FORMAT(CAST(`T2`.`date` AS DATETIME), '%Y') >= '1997' AND `T1`.`A15` > 4000",
        "tables_extracted": [
            "district",
            "account"
        ]
    },
    {
        "question_id": 159,
        "db_id": "financial",
        "query": "SELECT\n  `T4`.`trans_id`\nFROM `client` AS `T1`\nINNER JOIN `disp` AS `T2`\n  ON `T1`.`client_id` = `T2`.`client_id`\nINNER JOIN `account` AS `T3`\n  ON `T2`.`account_id` = `T3`.`account_id`\nINNER JOIN `trans` AS `T4`\n  ON `T3`.`account_id` = `T4`.`account_id`\nWHERE\n  `T1`.`client_id` = 3356 AND `T4`.`operation` = 'VYBER'",
        "tables_extracted": [
            "trans",
            "account",
            "disp",
            "client"
        ]
    },
    {
        "question_id": 168,
        "db_id": "financial",
        "query": "SELECT\n  CAST(SUM(`T2`.`gender` = 'F') AS DOUBLE) * 100 / COUNT(`T2`.`client_id`)\nFROM `district` AS `T1`\nINNER JOIN `client` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nWHERE\n  `T1`.`A11` > 10000",
        "tables_extracted": [
            "district",
            "client"
        ]
    },
    {
        "question_id": 169,
        "db_id": "financial",
        "query": "SELECT\n  CAST((\n    SUM(\n      CASE\n        WHEN DATE_FORMAT(CAST(`T1`.`date` AS DATETIME), '%Y') = '1997'\n        THEN `T1`.`amount`\n        ELSE 0\n      END\n    ) - SUM(\n      CASE\n        WHEN DATE_FORMAT(CAST(`T1`.`date` AS DATETIME), '%Y') = '1996'\n        THEN `T1`.`amount`\n        ELSE 0\n      END\n    )\n  ) AS DOUBLE) * 100 / SUM(\n    CASE\n      WHEN DATE_FORMAT(CAST(`T1`.`date` AS DATETIME), '%Y') = '1996'\n      THEN `T1`.`amount`\n      ELSE 0\n    END\n  )\nFROM `loan` AS `T1`\nINNER JOIN `account` AS `T2`\n  ON `T1`.`account_id` = `T2`.`account_id`\nINNER JOIN `disp` AS `T3`\n  ON `T3`.`account_id` = `T2`.`account_id`\nINNER JOIN `client` AS `T4`\n  ON `T4`.`client_id` = `T3`.`client_id`\nWHERE\n  `T4`.`gender` = 'M' AND `T3`.`type` = 'OWNER'",
        "tables_extracted": [
            "loan",
            "account",
            "disp",
            "client"
        ]
    },
    {
        "question_id": 173,
        "db_id": "financial",
        "query": "SELECT\n  `T1`.`frequency`,\n  `T2`.`k_symbol`\nFROM `account` AS `T1`\nINNER JOIN (\n  SELECT\n    `account_id`,\n    `k_symbol`,\n    SUM(`amount`) AS `total_amount`\n  FROM `order`\n  GROUP BY\n    `account_id`,\n    `k_symbol`\n) AS `T2`\n  ON `T1`.`account_id` = `T2`.`account_id`\nWHERE\n  `T1`.`account_id` = 3 AND `T2`.`total_amount` = 3539",
        "tables_extracted": [
            "order",
            "account"
        ]
    },
    {
        "question_id": 186,
        "db_id": "financial",
        "query": "SELECT\n  CAST(SUM(`T1`.`gender` = 'M') AS DOUBLE) * 100 / COUNT(`T1`.`client_id`)\nFROM `client` AS `T1`\nINNER JOIN `district` AS `T3`\n  ON `T1`.`district_id` = `T3`.`district_id`\nINNER JOIN `account` AS `T2`\n  ON `T2`.`district_id` = `T3`.`district_id`\nINNER JOIN `disp` AS `T4`\n  ON `T1`.`client_id` = `T4`.`client_id` AND `T2`.`account_id` = `T4`.`account_id`\nWHERE\n  `T2`.`frequency` = 'POPLATEK TYDNE'",
        "tables_extracted": [
            "district",
            "account",
            "disp",
            "client"
        ]
    },
    {
        "question_id": 189,
        "db_id": "financial",
        "query": "SELECT\n  `T3`.`account_id`\nFROM `client` AS `T1`\nINNER JOIN `district` AS `T2`\n  ON `T1`.`district_id` = `T2`.`district_id`\nINNER JOIN `account` AS `T3`\n  ON `T2`.`district_id` = `T3`.`district_id`\nINNER JOIN `disp` AS `T4`\n  ON `T1`.`client_id` = `T4`.`client_id` AND `T4`.`account_id` = `T3`.`account_id`\nWHERE\n  `T1`.`gender` = 'F'\nORDER BY\n  `T1`.`birth_date` ASC,\n  `T2`.`A11` ASC\nLIMIT 1",
        "tables_extracted": [
            "district",
            "account",
            "disp",
            "client"
        ]
    },
    {
        "question_id": 192,
        "db_id": "financial",
        "query": "SELECT\n  AVG(`T2`.`amount`)\nFROM `account` AS `T1`\nINNER JOIN `loan` AS `T2`\n  ON `T1`.`account_id` = `T2`.`account_id`\nWHERE\n  `T2`.`status` IN ('C', 'D') AND `T1`.`frequency` = 'POPLATEK PO OBRATU'",
        "tables_extracted": [
            "loan",
            "account"
        ]
    },
    {
        "question_id": 194,
        "db_id": "financial",
        "query": "SELECT\n  `T1`.`client_id`,\n  DATE_FORMAT(CAST(CURRENT_TIMESTAMP() AS DATETIME), '%Y') - DATE_FORMAT(CAST(`T3`.`birth_date` AS DATETIME), '%Y')\nFROM `disp` AS `T1`\nINNER JOIN `card` AS `T2`\n  ON `T2`.`disp_id` = `T1`.`disp_id`\nINNER JOIN `client` AS `T3`\n  ON `T1`.`client_id` = `T3`.`client_id`\nWHERE\n  `T2`.`type` = 'gold' AND `T1`.`type` = 'OWNER'",
        "tables_extracted": [
            "card",
            "disp",
            "client"
        ]
    }
]